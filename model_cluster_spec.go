/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ClusterSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterSpec{}

// ClusterSpec cluster specification
type ClusterSpec struct {
	BlueprintConfig *BlueprintConfig `json:"blueprintConfig,omitempty"`
	// The credentials to be used to interact with the cloud infrastructure
	CloudCredentials *string `json:"cloudCredentials,omitempty"`
	Config *ClusterSpecConfig `json:"config,omitempty"`
	Drift *DriftSpec `json:"drift,omitempty"`
	ProxyConfig *ProxyConfig `json:"proxyConfig,omitempty"`
	Sharing *Sharing `json:"sharing,omitempty"`
	SystemComponentsPlacement *SystemComponentsPlacement `json:"systemComponentsPlacement,omitempty"`
	// The type of the cluster this spec corresponds to
	Type *string `json:"type,omitempty"`
}

// NewClusterSpec instantiates a new ClusterSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterSpec() *ClusterSpec {
	this := ClusterSpec{}
	var type_ string = "aws-eks"
	this.Type = &type_
	return &this
}

// NewClusterSpecWithDefaults instantiates a new ClusterSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterSpecWithDefaults() *ClusterSpec {
	this := ClusterSpec{}
	var type_ string = "aws-eks"
	this.Type = &type_
	return &this
}

// GetBlueprintConfig returns the BlueprintConfig field value if set, zero value otherwise.
func (o *ClusterSpec) GetBlueprintConfig() BlueprintConfig {
	if o == nil || isNil(o.BlueprintConfig) {
		var ret BlueprintConfig
		return ret
	}
	return *o.BlueprintConfig
}

// GetBlueprintConfigOk returns a tuple with the BlueprintConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSpec) GetBlueprintConfigOk() (*BlueprintConfig, bool) {
	if o == nil || isNil(o.BlueprintConfig) {
		return nil, false
	}
	return o.BlueprintConfig, true
}

// HasBlueprintConfig returns a boolean if a field has been set.
func (o *ClusterSpec) HasBlueprintConfig() bool {
	if o != nil && !isNil(o.BlueprintConfig) {
		return true
	}

	return false
}

// SetBlueprintConfig gets a reference to the given BlueprintConfig and assigns it to the BlueprintConfig field.
func (o *ClusterSpec) SetBlueprintConfig(v BlueprintConfig) {
	o.BlueprintConfig = &v
}

// GetCloudCredentials returns the CloudCredentials field value if set, zero value otherwise.
func (o *ClusterSpec) GetCloudCredentials() string {
	if o == nil || isNil(o.CloudCredentials) {
		var ret string
		return ret
	}
	return *o.CloudCredentials
}

// GetCloudCredentialsOk returns a tuple with the CloudCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSpec) GetCloudCredentialsOk() (*string, bool) {
	if o == nil || isNil(o.CloudCredentials) {
		return nil, false
	}
	return o.CloudCredentials, true
}

// HasCloudCredentials returns a boolean if a field has been set.
func (o *ClusterSpec) HasCloudCredentials() bool {
	if o != nil && !isNil(o.CloudCredentials) {
		return true
	}

	return false
}

// SetCloudCredentials gets a reference to the given string and assigns it to the CloudCredentials field.
func (o *ClusterSpec) SetCloudCredentials(v string) {
	o.CloudCredentials = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *ClusterSpec) GetConfig() ClusterSpecConfig {
	if o == nil || isNil(o.Config) {
		var ret ClusterSpecConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSpec) GetConfigOk() (*ClusterSpecConfig, bool) {
	if o == nil || isNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *ClusterSpec) HasConfig() bool {
	if o != nil && !isNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given ClusterSpecConfig and assigns it to the Config field.
func (o *ClusterSpec) SetConfig(v ClusterSpecConfig) {
	o.Config = &v
}

// GetDrift returns the Drift field value if set, zero value otherwise.
func (o *ClusterSpec) GetDrift() DriftSpec {
	if o == nil || isNil(o.Drift) {
		var ret DriftSpec
		return ret
	}
	return *o.Drift
}

// GetDriftOk returns a tuple with the Drift field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSpec) GetDriftOk() (*DriftSpec, bool) {
	if o == nil || isNil(o.Drift) {
		return nil, false
	}
	return o.Drift, true
}

// HasDrift returns a boolean if a field has been set.
func (o *ClusterSpec) HasDrift() bool {
	if o != nil && !isNil(o.Drift) {
		return true
	}

	return false
}

// SetDrift gets a reference to the given DriftSpec and assigns it to the Drift field.
func (o *ClusterSpec) SetDrift(v DriftSpec) {
	o.Drift = &v
}

// GetProxyConfig returns the ProxyConfig field value if set, zero value otherwise.
func (o *ClusterSpec) GetProxyConfig() ProxyConfig {
	if o == nil || isNil(o.ProxyConfig) {
		var ret ProxyConfig
		return ret
	}
	return *o.ProxyConfig
}

// GetProxyConfigOk returns a tuple with the ProxyConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSpec) GetProxyConfigOk() (*ProxyConfig, bool) {
	if o == nil || isNil(o.ProxyConfig) {
		return nil, false
	}
	return o.ProxyConfig, true
}

// HasProxyConfig returns a boolean if a field has been set.
func (o *ClusterSpec) HasProxyConfig() bool {
	if o != nil && !isNil(o.ProxyConfig) {
		return true
	}

	return false
}

// SetProxyConfig gets a reference to the given ProxyConfig and assigns it to the ProxyConfig field.
func (o *ClusterSpec) SetProxyConfig(v ProxyConfig) {
	o.ProxyConfig = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *ClusterSpec) GetSharing() Sharing {
	if o == nil || isNil(o.Sharing) {
		var ret Sharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSpec) GetSharingOk() (*Sharing, bool) {
	if o == nil || isNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *ClusterSpec) HasSharing() bool {
	if o != nil && !isNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given Sharing and assigns it to the Sharing field.
func (o *ClusterSpec) SetSharing(v Sharing) {
	o.Sharing = &v
}

// GetSystemComponentsPlacement returns the SystemComponentsPlacement field value if set, zero value otherwise.
func (o *ClusterSpec) GetSystemComponentsPlacement() SystemComponentsPlacement {
	if o == nil || isNil(o.SystemComponentsPlacement) {
		var ret SystemComponentsPlacement
		return ret
	}
	return *o.SystemComponentsPlacement
}

// GetSystemComponentsPlacementOk returns a tuple with the SystemComponentsPlacement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSpec) GetSystemComponentsPlacementOk() (*SystemComponentsPlacement, bool) {
	if o == nil || isNil(o.SystemComponentsPlacement) {
		return nil, false
	}
	return o.SystemComponentsPlacement, true
}

// HasSystemComponentsPlacement returns a boolean if a field has been set.
func (o *ClusterSpec) HasSystemComponentsPlacement() bool {
	if o != nil && !isNil(o.SystemComponentsPlacement) {
		return true
	}

	return false
}

// SetSystemComponentsPlacement gets a reference to the given SystemComponentsPlacement and assigns it to the SystemComponentsPlacement field.
func (o *ClusterSpec) SetSystemComponentsPlacement(v SystemComponentsPlacement) {
	o.SystemComponentsPlacement = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ClusterSpec) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSpec) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ClusterSpec) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ClusterSpec) SetType(v string) {
	o.Type = &v
}

func (o ClusterSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BlueprintConfig) {
		toSerialize["blueprintConfig"] = o.BlueprintConfig
	}
	if !isNil(o.CloudCredentials) {
		toSerialize["cloudCredentials"] = o.CloudCredentials
	}
	if !isNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !isNil(o.Drift) {
		toSerialize["drift"] = o.Drift
	}
	if !isNil(o.ProxyConfig) {
		toSerialize["proxyConfig"] = o.ProxyConfig
	}
	if !isNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !isNil(o.SystemComponentsPlacement) {
		toSerialize["systemComponentsPlacement"] = o.SystemComponentsPlacement
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableClusterSpec struct {
	value *ClusterSpec
	isSet bool
}

func (v NullableClusterSpec) Get() *ClusterSpec {
	return v.value
}

func (v *NullableClusterSpec) Set(val *ClusterSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterSpec(val *ClusterSpec) *NullableClusterSpec {
	return &NullableClusterSpec{value: val, isSet: true}
}

func (v NullableClusterSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


