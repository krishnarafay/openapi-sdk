/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ResourceRatio type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceRatio{}

// ResourceRatio resource requests to limites ratio
type ResourceRatio struct {
	// ratio of cpu requests to limits
	Cpu float32 `json:"cpu"`
	// ratio of memory requests to limits
	Memory float32 `json:"memory"`
}

// NewResourceRatio instantiates a new ResourceRatio object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceRatio(cpu float32, memory float32) *ResourceRatio {
	this := ResourceRatio{}
	this.Cpu = cpu
	this.Memory = memory
	return &this
}

// NewResourceRatioWithDefaults instantiates a new ResourceRatio object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceRatioWithDefaults() *ResourceRatio {
	this := ResourceRatio{}
	return &this
}

// GetCpu returns the Cpu field value
func (o *ResourceRatio) GetCpu() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value
// and a boolean to check if the value has been set.
func (o *ResourceRatio) GetCpuOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cpu, true
}

// SetCpu sets field value
func (o *ResourceRatio) SetCpu(v float32) {
	o.Cpu = v
}

// GetMemory returns the Memory field value
func (o *ResourceRatio) GetMemory() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value
// and a boolean to check if the value has been set.
func (o *ResourceRatio) GetMemoryOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memory, true
}

// SetMemory sets field value
func (o *ResourceRatio) SetMemory(v float32) {
	o.Memory = v
}

func (o ResourceRatio) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceRatio) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cpu"] = o.Cpu
	toSerialize["memory"] = o.Memory
	return toSerialize, nil
}

type NullableResourceRatio struct {
	value *ResourceRatio
	isSet bool
}

func (v NullableResourceRatio) Get() *ResourceRatio {
	return v.value
}

func (v *NullableResourceRatio) Set(val *ResourceRatio) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceRatio) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceRatio) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceRatio(val *ResourceRatio) *NullableResourceRatio {
	return &NullableResourceRatio{value: val, isSet: true}
}

func (v NullableResourceRatio) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceRatio) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


