/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the Additionalmetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Additionalmetadata{}

// Additionalmetadata struct for Additionalmetadata
type Additionalmetadata struct {
	AcrProfile *AcrProfile `json:"acrProfile,omitempty"`
	// If not specified, defaults to the resource group of the managed cluster. Valid only if the Log analytics workspace is specified.
	OmsWorkspaceLocation *string `json:"omsWorkspaceLocation,omitempty"`
}

// NewAdditionalmetadata instantiates a new Additionalmetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdditionalmetadata() *Additionalmetadata {
	this := Additionalmetadata{}
	return &this
}

// NewAdditionalmetadataWithDefaults instantiates a new Additionalmetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdditionalmetadataWithDefaults() *Additionalmetadata {
	this := Additionalmetadata{}
	return &this
}

// GetAcrProfile returns the AcrProfile field value if set, zero value otherwise.
func (o *Additionalmetadata) GetAcrProfile() AcrProfile {
	if o == nil || isNil(o.AcrProfile) {
		var ret AcrProfile
		return ret
	}
	return *o.AcrProfile
}

// GetAcrProfileOk returns a tuple with the AcrProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Additionalmetadata) GetAcrProfileOk() (*AcrProfile, bool) {
	if o == nil || isNil(o.AcrProfile) {
		return nil, false
	}
	return o.AcrProfile, true
}

// HasAcrProfile returns a boolean if a field has been set.
func (o *Additionalmetadata) HasAcrProfile() bool {
	if o != nil && !isNil(o.AcrProfile) {
		return true
	}

	return false
}

// SetAcrProfile gets a reference to the given AcrProfile and assigns it to the AcrProfile field.
func (o *Additionalmetadata) SetAcrProfile(v AcrProfile) {
	o.AcrProfile = &v
}

// GetOmsWorkspaceLocation returns the OmsWorkspaceLocation field value if set, zero value otherwise.
func (o *Additionalmetadata) GetOmsWorkspaceLocation() string {
	if o == nil || isNil(o.OmsWorkspaceLocation) {
		var ret string
		return ret
	}
	return *o.OmsWorkspaceLocation
}

// GetOmsWorkspaceLocationOk returns a tuple with the OmsWorkspaceLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Additionalmetadata) GetOmsWorkspaceLocationOk() (*string, bool) {
	if o == nil || isNil(o.OmsWorkspaceLocation) {
		return nil, false
	}
	return o.OmsWorkspaceLocation, true
}

// HasOmsWorkspaceLocation returns a boolean if a field has been set.
func (o *Additionalmetadata) HasOmsWorkspaceLocation() bool {
	if o != nil && !isNil(o.OmsWorkspaceLocation) {
		return true
	}

	return false
}

// SetOmsWorkspaceLocation gets a reference to the given string and assigns it to the OmsWorkspaceLocation field.
func (o *Additionalmetadata) SetOmsWorkspaceLocation(v string) {
	o.OmsWorkspaceLocation = &v
}

func (o Additionalmetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Additionalmetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AcrProfile) {
		toSerialize["acrProfile"] = o.AcrProfile
	}
	if !isNil(o.OmsWorkspaceLocation) {
		toSerialize["omsWorkspaceLocation"] = o.OmsWorkspaceLocation
	}
	return toSerialize, nil
}

type NullableAdditionalmetadata struct {
	value *Additionalmetadata
	isSet bool
}

func (v NullableAdditionalmetadata) Get() *Additionalmetadata {
	return v.value
}

func (v *NullableAdditionalmetadata) Set(val *Additionalmetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableAdditionalmetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableAdditionalmetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdditionalmetadata(val *Additionalmetadata) *NullableAdditionalmetadata {
	return &NullableAdditionalmetadata{value: val, isSet: true}
}

func (v NullableAdditionalmetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdditionalmetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


