/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ImportedStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImportedStatus{}

// ImportedStatus struct for ImportedStatus
type ImportedStatus struct {
	BootstrapURL *string `json:"bootstrapURL,omitempty"`
}

// NewImportedStatus instantiates a new ImportedStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportedStatus() *ImportedStatus {
	this := ImportedStatus{}
	return &this
}

// NewImportedStatusWithDefaults instantiates a new ImportedStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportedStatusWithDefaults() *ImportedStatus {
	this := ImportedStatus{}
	return &this
}

// GetBootstrapURL returns the BootstrapURL field value if set, zero value otherwise.
func (o *ImportedStatus) GetBootstrapURL() string {
	if o == nil || isNil(o.BootstrapURL) {
		var ret string
		return ret
	}
	return *o.BootstrapURL
}

// GetBootstrapURLOk returns a tuple with the BootstrapURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportedStatus) GetBootstrapURLOk() (*string, bool) {
	if o == nil || isNil(o.BootstrapURL) {
		return nil, false
	}
	return o.BootstrapURL, true
}

// HasBootstrapURL returns a boolean if a field has been set.
func (o *ImportedStatus) HasBootstrapURL() bool {
	if o != nil && !isNil(o.BootstrapURL) {
		return true
	}

	return false
}

// SetBootstrapURL gets a reference to the given string and assigns it to the BootstrapURL field.
func (o *ImportedStatus) SetBootstrapURL(v string) {
	o.BootstrapURL = &v
}

func (o ImportedStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImportedStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BootstrapURL) {
		toSerialize["bootstrapURL"] = o.BootstrapURL
	}
	return toSerialize, nil
}

type NullableImportedStatus struct {
	value *ImportedStatus
	isSet bool
}

func (v NullableImportedStatus) Get() *ImportedStatus {
	return v.value
}

func (v *NullableImportedStatus) Set(val *ImportedStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableImportedStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableImportedStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportedStatus(val *ImportedStatus) *NullableImportedStatus {
	return &NullableImportedStatus{value: val, isSet: true}
}

func (v NullableImportedStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportedStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


