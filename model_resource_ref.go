/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ResourceRef type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceRef{}

// ResourceRef Reference to resource
type ResourceRef struct {
	// name of the resource
	Name string `json:"name"`
}

// NewResourceRef instantiates a new ResourceRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceRef(name string) *ResourceRef {
	this := ResourceRef{}
	this.Name = name
	return &this
}

// NewResourceRefWithDefaults instantiates a new ResourceRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceRefWithDefaults() *ResourceRef {
	this := ResourceRef{}
	return &this
}

// GetName returns the Name field value
func (o *ResourceRef) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ResourceRef) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ResourceRef) SetName(v string) {
	o.Name = v
}

func (o ResourceRef) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceRef) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableResourceRef struct {
	value *ResourceRef
	isSet bool
}

func (v NullableResourceRef) Get() *ResourceRef {
	return v.value
}

func (v *NullableResourceRef) Set(val *ResourceRef) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceRef) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceRef(val *ResourceRef) *NullableResourceRef {
	return &NullableResourceRef{value: val, isSet: true}
}

func (v NullableResourceRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


