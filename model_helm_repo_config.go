/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the HelmRepoConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HelmRepoConfig{}

// HelmRepoConfig helm repo configuration for pipeline trigger
type HelmRepoConfig struct {
	// name of the chart in repo
	ChartName string `json:"chartName"`
	// version of the chart in repo
	ChartVersion string `json:"chartVersion"`
	// name of the helm repository
	Repository string `json:"repository"`
}

// NewHelmRepoConfig instantiates a new HelmRepoConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHelmRepoConfig(chartName string, chartVersion string, repository string) *HelmRepoConfig {
	this := HelmRepoConfig{}
	this.ChartName = chartName
	this.ChartVersion = chartVersion
	this.Repository = repository
	return &this
}

// NewHelmRepoConfigWithDefaults instantiates a new HelmRepoConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHelmRepoConfigWithDefaults() *HelmRepoConfig {
	this := HelmRepoConfig{}
	return &this
}

// GetChartName returns the ChartName field value
func (o *HelmRepoConfig) GetChartName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChartName
}

// GetChartNameOk returns a tuple with the ChartName field value
// and a boolean to check if the value has been set.
func (o *HelmRepoConfig) GetChartNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChartName, true
}

// SetChartName sets field value
func (o *HelmRepoConfig) SetChartName(v string) {
	o.ChartName = v
}

// GetChartVersion returns the ChartVersion field value
func (o *HelmRepoConfig) GetChartVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChartVersion
}

// GetChartVersionOk returns a tuple with the ChartVersion field value
// and a boolean to check if the value has been set.
func (o *HelmRepoConfig) GetChartVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChartVersion, true
}

// SetChartVersion sets field value
func (o *HelmRepoConfig) SetChartVersion(v string) {
	o.ChartVersion = v
}

// GetRepository returns the Repository field value
func (o *HelmRepoConfig) GetRepository() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value
// and a boolean to check if the value has been set.
func (o *HelmRepoConfig) GetRepositoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Repository, true
}

// SetRepository sets field value
func (o *HelmRepoConfig) SetRepository(v string) {
	o.Repository = v
}

func (o HelmRepoConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HelmRepoConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["chartName"] = o.ChartName
	toSerialize["chartVersion"] = o.ChartVersion
	toSerialize["repository"] = o.Repository
	return toSerialize, nil
}

type NullableHelmRepoConfig struct {
	value *HelmRepoConfig
	isSet bool
}

func (v NullableHelmRepoConfig) Get() *HelmRepoConfig {
	return v.value
}

func (v *NullableHelmRepoConfig) Set(val *HelmRepoConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableHelmRepoConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableHelmRepoConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHelmRepoConfig(val *HelmRepoConfig) *NullableHelmRepoConfig {
	return &NullableHelmRepoConfig{value: val, isSet: true}
}

func (v NullableHelmRepoConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHelmRepoConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


