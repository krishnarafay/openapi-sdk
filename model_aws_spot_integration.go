/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the AwsSpotIntegration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsSpotIntegration{}

// AwsSpotIntegration Aws Spot Integration params
type AwsSpotIntegration struct {
	// Aws Account ID
	AwsAccountId *string `json:"awsAccountId,omitempty"`
	// Aws Spot Data Bucket
	AwsSpotDataBucket *string `json:"awsSpotDataBucket,omitempty"`
	// Aws Spot Data Prefix
	AwsSpotDataPrefix *string `json:"awsSpotDataPrefix,omitempty"`
	// Aws Spot Data Region
	AwsSpotDataRegion *string `json:"awsSpotDataRegion,omitempty"`
	// Aws Spot Label
	SpotLabel *string `json:"spotLabel,omitempty"`
	// Aws Spot Label Value
	SpotLabelValue *string `json:"spotLabelValue,omitempty"`
}

// NewAwsSpotIntegration instantiates a new AwsSpotIntegration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsSpotIntegration() *AwsSpotIntegration {
	this := AwsSpotIntegration{}
	return &this
}

// NewAwsSpotIntegrationWithDefaults instantiates a new AwsSpotIntegration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsSpotIntegrationWithDefaults() *AwsSpotIntegration {
	this := AwsSpotIntegration{}
	return &this
}

// GetAwsAccountId returns the AwsAccountId field value if set, zero value otherwise.
func (o *AwsSpotIntegration) GetAwsAccountId() string {
	if o == nil || isNil(o.AwsAccountId) {
		var ret string
		return ret
	}
	return *o.AwsAccountId
}

// GetAwsAccountIdOk returns a tuple with the AwsAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsSpotIntegration) GetAwsAccountIdOk() (*string, bool) {
	if o == nil || isNil(o.AwsAccountId) {
		return nil, false
	}
	return o.AwsAccountId, true
}

// HasAwsAccountId returns a boolean if a field has been set.
func (o *AwsSpotIntegration) HasAwsAccountId() bool {
	if o != nil && !isNil(o.AwsAccountId) {
		return true
	}

	return false
}

// SetAwsAccountId gets a reference to the given string and assigns it to the AwsAccountId field.
func (o *AwsSpotIntegration) SetAwsAccountId(v string) {
	o.AwsAccountId = &v
}

// GetAwsSpotDataBucket returns the AwsSpotDataBucket field value if set, zero value otherwise.
func (o *AwsSpotIntegration) GetAwsSpotDataBucket() string {
	if o == nil || isNil(o.AwsSpotDataBucket) {
		var ret string
		return ret
	}
	return *o.AwsSpotDataBucket
}

// GetAwsSpotDataBucketOk returns a tuple with the AwsSpotDataBucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsSpotIntegration) GetAwsSpotDataBucketOk() (*string, bool) {
	if o == nil || isNil(o.AwsSpotDataBucket) {
		return nil, false
	}
	return o.AwsSpotDataBucket, true
}

// HasAwsSpotDataBucket returns a boolean if a field has been set.
func (o *AwsSpotIntegration) HasAwsSpotDataBucket() bool {
	if o != nil && !isNil(o.AwsSpotDataBucket) {
		return true
	}

	return false
}

// SetAwsSpotDataBucket gets a reference to the given string and assigns it to the AwsSpotDataBucket field.
func (o *AwsSpotIntegration) SetAwsSpotDataBucket(v string) {
	o.AwsSpotDataBucket = &v
}

// GetAwsSpotDataPrefix returns the AwsSpotDataPrefix field value if set, zero value otherwise.
func (o *AwsSpotIntegration) GetAwsSpotDataPrefix() string {
	if o == nil || isNil(o.AwsSpotDataPrefix) {
		var ret string
		return ret
	}
	return *o.AwsSpotDataPrefix
}

// GetAwsSpotDataPrefixOk returns a tuple with the AwsSpotDataPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsSpotIntegration) GetAwsSpotDataPrefixOk() (*string, bool) {
	if o == nil || isNil(o.AwsSpotDataPrefix) {
		return nil, false
	}
	return o.AwsSpotDataPrefix, true
}

// HasAwsSpotDataPrefix returns a boolean if a field has been set.
func (o *AwsSpotIntegration) HasAwsSpotDataPrefix() bool {
	if o != nil && !isNil(o.AwsSpotDataPrefix) {
		return true
	}

	return false
}

// SetAwsSpotDataPrefix gets a reference to the given string and assigns it to the AwsSpotDataPrefix field.
func (o *AwsSpotIntegration) SetAwsSpotDataPrefix(v string) {
	o.AwsSpotDataPrefix = &v
}

// GetAwsSpotDataRegion returns the AwsSpotDataRegion field value if set, zero value otherwise.
func (o *AwsSpotIntegration) GetAwsSpotDataRegion() string {
	if o == nil || isNil(o.AwsSpotDataRegion) {
		var ret string
		return ret
	}
	return *o.AwsSpotDataRegion
}

// GetAwsSpotDataRegionOk returns a tuple with the AwsSpotDataRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsSpotIntegration) GetAwsSpotDataRegionOk() (*string, bool) {
	if o == nil || isNil(o.AwsSpotDataRegion) {
		return nil, false
	}
	return o.AwsSpotDataRegion, true
}

// HasAwsSpotDataRegion returns a boolean if a field has been set.
func (o *AwsSpotIntegration) HasAwsSpotDataRegion() bool {
	if o != nil && !isNil(o.AwsSpotDataRegion) {
		return true
	}

	return false
}

// SetAwsSpotDataRegion gets a reference to the given string and assigns it to the AwsSpotDataRegion field.
func (o *AwsSpotIntegration) SetAwsSpotDataRegion(v string) {
	o.AwsSpotDataRegion = &v
}

// GetSpotLabel returns the SpotLabel field value if set, zero value otherwise.
func (o *AwsSpotIntegration) GetSpotLabel() string {
	if o == nil || isNil(o.SpotLabel) {
		var ret string
		return ret
	}
	return *o.SpotLabel
}

// GetSpotLabelOk returns a tuple with the SpotLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsSpotIntegration) GetSpotLabelOk() (*string, bool) {
	if o == nil || isNil(o.SpotLabel) {
		return nil, false
	}
	return o.SpotLabel, true
}

// HasSpotLabel returns a boolean if a field has been set.
func (o *AwsSpotIntegration) HasSpotLabel() bool {
	if o != nil && !isNil(o.SpotLabel) {
		return true
	}

	return false
}

// SetSpotLabel gets a reference to the given string and assigns it to the SpotLabel field.
func (o *AwsSpotIntegration) SetSpotLabel(v string) {
	o.SpotLabel = &v
}

// GetSpotLabelValue returns the SpotLabelValue field value if set, zero value otherwise.
func (o *AwsSpotIntegration) GetSpotLabelValue() string {
	if o == nil || isNil(o.SpotLabelValue) {
		var ret string
		return ret
	}
	return *o.SpotLabelValue
}

// GetSpotLabelValueOk returns a tuple with the SpotLabelValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsSpotIntegration) GetSpotLabelValueOk() (*string, bool) {
	if o == nil || isNil(o.SpotLabelValue) {
		return nil, false
	}
	return o.SpotLabelValue, true
}

// HasSpotLabelValue returns a boolean if a field has been set.
func (o *AwsSpotIntegration) HasSpotLabelValue() bool {
	if o != nil && !isNil(o.SpotLabelValue) {
		return true
	}

	return false
}

// SetSpotLabelValue gets a reference to the given string and assigns it to the SpotLabelValue field.
func (o *AwsSpotIntegration) SetSpotLabelValue(v string) {
	o.SpotLabelValue = &v
}

func (o AwsSpotIntegration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsSpotIntegration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AwsAccountId) {
		toSerialize["awsAccountId"] = o.AwsAccountId
	}
	if !isNil(o.AwsSpotDataBucket) {
		toSerialize["awsSpotDataBucket"] = o.AwsSpotDataBucket
	}
	if !isNil(o.AwsSpotDataPrefix) {
		toSerialize["awsSpotDataPrefix"] = o.AwsSpotDataPrefix
	}
	if !isNil(o.AwsSpotDataRegion) {
		toSerialize["awsSpotDataRegion"] = o.AwsSpotDataRegion
	}
	if !isNil(o.SpotLabel) {
		toSerialize["spotLabel"] = o.SpotLabel
	}
	if !isNil(o.SpotLabelValue) {
		toSerialize["spotLabelValue"] = o.SpotLabelValue
	}
	return toSerialize, nil
}

type NullableAwsSpotIntegration struct {
	value *AwsSpotIntegration
	isSet bool
}

func (v NullableAwsSpotIntegration) Get() *AwsSpotIntegration {
	return v.value
}

func (v *NullableAwsSpotIntegration) Set(val *AwsSpotIntegration) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsSpotIntegration) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsSpotIntegration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsSpotIntegration(val *AwsSpotIntegration) *NullableAwsSpotIntegration {
	return &NullableAwsSpotIntegration{value: val, isSet: true}
}

func (v NullableAwsSpotIntegration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsSpotIntegration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


