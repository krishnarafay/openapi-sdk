/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ClusterMeshRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterMeshRule{}

// ClusterMeshRule ClusterMeshRule  definition
type ClusterMeshRule struct {
	// API Version of the cluster mesh rule resource
	ApiVersion string `json:"apiVersion"`
	// Kind of the cluster mesh rule resource
	Kind string `json:"kind"`
	Metadata Metadata `json:"metadata"`
	Spec ClusterMeshRuleSpec `json:"spec"`
}

// NewClusterMeshRule instantiates a new ClusterMeshRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterMeshRule(apiVersion string, kind string, metadata Metadata, spec ClusterMeshRuleSpec) *ClusterMeshRule {
	this := ClusterMeshRule{}
	this.ApiVersion = apiVersion
	this.Kind = kind
	this.Metadata = metadata
	this.Spec = spec
	return &this
}

// NewClusterMeshRuleWithDefaults instantiates a new ClusterMeshRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterMeshRuleWithDefaults() *ClusterMeshRule {
	this := ClusterMeshRule{}
	var apiVersion string = "servicemesh.k8smgmt.io/v3"
	this.ApiVersion = apiVersion
	var kind string = "ClusterMeshRule"
	this.Kind = kind
	return &this
}

// GetApiVersion returns the ApiVersion field value
func (o *ClusterMeshRule) GetApiVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value
// and a boolean to check if the value has been set.
func (o *ClusterMeshRule) GetApiVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiVersion, true
}

// SetApiVersion sets field value
func (o *ClusterMeshRule) SetApiVersion(v string) {
	o.ApiVersion = v
}

// GetKind returns the Kind field value
func (o *ClusterMeshRule) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *ClusterMeshRule) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *ClusterMeshRule) SetKind(v string) {
	o.Kind = v
}

// GetMetadata returns the Metadata field value
func (o *ClusterMeshRule) GetMetadata() Metadata {
	if o == nil {
		var ret Metadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *ClusterMeshRule) GetMetadataOk() (*Metadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *ClusterMeshRule) SetMetadata(v Metadata) {
	o.Metadata = v
}

// GetSpec returns the Spec field value
func (o *ClusterMeshRule) GetSpec() ClusterMeshRuleSpec {
	if o == nil {
		var ret ClusterMeshRuleSpec
		return ret
	}

	return o.Spec
}

// GetSpecOk returns a tuple with the Spec field value
// and a boolean to check if the value has been set.
func (o *ClusterMeshRule) GetSpecOk() (*ClusterMeshRuleSpec, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Spec, true
}

// SetSpec sets field value
func (o *ClusterMeshRule) SetSpec(v ClusterMeshRuleSpec) {
	o.Spec = v
}

func (o ClusterMeshRule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterMeshRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["apiVersion"] = o.ApiVersion
	toSerialize["kind"] = o.Kind
	toSerialize["metadata"] = o.Metadata
	toSerialize["spec"] = o.Spec
	return toSerialize, nil
}

type NullableClusterMeshRule struct {
	value *ClusterMeshRule
	isSet bool
}

func (v NullableClusterMeshRule) Get() *ClusterMeshRule {
	return v.value
}

func (v *NullableClusterMeshRule) Set(val *ClusterMeshRule) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterMeshRule) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterMeshRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterMeshRule(val *ClusterMeshRule) *NullableClusterMeshRule {
	return &NullableClusterMeshRule{value: val, isSet: true}
}

func (v NullableClusterMeshRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterMeshRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


