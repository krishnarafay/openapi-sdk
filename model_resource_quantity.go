/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ResourceQuantity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceQuantity{}

// ResourceQuantity resource quantity
type ResourceQuantity struct {
	// quantity of CPU in cores
	Cpu string `json:"cpu"`
	// quantity of memory in MB
	Memory string `json:"memory"`
}

// NewResourceQuantity instantiates a new ResourceQuantity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceQuantity(cpu string, memory string) *ResourceQuantity {
	this := ResourceQuantity{}
	this.Cpu = cpu
	this.Memory = memory
	return &this
}

// NewResourceQuantityWithDefaults instantiates a new ResourceQuantity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceQuantityWithDefaults() *ResourceQuantity {
	this := ResourceQuantity{}
	return &this
}

// GetCpu returns the Cpu field value
func (o *ResourceQuantity) GetCpu() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value
// and a boolean to check if the value has been set.
func (o *ResourceQuantity) GetCpuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cpu, true
}

// SetCpu sets field value
func (o *ResourceQuantity) SetCpu(v string) {
	o.Cpu = v
}

// GetMemory returns the Memory field value
func (o *ResourceQuantity) GetMemory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value
// and a boolean to check if the value has been set.
func (o *ResourceQuantity) GetMemoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memory, true
}

// SetMemory sets field value
func (o *ResourceQuantity) SetMemory(v string) {
	o.Memory = v
}

func (o ResourceQuantity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceQuantity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cpu"] = o.Cpu
	toSerialize["memory"] = o.Memory
	return toSerialize, nil
}

type NullableResourceQuantity struct {
	value *ResourceQuantity
	isSet bool
}

func (v NullableResourceQuantity) Get() *ResourceQuantity {
	return v.value
}

func (v *NullableResourceQuantity) Set(val *ResourceQuantity) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceQuantity) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceQuantity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceQuantity(val *ResourceQuantity) *NullableResourceQuantity {
	return &NullableResourceQuantity{value: val, isSet: true}
}

func (v NullableResourceQuantity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceQuantity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


