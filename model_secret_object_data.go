/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the SecretObjectData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretObjectData{}

// SecretObjectData struct for SecretObjectData
type SecretObjectData struct {
	Key *string `json:"key,omitempty"`
	ObjectName *string `json:"objectName,omitempty"`
}

// NewSecretObjectData instantiates a new SecretObjectData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretObjectData() *SecretObjectData {
	this := SecretObjectData{}
	return &this
}

// NewSecretObjectDataWithDefaults instantiates a new SecretObjectData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretObjectDataWithDefaults() *SecretObjectData {
	this := SecretObjectData{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *SecretObjectData) GetKey() string {
	if o == nil || isNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretObjectData) GetKeyOk() (*string, bool) {
	if o == nil || isNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *SecretObjectData) HasKey() bool {
	if o != nil && !isNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *SecretObjectData) SetKey(v string) {
	o.Key = &v
}

// GetObjectName returns the ObjectName field value if set, zero value otherwise.
func (o *SecretObjectData) GetObjectName() string {
	if o == nil || isNil(o.ObjectName) {
		var ret string
		return ret
	}
	return *o.ObjectName
}

// GetObjectNameOk returns a tuple with the ObjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretObjectData) GetObjectNameOk() (*string, bool) {
	if o == nil || isNil(o.ObjectName) {
		return nil, false
	}
	return o.ObjectName, true
}

// HasObjectName returns a boolean if a field has been set.
func (o *SecretObjectData) HasObjectName() bool {
	if o != nil && !isNil(o.ObjectName) {
		return true
	}

	return false
}

// SetObjectName gets a reference to the given string and assigns it to the ObjectName field.
func (o *SecretObjectData) SetObjectName(v string) {
	o.ObjectName = &v
}

func (o SecretObjectData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretObjectData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !isNil(o.ObjectName) {
		toSerialize["objectName"] = o.ObjectName
	}
	return toSerialize, nil
}

type NullableSecretObjectData struct {
	value *SecretObjectData
	isSet bool
}

func (v NullableSecretObjectData) Get() *SecretObjectData {
	return v.value
}

func (v *NullableSecretObjectData) Set(val *SecretObjectData) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretObjectData) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretObjectData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretObjectData(val *SecretObjectData) *NullableSecretObjectData {
	return &NullableSecretObjectData{value: val, isSet: true}
}

func (v NullableSecretObjectData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretObjectData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


