/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ResourceSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceSpec{}

// ResourceSpec details of the resource
type ResourceSpec struct {
	// Variables data for resource
	Variables []Variable `json:"variables"`
}

// NewResourceSpec instantiates a new ResourceSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceSpec(variables []Variable) *ResourceSpec {
	this := ResourceSpec{}
	this.Variables = variables
	return &this
}

// NewResourceSpecWithDefaults instantiates a new ResourceSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceSpecWithDefaults() *ResourceSpec {
	this := ResourceSpec{}
	return &this
}

// GetVariables returns the Variables field value
func (o *ResourceSpec) GetVariables() []Variable {
	if o == nil {
		var ret []Variable
		return ret
	}

	return o.Variables
}

// GetVariablesOk returns a tuple with the Variables field value
// and a boolean to check if the value has been set.
func (o *ResourceSpec) GetVariablesOk() ([]Variable, bool) {
	if o == nil {
		return nil, false
	}
	return o.Variables, true
}

// SetVariables sets field value
func (o *ResourceSpec) SetVariables(v []Variable) {
	o.Variables = v
}

func (o ResourceSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["variables"] = o.Variables
	return toSerialize, nil
}

type NullableResourceSpec struct {
	value *ResourceSpec
	isSet bool
}

func (v NullableResourceSpec) Get() *ResourceSpec {
	return v.value
}

func (v *NullableResourceSpec) Set(val *ResourceSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceSpec(val *ResourceSpec) *NullableResourceSpec {
	return &NullableResourceSpec{value: val, isSet: true}
}

func (v NullableResourceSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


