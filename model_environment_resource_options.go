/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the EnvironmentResourceOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentResourceOptions{}

// EnvironmentResourceOptions struct for EnvironmentResourceOptions
type EnvironmentResourceOptions struct {
	// Specify if the resource is dedicated to workloads/apps
	Dedicated *bool `json:"dedicated,omitempty"`
}

// NewEnvironmentResourceOptions instantiates a new EnvironmentResourceOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentResourceOptions() *EnvironmentResourceOptions {
	this := EnvironmentResourceOptions{}
	return &this
}

// NewEnvironmentResourceOptionsWithDefaults instantiates a new EnvironmentResourceOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentResourceOptionsWithDefaults() *EnvironmentResourceOptions {
	this := EnvironmentResourceOptions{}
	return &this
}

// GetDedicated returns the Dedicated field value if set, zero value otherwise.
func (o *EnvironmentResourceOptions) GetDedicated() bool {
	if o == nil || isNil(o.Dedicated) {
		var ret bool
		return ret
	}
	return *o.Dedicated
}

// GetDedicatedOk returns a tuple with the Dedicated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentResourceOptions) GetDedicatedOk() (*bool, bool) {
	if o == nil || isNil(o.Dedicated) {
		return nil, false
	}
	return o.Dedicated, true
}

// HasDedicated returns a boolean if a field has been set.
func (o *EnvironmentResourceOptions) HasDedicated() bool {
	if o != nil && !isNil(o.Dedicated) {
		return true
	}

	return false
}

// SetDedicated gets a reference to the given bool and assigns it to the Dedicated field.
func (o *EnvironmentResourceOptions) SetDedicated(v bool) {
	o.Dedicated = &v
}

func (o EnvironmentResourceOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentResourceOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Dedicated) {
		toSerialize["dedicated"] = o.Dedicated
	}
	return toSerialize, nil
}

type NullableEnvironmentResourceOptions struct {
	value *EnvironmentResourceOptions
	isSet bool
}

func (v NullableEnvironmentResourceOptions) Get() *EnvironmentResourceOptions {
	return v.value
}

func (v *NullableEnvironmentResourceOptions) Set(val *EnvironmentResourceOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentResourceOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentResourceOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentResourceOptions(val *EnvironmentResourceOptions) *NullableEnvironmentResourceOptions {
	return &NullableEnvironmentResourceOptions{value: val, isSet: true}
}

func (v NullableEnvironmentResourceOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentResourceOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


