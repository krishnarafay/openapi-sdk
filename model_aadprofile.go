/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the Aadprofile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Aadprofile{}

// Aadprofile struct for Aadprofile
type Aadprofile struct {
	// The list of AAD group object IDs that will have admin role of the cluster.
	AdminGroupObjectIDs []string `json:"adminGroupObjectIDs,omitempty"`
	// The client AAD application ID.
	ClientAppID *string `json:"clientAppID,omitempty"`
	// Whether to enable Azure RBAC for Kubernetes authorization.
	EnableAzureRBAC *bool `json:"enableAzureRBAC,omitempty"`
	// Whether to enable managed AAD.
	Managed *bool `json:"managed,omitempty"`
	// The server AAD application ID.
	ServerAppID *string `json:"serverAppID,omitempty"`
	// The server AAD application secret.
	ServerAppSecret *string `json:"serverAppSecret,omitempty"`
	// The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.
	TenantID *string `json:"tenantID,omitempty"`
}

// NewAadprofile instantiates a new Aadprofile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAadprofile() *Aadprofile {
	this := Aadprofile{}
	return &this
}

// NewAadprofileWithDefaults instantiates a new Aadprofile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAadprofileWithDefaults() *Aadprofile {
	this := Aadprofile{}
	return &this
}

// GetAdminGroupObjectIDs returns the AdminGroupObjectIDs field value if set, zero value otherwise.
func (o *Aadprofile) GetAdminGroupObjectIDs() []string {
	if o == nil || isNil(o.AdminGroupObjectIDs) {
		var ret []string
		return ret
	}
	return o.AdminGroupObjectIDs
}

// GetAdminGroupObjectIDsOk returns a tuple with the AdminGroupObjectIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Aadprofile) GetAdminGroupObjectIDsOk() ([]string, bool) {
	if o == nil || isNil(o.AdminGroupObjectIDs) {
		return nil, false
	}
	return o.AdminGroupObjectIDs, true
}

// HasAdminGroupObjectIDs returns a boolean if a field has been set.
func (o *Aadprofile) HasAdminGroupObjectIDs() bool {
	if o != nil && !isNil(o.AdminGroupObjectIDs) {
		return true
	}

	return false
}

// SetAdminGroupObjectIDs gets a reference to the given []string and assigns it to the AdminGroupObjectIDs field.
func (o *Aadprofile) SetAdminGroupObjectIDs(v []string) {
	o.AdminGroupObjectIDs = v
}

// GetClientAppID returns the ClientAppID field value if set, zero value otherwise.
func (o *Aadprofile) GetClientAppID() string {
	if o == nil || isNil(o.ClientAppID) {
		var ret string
		return ret
	}
	return *o.ClientAppID
}

// GetClientAppIDOk returns a tuple with the ClientAppID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Aadprofile) GetClientAppIDOk() (*string, bool) {
	if o == nil || isNil(o.ClientAppID) {
		return nil, false
	}
	return o.ClientAppID, true
}

// HasClientAppID returns a boolean if a field has been set.
func (o *Aadprofile) HasClientAppID() bool {
	if o != nil && !isNil(o.ClientAppID) {
		return true
	}

	return false
}

// SetClientAppID gets a reference to the given string and assigns it to the ClientAppID field.
func (o *Aadprofile) SetClientAppID(v string) {
	o.ClientAppID = &v
}

// GetEnableAzureRBAC returns the EnableAzureRBAC field value if set, zero value otherwise.
func (o *Aadprofile) GetEnableAzureRBAC() bool {
	if o == nil || isNil(o.EnableAzureRBAC) {
		var ret bool
		return ret
	}
	return *o.EnableAzureRBAC
}

// GetEnableAzureRBACOk returns a tuple with the EnableAzureRBAC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Aadprofile) GetEnableAzureRBACOk() (*bool, bool) {
	if o == nil || isNil(o.EnableAzureRBAC) {
		return nil, false
	}
	return o.EnableAzureRBAC, true
}

// HasEnableAzureRBAC returns a boolean if a field has been set.
func (o *Aadprofile) HasEnableAzureRBAC() bool {
	if o != nil && !isNil(o.EnableAzureRBAC) {
		return true
	}

	return false
}

// SetEnableAzureRBAC gets a reference to the given bool and assigns it to the EnableAzureRBAC field.
func (o *Aadprofile) SetEnableAzureRBAC(v bool) {
	o.EnableAzureRBAC = &v
}

// GetManaged returns the Managed field value if set, zero value otherwise.
func (o *Aadprofile) GetManaged() bool {
	if o == nil || isNil(o.Managed) {
		var ret bool
		return ret
	}
	return *o.Managed
}

// GetManagedOk returns a tuple with the Managed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Aadprofile) GetManagedOk() (*bool, bool) {
	if o == nil || isNil(o.Managed) {
		return nil, false
	}
	return o.Managed, true
}

// HasManaged returns a boolean if a field has been set.
func (o *Aadprofile) HasManaged() bool {
	if o != nil && !isNil(o.Managed) {
		return true
	}

	return false
}

// SetManaged gets a reference to the given bool and assigns it to the Managed field.
func (o *Aadprofile) SetManaged(v bool) {
	o.Managed = &v
}

// GetServerAppID returns the ServerAppID field value if set, zero value otherwise.
func (o *Aadprofile) GetServerAppID() string {
	if o == nil || isNil(o.ServerAppID) {
		var ret string
		return ret
	}
	return *o.ServerAppID
}

// GetServerAppIDOk returns a tuple with the ServerAppID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Aadprofile) GetServerAppIDOk() (*string, bool) {
	if o == nil || isNil(o.ServerAppID) {
		return nil, false
	}
	return o.ServerAppID, true
}

// HasServerAppID returns a boolean if a field has been set.
func (o *Aadprofile) HasServerAppID() bool {
	if o != nil && !isNil(o.ServerAppID) {
		return true
	}

	return false
}

// SetServerAppID gets a reference to the given string and assigns it to the ServerAppID field.
func (o *Aadprofile) SetServerAppID(v string) {
	o.ServerAppID = &v
}

// GetServerAppSecret returns the ServerAppSecret field value if set, zero value otherwise.
func (o *Aadprofile) GetServerAppSecret() string {
	if o == nil || isNil(o.ServerAppSecret) {
		var ret string
		return ret
	}
	return *o.ServerAppSecret
}

// GetServerAppSecretOk returns a tuple with the ServerAppSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Aadprofile) GetServerAppSecretOk() (*string, bool) {
	if o == nil || isNil(o.ServerAppSecret) {
		return nil, false
	}
	return o.ServerAppSecret, true
}

// HasServerAppSecret returns a boolean if a field has been set.
func (o *Aadprofile) HasServerAppSecret() bool {
	if o != nil && !isNil(o.ServerAppSecret) {
		return true
	}

	return false
}

// SetServerAppSecret gets a reference to the given string and assigns it to the ServerAppSecret field.
func (o *Aadprofile) SetServerAppSecret(v string) {
	o.ServerAppSecret = &v
}

// GetTenantID returns the TenantID field value if set, zero value otherwise.
func (o *Aadprofile) GetTenantID() string {
	if o == nil || isNil(o.TenantID) {
		var ret string
		return ret
	}
	return *o.TenantID
}

// GetTenantIDOk returns a tuple with the TenantID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Aadprofile) GetTenantIDOk() (*string, bool) {
	if o == nil || isNil(o.TenantID) {
		return nil, false
	}
	return o.TenantID, true
}

// HasTenantID returns a boolean if a field has been set.
func (o *Aadprofile) HasTenantID() bool {
	if o != nil && !isNil(o.TenantID) {
		return true
	}

	return false
}

// SetTenantID gets a reference to the given string and assigns it to the TenantID field.
func (o *Aadprofile) SetTenantID(v string) {
	o.TenantID = &v
}

func (o Aadprofile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Aadprofile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AdminGroupObjectIDs) {
		toSerialize["adminGroupObjectIDs"] = o.AdminGroupObjectIDs
	}
	if !isNil(o.ClientAppID) {
		toSerialize["clientAppID"] = o.ClientAppID
	}
	if !isNil(o.EnableAzureRBAC) {
		toSerialize["enableAzureRBAC"] = o.EnableAzureRBAC
	}
	if !isNil(o.Managed) {
		toSerialize["managed"] = o.Managed
	}
	if !isNil(o.ServerAppID) {
		toSerialize["serverAppID"] = o.ServerAppID
	}
	if !isNil(o.ServerAppSecret) {
		toSerialize["serverAppSecret"] = o.ServerAppSecret
	}
	if !isNil(o.TenantID) {
		toSerialize["tenantID"] = o.TenantID
	}
	return toSerialize, nil
}

type NullableAadprofile struct {
	value *Aadprofile
	isSet bool
}

func (v NullableAadprofile) Get() *Aadprofile {
	return v.value
}

func (v *NullableAadprofile) Set(val *Aadprofile) {
	v.value = val
	v.isSet = true
}

func (v NullableAadprofile) IsSet() bool {
	return v.isSet
}

func (v *NullableAadprofile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAadprofile(val *Aadprofile) *NullableAadprofile {
	return &NullableAadprofile{value: val, isSet: true}
}

func (v NullableAadprofile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAadprofile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


