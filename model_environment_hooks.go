/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the EnvironmentHooks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentHooks{}

// EnvironmentHooks struct for EnvironmentHooks
type EnvironmentHooks struct {
	// On completion environment hook
	OnCompletion []Hook `json:"onCompletion,omitempty"`
	// On failure environment hook
	OnFailure []Hook `json:"onFailure,omitempty"`
	// On initialize environment hook
	OnInit []Hook `json:"onInit,omitempty"`
	// On success environment hook
	OnSuccess []Hook `json:"onSuccess,omitempty"`
}

// NewEnvironmentHooks instantiates a new EnvironmentHooks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentHooks() *EnvironmentHooks {
	this := EnvironmentHooks{}
	return &this
}

// NewEnvironmentHooksWithDefaults instantiates a new EnvironmentHooks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentHooksWithDefaults() *EnvironmentHooks {
	this := EnvironmentHooks{}
	return &this
}

// GetOnCompletion returns the OnCompletion field value if set, zero value otherwise.
func (o *EnvironmentHooks) GetOnCompletion() []Hook {
	if o == nil || isNil(o.OnCompletion) {
		var ret []Hook
		return ret
	}
	return o.OnCompletion
}

// GetOnCompletionOk returns a tuple with the OnCompletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentHooks) GetOnCompletionOk() ([]Hook, bool) {
	if o == nil || isNil(o.OnCompletion) {
		return nil, false
	}
	return o.OnCompletion, true
}

// HasOnCompletion returns a boolean if a field has been set.
func (o *EnvironmentHooks) HasOnCompletion() bool {
	if o != nil && !isNil(o.OnCompletion) {
		return true
	}

	return false
}

// SetOnCompletion gets a reference to the given []Hook and assigns it to the OnCompletion field.
func (o *EnvironmentHooks) SetOnCompletion(v []Hook) {
	o.OnCompletion = v
}

// GetOnFailure returns the OnFailure field value if set, zero value otherwise.
func (o *EnvironmentHooks) GetOnFailure() []Hook {
	if o == nil || isNil(o.OnFailure) {
		var ret []Hook
		return ret
	}
	return o.OnFailure
}

// GetOnFailureOk returns a tuple with the OnFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentHooks) GetOnFailureOk() ([]Hook, bool) {
	if o == nil || isNil(o.OnFailure) {
		return nil, false
	}
	return o.OnFailure, true
}

// HasOnFailure returns a boolean if a field has been set.
func (o *EnvironmentHooks) HasOnFailure() bool {
	if o != nil && !isNil(o.OnFailure) {
		return true
	}

	return false
}

// SetOnFailure gets a reference to the given []Hook and assigns it to the OnFailure field.
func (o *EnvironmentHooks) SetOnFailure(v []Hook) {
	o.OnFailure = v
}

// GetOnInit returns the OnInit field value if set, zero value otherwise.
func (o *EnvironmentHooks) GetOnInit() []Hook {
	if o == nil || isNil(o.OnInit) {
		var ret []Hook
		return ret
	}
	return o.OnInit
}

// GetOnInitOk returns a tuple with the OnInit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentHooks) GetOnInitOk() ([]Hook, bool) {
	if o == nil || isNil(o.OnInit) {
		return nil, false
	}
	return o.OnInit, true
}

// HasOnInit returns a boolean if a field has been set.
func (o *EnvironmentHooks) HasOnInit() bool {
	if o != nil && !isNil(o.OnInit) {
		return true
	}

	return false
}

// SetOnInit gets a reference to the given []Hook and assigns it to the OnInit field.
func (o *EnvironmentHooks) SetOnInit(v []Hook) {
	o.OnInit = v
}

// GetOnSuccess returns the OnSuccess field value if set, zero value otherwise.
func (o *EnvironmentHooks) GetOnSuccess() []Hook {
	if o == nil || isNil(o.OnSuccess) {
		var ret []Hook
		return ret
	}
	return o.OnSuccess
}

// GetOnSuccessOk returns a tuple with the OnSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentHooks) GetOnSuccessOk() ([]Hook, bool) {
	if o == nil || isNil(o.OnSuccess) {
		return nil, false
	}
	return o.OnSuccess, true
}

// HasOnSuccess returns a boolean if a field has been set.
func (o *EnvironmentHooks) HasOnSuccess() bool {
	if o != nil && !isNil(o.OnSuccess) {
		return true
	}

	return false
}

// SetOnSuccess gets a reference to the given []Hook and assigns it to the OnSuccess field.
func (o *EnvironmentHooks) SetOnSuccess(v []Hook) {
	o.OnSuccess = v
}

func (o EnvironmentHooks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentHooks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.OnCompletion) {
		toSerialize["onCompletion"] = o.OnCompletion
	}
	if !isNil(o.OnFailure) {
		toSerialize["onFailure"] = o.OnFailure
	}
	if !isNil(o.OnInit) {
		toSerialize["onInit"] = o.OnInit
	}
	if !isNil(o.OnSuccess) {
		toSerialize["onSuccess"] = o.OnSuccess
	}
	return toSerialize, nil
}

type NullableEnvironmentHooks struct {
	value *EnvironmentHooks
	isSet bool
}

func (v NullableEnvironmentHooks) Get() *EnvironmentHooks {
	return v.value
}

func (v *NullableEnvironmentHooks) Set(val *EnvironmentHooks) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentHooks) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentHooks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentHooks(val *EnvironmentHooks) *NullableEnvironmentHooks {
	return &NullableEnvironmentHooks{value: val, isSet: true}
}

func (v NullableEnvironmentHooks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentHooks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


