/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ChargebackFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChargebackFilter{}

// ChargebackFilter ChargebackFilter parameters 
type ChargebackFilter struct {
	// cluster
	Cluster *string `json:"cluster,omitempty"`
	// clusterName
	ClusterName *string `json:"clusterName,omitempty"`
	// label
	Label []string `json:"label,omitempty"`
	// namespace
	Namespace *string `json:"namespace,omitempty"`
	// project
	Project *string `json:"project,omitempty"`
	// projectName
	ProjectName *string `json:"projectName,omitempty"`
}

// NewChargebackFilter instantiates a new ChargebackFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChargebackFilter() *ChargebackFilter {
	this := ChargebackFilter{}
	return &this
}

// NewChargebackFilterWithDefaults instantiates a new ChargebackFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChargebackFilterWithDefaults() *ChargebackFilter {
	this := ChargebackFilter{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *ChargebackFilter) GetCluster() string {
	if o == nil || isNil(o.Cluster) {
		var ret string
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargebackFilter) GetClusterOk() (*string, bool) {
	if o == nil || isNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *ChargebackFilter) HasCluster() bool {
	if o != nil && !isNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given string and assigns it to the Cluster field.
func (o *ChargebackFilter) SetCluster(v string) {
	o.Cluster = &v
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *ChargebackFilter) GetClusterName() string {
	if o == nil || isNil(o.ClusterName) {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargebackFilter) GetClusterNameOk() (*string, bool) {
	if o == nil || isNil(o.ClusterName) {
		return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *ChargebackFilter) HasClusterName() bool {
	if o != nil && !isNil(o.ClusterName) {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *ChargebackFilter) SetClusterName(v string) {
	o.ClusterName = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *ChargebackFilter) GetLabel() []string {
	if o == nil || isNil(o.Label) {
		var ret []string
		return ret
	}
	return o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargebackFilter) GetLabelOk() ([]string, bool) {
	if o == nil || isNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *ChargebackFilter) HasLabel() bool {
	if o != nil && !isNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given []string and assigns it to the Label field.
func (o *ChargebackFilter) SetLabel(v []string) {
	o.Label = v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *ChargebackFilter) GetNamespace() string {
	if o == nil || isNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargebackFilter) GetNamespaceOk() (*string, bool) {
	if o == nil || isNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *ChargebackFilter) HasNamespace() bool {
	if o != nil && !isNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *ChargebackFilter) SetNamespace(v string) {
	o.Namespace = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *ChargebackFilter) GetProject() string {
	if o == nil || isNil(o.Project) {
		var ret string
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargebackFilter) GetProjectOk() (*string, bool) {
	if o == nil || isNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *ChargebackFilter) HasProject() bool {
	if o != nil && !isNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given string and assigns it to the Project field.
func (o *ChargebackFilter) SetProject(v string) {
	o.Project = &v
}

// GetProjectName returns the ProjectName field value if set, zero value otherwise.
func (o *ChargebackFilter) GetProjectName() string {
	if o == nil || isNil(o.ProjectName) {
		var ret string
		return ret
	}
	return *o.ProjectName
}

// GetProjectNameOk returns a tuple with the ProjectName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargebackFilter) GetProjectNameOk() (*string, bool) {
	if o == nil || isNil(o.ProjectName) {
		return nil, false
	}
	return o.ProjectName, true
}

// HasProjectName returns a boolean if a field has been set.
func (o *ChargebackFilter) HasProjectName() bool {
	if o != nil && !isNil(o.ProjectName) {
		return true
	}

	return false
}

// SetProjectName gets a reference to the given string and assigns it to the ProjectName field.
func (o *ChargebackFilter) SetProjectName(v string) {
	o.ProjectName = &v
}

func (o ChargebackFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChargebackFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !isNil(o.ClusterName) {
		toSerialize["clusterName"] = o.ClusterName
	}
	if !isNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !isNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !isNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	if !isNil(o.ProjectName) {
		toSerialize["projectName"] = o.ProjectName
	}
	return toSerialize, nil
}

type NullableChargebackFilter struct {
	value *ChargebackFilter
	isSet bool
}

func (v NullableChargebackFilter) Get() *ChargebackFilter {
	return v.value
}

func (v *NullableChargebackFilter) Set(val *ChargebackFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableChargebackFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableChargebackFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChargebackFilter(val *ChargebackFilter) *NullableChargebackFilter {
	return &NullableChargebackFilter{value: val, isSet: true}
}

func (v NullableChargebackFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChargebackFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


