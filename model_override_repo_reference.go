/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the OverrideRepoReference type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OverrideRepoReference{}

// OverrideRepoReference represents Helm files in a Helm repo override reference
type OverrideRepoReference struct {
	// name of the git repository
	Repository string `json:"repository"`
	// branch or tag in the git repository
	Revision string `json:"revision"`
	// relative path to value file in the git repository
	ValuesPaths []File `json:"valuesPaths,omitempty"`
}

// NewOverrideRepoReference instantiates a new OverrideRepoReference object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOverrideRepoReference(repository string, revision string) *OverrideRepoReference {
	this := OverrideRepoReference{}
	this.Repository = repository
	this.Revision = revision
	return &this
}

// NewOverrideRepoReferenceWithDefaults instantiates a new OverrideRepoReference object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOverrideRepoReferenceWithDefaults() *OverrideRepoReference {
	this := OverrideRepoReference{}
	return &this
}

// GetRepository returns the Repository field value
func (o *OverrideRepoReference) GetRepository() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value
// and a boolean to check if the value has been set.
func (o *OverrideRepoReference) GetRepositoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Repository, true
}

// SetRepository sets field value
func (o *OverrideRepoReference) SetRepository(v string) {
	o.Repository = v
}

// GetRevision returns the Revision field value
func (o *OverrideRepoReference) GetRevision() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *OverrideRepoReference) GetRevisionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *OverrideRepoReference) SetRevision(v string) {
	o.Revision = v
}

// GetValuesPaths returns the ValuesPaths field value if set, zero value otherwise.
func (o *OverrideRepoReference) GetValuesPaths() []File {
	if o == nil || isNil(o.ValuesPaths) {
		var ret []File
		return ret
	}
	return o.ValuesPaths
}

// GetValuesPathsOk returns a tuple with the ValuesPaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OverrideRepoReference) GetValuesPathsOk() ([]File, bool) {
	if o == nil || isNil(o.ValuesPaths) {
		return nil, false
	}
	return o.ValuesPaths, true
}

// HasValuesPaths returns a boolean if a field has been set.
func (o *OverrideRepoReference) HasValuesPaths() bool {
	if o != nil && !isNil(o.ValuesPaths) {
		return true
	}

	return false
}

// SetValuesPaths gets a reference to the given []File and assigns it to the ValuesPaths field.
func (o *OverrideRepoReference) SetValuesPaths(v []File) {
	o.ValuesPaths = v
}

func (o OverrideRepoReference) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OverrideRepoReference) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["repository"] = o.Repository
	toSerialize["revision"] = o.Revision
	if !isNil(o.ValuesPaths) {
		toSerialize["valuesPaths"] = o.ValuesPaths
	}
	return toSerialize, nil
}

type NullableOverrideRepoReference struct {
	value *OverrideRepoReference
	isSet bool
}

func (v NullableOverrideRepoReference) Get() *OverrideRepoReference {
	return v.value
}

func (v *NullableOverrideRepoReference) Set(val *OverrideRepoReference) {
	v.value = val
	v.isSet = true
}

func (v NullableOverrideRepoReference) IsSet() bool {
	return v.isSet
}

func (v *NullableOverrideRepoReference) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOverrideRepoReference(val *OverrideRepoReference) *NullableOverrideRepoReference {
	return &NullableOverrideRepoReference{value: val, isSet: true}
}

func (v NullableOverrideRepoReference) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOverrideRepoReference) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


