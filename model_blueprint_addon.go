/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the BlueprintAddon type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlueprintAddon{}

// BlueprintAddon blueprint addon spec
type BlueprintAddon struct {
	// other addons current addons depends on
	DependsOn []string `json:"dependsOn,omitempty"`
	// name of the blueprint addon
	Name string `json:"name"`
	// version of the blueprint addon
	Version string `json:"version"`
}

// NewBlueprintAddon instantiates a new BlueprintAddon object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlueprintAddon(name string, version string) *BlueprintAddon {
	this := BlueprintAddon{}
	this.Name = name
	this.Version = version
	return &this
}

// NewBlueprintAddonWithDefaults instantiates a new BlueprintAddon object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlueprintAddonWithDefaults() *BlueprintAddon {
	this := BlueprintAddon{}
	return &this
}

// GetDependsOn returns the DependsOn field value if set, zero value otherwise.
func (o *BlueprintAddon) GetDependsOn() []string {
	if o == nil || isNil(o.DependsOn) {
		var ret []string
		return ret
	}
	return o.DependsOn
}

// GetDependsOnOk returns a tuple with the DependsOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlueprintAddon) GetDependsOnOk() ([]string, bool) {
	if o == nil || isNil(o.DependsOn) {
		return nil, false
	}
	return o.DependsOn, true
}

// HasDependsOn returns a boolean if a field has been set.
func (o *BlueprintAddon) HasDependsOn() bool {
	if o != nil && !isNil(o.DependsOn) {
		return true
	}

	return false
}

// SetDependsOn gets a reference to the given []string and assigns it to the DependsOn field.
func (o *BlueprintAddon) SetDependsOn(v []string) {
	o.DependsOn = v
}

// GetName returns the Name field value
func (o *BlueprintAddon) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BlueprintAddon) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BlueprintAddon) SetName(v string) {
	o.Name = v
}

// GetVersion returns the Version field value
func (o *BlueprintAddon) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *BlueprintAddon) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *BlueprintAddon) SetVersion(v string) {
	o.Version = v
}

func (o BlueprintAddon) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlueprintAddon) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DependsOn) {
		toSerialize["dependsOn"] = o.DependsOn
	}
	toSerialize["name"] = o.Name
	toSerialize["version"] = o.Version
	return toSerialize, nil
}

type NullableBlueprintAddon struct {
	value *BlueprintAddon
	isSet bool
}

func (v NullableBlueprintAddon) Get() *BlueprintAddon {
	return v.value
}

func (v *NullableBlueprintAddon) Set(val *BlueprintAddon) {
	v.value = val
	v.isSet = true
}

func (v NullableBlueprintAddon) IsSet() bool {
	return v.isSet
}

func (v *NullableBlueprintAddon) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlueprintAddon(val *BlueprintAddon) *NullableBlueprintAddon {
	return &NullableBlueprintAddon{value: val, isSet: true}
}

func (v NullableBlueprintAddon) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlueprintAddon) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


