/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the DeployWorkloadConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeployWorkloadConfig{}

// DeployWorkloadConfig deploy workload configuration
type DeployWorkloadConfig struct {
	// flag to indicate weather to deploy workload using revision recieved from webhook trigger
	UseRevisionFromWebhookTriggerEvent *bool `json:"useRevisionFromWebhookTriggerEvent,omitempty"`
	// name of the workload
	Workload string `json:"workload"`
}

// NewDeployWorkloadConfig instantiates a new DeployWorkloadConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployWorkloadConfig(workload string) *DeployWorkloadConfig {
	this := DeployWorkloadConfig{}
	this.Workload = workload
	return &this
}

// NewDeployWorkloadConfigWithDefaults instantiates a new DeployWorkloadConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployWorkloadConfigWithDefaults() *DeployWorkloadConfig {
	this := DeployWorkloadConfig{}
	return &this
}

// GetUseRevisionFromWebhookTriggerEvent returns the UseRevisionFromWebhookTriggerEvent field value if set, zero value otherwise.
func (o *DeployWorkloadConfig) GetUseRevisionFromWebhookTriggerEvent() bool {
	if o == nil || isNil(o.UseRevisionFromWebhookTriggerEvent) {
		var ret bool
		return ret
	}
	return *o.UseRevisionFromWebhookTriggerEvent
}

// GetUseRevisionFromWebhookTriggerEventOk returns a tuple with the UseRevisionFromWebhookTriggerEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployWorkloadConfig) GetUseRevisionFromWebhookTriggerEventOk() (*bool, bool) {
	if o == nil || isNil(o.UseRevisionFromWebhookTriggerEvent) {
		return nil, false
	}
	return o.UseRevisionFromWebhookTriggerEvent, true
}

// HasUseRevisionFromWebhookTriggerEvent returns a boolean if a field has been set.
func (o *DeployWorkloadConfig) HasUseRevisionFromWebhookTriggerEvent() bool {
	if o != nil && !isNil(o.UseRevisionFromWebhookTriggerEvent) {
		return true
	}

	return false
}

// SetUseRevisionFromWebhookTriggerEvent gets a reference to the given bool and assigns it to the UseRevisionFromWebhookTriggerEvent field.
func (o *DeployWorkloadConfig) SetUseRevisionFromWebhookTriggerEvent(v bool) {
	o.UseRevisionFromWebhookTriggerEvent = &v
}

// GetWorkload returns the Workload field value
func (o *DeployWorkloadConfig) GetWorkload() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Workload
}

// GetWorkloadOk returns a tuple with the Workload field value
// and a boolean to check if the value has been set.
func (o *DeployWorkloadConfig) GetWorkloadOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Workload, true
}

// SetWorkload sets field value
func (o *DeployWorkloadConfig) SetWorkload(v string) {
	o.Workload = v
}

func (o DeployWorkloadConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeployWorkloadConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.UseRevisionFromWebhookTriggerEvent) {
		toSerialize["useRevisionFromWebhookTriggerEvent"] = o.UseRevisionFromWebhookTriggerEvent
	}
	toSerialize["workload"] = o.Workload
	return toSerialize, nil
}

type NullableDeployWorkloadConfig struct {
	value *DeployWorkloadConfig
	isSet bool
}

func (v NullableDeployWorkloadConfig) Get() *DeployWorkloadConfig {
	return v.value
}

func (v *NullableDeployWorkloadConfig) Set(val *DeployWorkloadConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployWorkloadConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployWorkloadConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployWorkloadConfig(val *DeployWorkloadConfig) *NullableDeployWorkloadConfig {
	return &NullableDeployWorkloadConfig{value: val, isSet: true}
}

func (v NullableDeployWorkloadConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployWorkloadConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


