/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the Linuxosconfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Linuxosconfig{}

// Linuxosconfig struct for Linuxosconfig
type Linuxosconfig struct {
	// The size in MB of a swap file that will be created on each node.
	SwapFileSizeMB *int32 `json:"swapFileSizeMB,omitempty"`
	Sysctls *Sysctls `json:"sysctls,omitempty"`
	// Valid values are always, defer, defer+madvise, madvise and never. The default is madvise. For more information see Transparent Hugepages.
	TransparentHugePageDefrag *string `json:"transparentHugePageDefrag,omitempty"`
	// Valid values are always, madvise, and never. The default is always. For more information see Transparent Hugepages.
	TransparentHugePageEnabled *string `json:"transparentHugePageEnabled,omitempty"`
}

// NewLinuxosconfig instantiates a new Linuxosconfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinuxosconfig() *Linuxosconfig {
	this := Linuxosconfig{}
	return &this
}

// NewLinuxosconfigWithDefaults instantiates a new Linuxosconfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinuxosconfigWithDefaults() *Linuxosconfig {
	this := Linuxosconfig{}
	return &this
}

// GetSwapFileSizeMB returns the SwapFileSizeMB field value if set, zero value otherwise.
func (o *Linuxosconfig) GetSwapFileSizeMB() int32 {
	if o == nil || isNil(o.SwapFileSizeMB) {
		var ret int32
		return ret
	}
	return *o.SwapFileSizeMB
}

// GetSwapFileSizeMBOk returns a tuple with the SwapFileSizeMB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Linuxosconfig) GetSwapFileSizeMBOk() (*int32, bool) {
	if o == nil || isNil(o.SwapFileSizeMB) {
		return nil, false
	}
	return o.SwapFileSizeMB, true
}

// HasSwapFileSizeMB returns a boolean if a field has been set.
func (o *Linuxosconfig) HasSwapFileSizeMB() bool {
	if o != nil && !isNil(o.SwapFileSizeMB) {
		return true
	}

	return false
}

// SetSwapFileSizeMB gets a reference to the given int32 and assigns it to the SwapFileSizeMB field.
func (o *Linuxosconfig) SetSwapFileSizeMB(v int32) {
	o.SwapFileSizeMB = &v
}

// GetSysctls returns the Sysctls field value if set, zero value otherwise.
func (o *Linuxosconfig) GetSysctls() Sysctls {
	if o == nil || isNil(o.Sysctls) {
		var ret Sysctls
		return ret
	}
	return *o.Sysctls
}

// GetSysctlsOk returns a tuple with the Sysctls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Linuxosconfig) GetSysctlsOk() (*Sysctls, bool) {
	if o == nil || isNil(o.Sysctls) {
		return nil, false
	}
	return o.Sysctls, true
}

// HasSysctls returns a boolean if a field has been set.
func (o *Linuxosconfig) HasSysctls() bool {
	if o != nil && !isNil(o.Sysctls) {
		return true
	}

	return false
}

// SetSysctls gets a reference to the given Sysctls and assigns it to the Sysctls field.
func (o *Linuxosconfig) SetSysctls(v Sysctls) {
	o.Sysctls = &v
}

// GetTransparentHugePageDefrag returns the TransparentHugePageDefrag field value if set, zero value otherwise.
func (o *Linuxosconfig) GetTransparentHugePageDefrag() string {
	if o == nil || isNil(o.TransparentHugePageDefrag) {
		var ret string
		return ret
	}
	return *o.TransparentHugePageDefrag
}

// GetTransparentHugePageDefragOk returns a tuple with the TransparentHugePageDefrag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Linuxosconfig) GetTransparentHugePageDefragOk() (*string, bool) {
	if o == nil || isNil(o.TransparentHugePageDefrag) {
		return nil, false
	}
	return o.TransparentHugePageDefrag, true
}

// HasTransparentHugePageDefrag returns a boolean if a field has been set.
func (o *Linuxosconfig) HasTransparentHugePageDefrag() bool {
	if o != nil && !isNil(o.TransparentHugePageDefrag) {
		return true
	}

	return false
}

// SetTransparentHugePageDefrag gets a reference to the given string and assigns it to the TransparentHugePageDefrag field.
func (o *Linuxosconfig) SetTransparentHugePageDefrag(v string) {
	o.TransparentHugePageDefrag = &v
}

// GetTransparentHugePageEnabled returns the TransparentHugePageEnabled field value if set, zero value otherwise.
func (o *Linuxosconfig) GetTransparentHugePageEnabled() string {
	if o == nil || isNil(o.TransparentHugePageEnabled) {
		var ret string
		return ret
	}
	return *o.TransparentHugePageEnabled
}

// GetTransparentHugePageEnabledOk returns a tuple with the TransparentHugePageEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Linuxosconfig) GetTransparentHugePageEnabledOk() (*string, bool) {
	if o == nil || isNil(o.TransparentHugePageEnabled) {
		return nil, false
	}
	return o.TransparentHugePageEnabled, true
}

// HasTransparentHugePageEnabled returns a boolean if a field has been set.
func (o *Linuxosconfig) HasTransparentHugePageEnabled() bool {
	if o != nil && !isNil(o.TransparentHugePageEnabled) {
		return true
	}

	return false
}

// SetTransparentHugePageEnabled gets a reference to the given string and assigns it to the TransparentHugePageEnabled field.
func (o *Linuxosconfig) SetTransparentHugePageEnabled(v string) {
	o.TransparentHugePageEnabled = &v
}

func (o Linuxosconfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Linuxosconfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.SwapFileSizeMB) {
		toSerialize["swapFileSizeMB"] = o.SwapFileSizeMB
	}
	if !isNil(o.Sysctls) {
		toSerialize["sysctls"] = o.Sysctls
	}
	if !isNil(o.TransparentHugePageDefrag) {
		toSerialize["transparentHugePageDefrag"] = o.TransparentHugePageDefrag
	}
	if !isNil(o.TransparentHugePageEnabled) {
		toSerialize["transparentHugePageEnabled"] = o.TransparentHugePageEnabled
	}
	return toSerialize, nil
}

type NullableLinuxosconfig struct {
	value *Linuxosconfig
	isSet bool
}

func (v NullableLinuxosconfig) Get() *Linuxosconfig {
	return v.value
}

func (v *NullableLinuxosconfig) Set(val *Linuxosconfig) {
	v.value = val
	v.isSet = true
}

func (v NullableLinuxosconfig) IsSet() bool {
	return v.isSet
}

func (v *NullableLinuxosconfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinuxosconfig(val *Linuxosconfig) *NullableLinuxosconfig {
	return &NullableLinuxosconfig{value: val, isSet: true}
}

func (v NullableLinuxosconfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinuxosconfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


