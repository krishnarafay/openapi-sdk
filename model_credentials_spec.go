/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the CredentialsSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CredentialsSpec{}

// CredentialsSpec struct for CredentialsSpec
type CredentialsSpec struct {
	Credentials *CredentialsSpecCredentials `json:"credentials,omitempty"`
	// Provider of Credential Access
	Provider *string `json:"provider,omitempty"`
	Secret *File `json:"secret,omitempty"`
	Sharing *SharingSpec `json:"sharing,omitempty"`
	// Type of Credentials Access
	Type *string `json:"type,omitempty"`
}

// NewCredentialsSpec instantiates a new CredentialsSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialsSpec() *CredentialsSpec {
	this := CredentialsSpec{}
	var provider string = "aws"
	this.Provider = &provider
	var type_ string = "ClusterProvisioning"
	this.Type = &type_
	return &this
}

// NewCredentialsSpecWithDefaults instantiates a new CredentialsSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialsSpecWithDefaults() *CredentialsSpec {
	this := CredentialsSpec{}
	var provider string = "aws"
	this.Provider = &provider
	var type_ string = "ClusterProvisioning"
	this.Type = &type_
	return &this
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *CredentialsSpec) GetCredentials() CredentialsSpecCredentials {
	if o == nil || isNil(o.Credentials) {
		var ret CredentialsSpecCredentials
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsSpec) GetCredentialsOk() (*CredentialsSpecCredentials, bool) {
	if o == nil || isNil(o.Credentials) {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *CredentialsSpec) HasCredentials() bool {
	if o != nil && !isNil(o.Credentials) {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given CredentialsSpecCredentials and assigns it to the Credentials field.
func (o *CredentialsSpec) SetCredentials(v CredentialsSpecCredentials) {
	o.Credentials = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *CredentialsSpec) GetProvider() string {
	if o == nil || isNil(o.Provider) {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsSpec) GetProviderOk() (*string, bool) {
	if o == nil || isNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *CredentialsSpec) HasProvider() bool {
	if o != nil && !isNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *CredentialsSpec) SetProvider(v string) {
	o.Provider = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *CredentialsSpec) GetSecret() File {
	if o == nil || isNil(o.Secret) {
		var ret File
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsSpec) GetSecretOk() (*File, bool) {
	if o == nil || isNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *CredentialsSpec) HasSecret() bool {
	if o != nil && !isNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given File and assigns it to the Secret field.
func (o *CredentialsSpec) SetSecret(v File) {
	o.Secret = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *CredentialsSpec) GetSharing() SharingSpec {
	if o == nil || isNil(o.Sharing) {
		var ret SharingSpec
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsSpec) GetSharingOk() (*SharingSpec, bool) {
	if o == nil || isNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *CredentialsSpec) HasSharing() bool {
	if o != nil && !isNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given SharingSpec and assigns it to the Sharing field.
func (o *CredentialsSpec) SetSharing(v SharingSpec) {
	o.Sharing = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CredentialsSpec) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsSpec) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CredentialsSpec) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CredentialsSpec) SetType(v string) {
	o.Type = &v
}

func (o CredentialsSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CredentialsSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Credentials) {
		toSerialize["credentials"] = o.Credentials
	}
	if !isNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !isNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	if !isNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableCredentialsSpec struct {
	value *CredentialsSpec
	isSet bool
}

func (v NullableCredentialsSpec) Get() *CredentialsSpec {
	return v.value
}

func (v *NullableCredentialsSpec) Set(val *CredentialsSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialsSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialsSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialsSpec(val *CredentialsSpec) *NullableCredentialsSpec {
	return &NullableCredentialsSpec{value: val, isSet: true}
}

func (v NullableCredentialsSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialsSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


