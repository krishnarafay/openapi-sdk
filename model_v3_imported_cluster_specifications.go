/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the V3ImportedClusterSpecifications type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V3ImportedClusterSpecifications{}

// V3ImportedClusterSpecifications imported cluster specification
type V3ImportedClusterSpecifications struct {
	// kubernetes provider of the cluster
	KubernetesProvider *string `json:"kubernetesProvider,omitempty"`
	// location of the cluster
	Location *string `json:"location,omitempty"`
	// provisioning environment for the cluster
	ProvisionEnvironment *string `json:"provisionEnvironment,omitempty"`
}

// NewV3ImportedClusterSpecifications instantiates a new V3ImportedClusterSpecifications object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV3ImportedClusterSpecifications() *V3ImportedClusterSpecifications {
	this := V3ImportedClusterSpecifications{}
	return &this
}

// NewV3ImportedClusterSpecificationsWithDefaults instantiates a new V3ImportedClusterSpecifications object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV3ImportedClusterSpecificationsWithDefaults() *V3ImportedClusterSpecifications {
	this := V3ImportedClusterSpecifications{}
	return &this
}

// GetKubernetesProvider returns the KubernetesProvider field value if set, zero value otherwise.
func (o *V3ImportedClusterSpecifications) GetKubernetesProvider() string {
	if o == nil || isNil(o.KubernetesProvider) {
		var ret string
		return ret
	}
	return *o.KubernetesProvider
}

// GetKubernetesProviderOk returns a tuple with the KubernetesProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3ImportedClusterSpecifications) GetKubernetesProviderOk() (*string, bool) {
	if o == nil || isNil(o.KubernetesProvider) {
		return nil, false
	}
	return o.KubernetesProvider, true
}

// HasKubernetesProvider returns a boolean if a field has been set.
func (o *V3ImportedClusterSpecifications) HasKubernetesProvider() bool {
	if o != nil && !isNil(o.KubernetesProvider) {
		return true
	}

	return false
}

// SetKubernetesProvider gets a reference to the given string and assigns it to the KubernetesProvider field.
func (o *V3ImportedClusterSpecifications) SetKubernetesProvider(v string) {
	o.KubernetesProvider = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *V3ImportedClusterSpecifications) GetLocation() string {
	if o == nil || isNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3ImportedClusterSpecifications) GetLocationOk() (*string, bool) {
	if o == nil || isNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *V3ImportedClusterSpecifications) HasLocation() bool {
	if o != nil && !isNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *V3ImportedClusterSpecifications) SetLocation(v string) {
	o.Location = &v
}

// GetProvisionEnvironment returns the ProvisionEnvironment field value if set, zero value otherwise.
func (o *V3ImportedClusterSpecifications) GetProvisionEnvironment() string {
	if o == nil || isNil(o.ProvisionEnvironment) {
		var ret string
		return ret
	}
	return *o.ProvisionEnvironment
}

// GetProvisionEnvironmentOk returns a tuple with the ProvisionEnvironment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V3ImportedClusterSpecifications) GetProvisionEnvironmentOk() (*string, bool) {
	if o == nil || isNil(o.ProvisionEnvironment) {
		return nil, false
	}
	return o.ProvisionEnvironment, true
}

// HasProvisionEnvironment returns a boolean if a field has been set.
func (o *V3ImportedClusterSpecifications) HasProvisionEnvironment() bool {
	if o != nil && !isNil(o.ProvisionEnvironment) {
		return true
	}

	return false
}

// SetProvisionEnvironment gets a reference to the given string and assigns it to the ProvisionEnvironment field.
func (o *V3ImportedClusterSpecifications) SetProvisionEnvironment(v string) {
	o.ProvisionEnvironment = &v
}

func (o V3ImportedClusterSpecifications) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V3ImportedClusterSpecifications) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.KubernetesProvider) {
		toSerialize["kubernetesProvider"] = o.KubernetesProvider
	}
	if !isNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !isNil(o.ProvisionEnvironment) {
		toSerialize["provisionEnvironment"] = o.ProvisionEnvironment
	}
	return toSerialize, nil
}

type NullableV3ImportedClusterSpecifications struct {
	value *V3ImportedClusterSpecifications
	isSet bool
}

func (v NullableV3ImportedClusterSpecifications) Get() *V3ImportedClusterSpecifications {
	return v.value
}

func (v *NullableV3ImportedClusterSpecifications) Set(val *V3ImportedClusterSpecifications) {
	v.value = val
	v.isSet = true
}

func (v NullableV3ImportedClusterSpecifications) IsSet() bool {
	return v.isSet
}

func (v *NullableV3ImportedClusterSpecifications) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV3ImportedClusterSpecifications(val *V3ImportedClusterSpecifications) *NullableV3ImportedClusterSpecifications {
	return &NullableV3ImportedClusterSpecifications{value: val, isSet: true}
}

func (v NullableV3ImportedClusterSpecifications) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV3ImportedClusterSpecifications) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


