/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ConfigObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigObject{}

// ConfigObject struct for ConfigObject
type ConfigObject struct {
	Raw *string `json:"raw,omitempty"`
}

// NewConfigObject instantiates a new ConfigObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigObject() *ConfigObject {
	this := ConfigObject{}
	return &this
}

// NewConfigObjectWithDefaults instantiates a new ConfigObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigObjectWithDefaults() *ConfigObject {
	this := ConfigObject{}
	return &this
}

// GetRaw returns the Raw field value if set, zero value otherwise.
func (o *ConfigObject) GetRaw() string {
	if o == nil || isNil(o.Raw) {
		var ret string
		return ret
	}
	return *o.Raw
}

// GetRawOk returns a tuple with the Raw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigObject) GetRawOk() (*string, bool) {
	if o == nil || isNil(o.Raw) {
		return nil, false
	}
	return o.Raw, true
}

// HasRaw returns a boolean if a field has been set.
func (o *ConfigObject) HasRaw() bool {
	if o != nil && !isNil(o.Raw) {
		return true
	}

	return false
}

// SetRaw gets a reference to the given string and assigns it to the Raw field.
func (o *ConfigObject) SetRaw(v string) {
	o.Raw = &v
}

func (o ConfigObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Raw) {
		toSerialize["raw"] = o.Raw
	}
	return toSerialize, nil
}

type NullableConfigObject struct {
	value *ConfigObject
	isSet bool
}

func (v NullableConfigObject) Get() *ConfigObject {
	return v.value
}

func (v *NullableConfigObject) Set(val *ConfigObject) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigObject) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigObject(val *ConfigObject) *NullableConfigObject {
	return &NullableConfigObject{value: val, isSet: true}
}

func (v NullableConfigObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


