/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the RegistryGCPCredentials type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegistryGCPCredentials{}

// RegistryGCPCredentials struct for RegistryGCPCredentials
type RegistryGCPCredentials struct {
	JsonKeyData *string `json:"jsonKeyData,omitempty"`
}

// NewRegistryGCPCredentials instantiates a new RegistryGCPCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegistryGCPCredentials() *RegistryGCPCredentials {
	this := RegistryGCPCredentials{}
	return &this
}

// NewRegistryGCPCredentialsWithDefaults instantiates a new RegistryGCPCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegistryGCPCredentialsWithDefaults() *RegistryGCPCredentials {
	this := RegistryGCPCredentials{}
	return &this
}

// GetJsonKeyData returns the JsonKeyData field value if set, zero value otherwise.
func (o *RegistryGCPCredentials) GetJsonKeyData() string {
	if o == nil || isNil(o.JsonKeyData) {
		var ret string
		return ret
	}
	return *o.JsonKeyData
}

// GetJsonKeyDataOk returns a tuple with the JsonKeyData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistryGCPCredentials) GetJsonKeyDataOk() (*string, bool) {
	if o == nil || isNil(o.JsonKeyData) {
		return nil, false
	}
	return o.JsonKeyData, true
}

// HasJsonKeyData returns a boolean if a field has been set.
func (o *RegistryGCPCredentials) HasJsonKeyData() bool {
	if o != nil && !isNil(o.JsonKeyData) {
		return true
	}

	return false
}

// SetJsonKeyData gets a reference to the given string and assigns it to the JsonKeyData field.
func (o *RegistryGCPCredentials) SetJsonKeyData(v string) {
	o.JsonKeyData = &v
}

func (o RegistryGCPCredentials) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegistryGCPCredentials) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.JsonKeyData) {
		toSerialize["jsonKeyData"] = o.JsonKeyData
	}
	return toSerialize, nil
}

type NullableRegistryGCPCredentials struct {
	value *RegistryGCPCredentials
	isSet bool
}

func (v NullableRegistryGCPCredentials) Get() *RegistryGCPCredentials {
	return v.value
}

func (v *NullableRegistryGCPCredentials) Set(val *RegistryGCPCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableRegistryGCPCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableRegistryGCPCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegistryGCPCredentials(val *RegistryGCPCredentials) *NullableRegistryGCPCredentials {
	return &NullableRegistryGCPCredentials{value: val, isSet: true}
}

func (v NullableRegistryGCPCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegistryGCPCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


