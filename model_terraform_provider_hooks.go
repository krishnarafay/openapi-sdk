/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the TerraformProviderHooks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TerraformProviderHooks{}

// TerraformProviderHooks struct for TerraformProviderHooks
type TerraformProviderHooks struct {
	Deploy *TerraformDeployHooks `json:"deploy,omitempty"`
	Destroy *TerraformDestroyHooks `json:"destroy,omitempty"`
}

// NewTerraformProviderHooks instantiates a new TerraformProviderHooks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTerraformProviderHooks() *TerraformProviderHooks {
	this := TerraformProviderHooks{}
	return &this
}

// NewTerraformProviderHooksWithDefaults instantiates a new TerraformProviderHooks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTerraformProviderHooksWithDefaults() *TerraformProviderHooks {
	this := TerraformProviderHooks{}
	return &this
}

// GetDeploy returns the Deploy field value if set, zero value otherwise.
func (o *TerraformProviderHooks) GetDeploy() TerraformDeployHooks {
	if o == nil || isNil(o.Deploy) {
		var ret TerraformDeployHooks
		return ret
	}
	return *o.Deploy
}

// GetDeployOk returns a tuple with the Deploy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformProviderHooks) GetDeployOk() (*TerraformDeployHooks, bool) {
	if o == nil || isNil(o.Deploy) {
		return nil, false
	}
	return o.Deploy, true
}

// HasDeploy returns a boolean if a field has been set.
func (o *TerraformProviderHooks) HasDeploy() bool {
	if o != nil && !isNil(o.Deploy) {
		return true
	}

	return false
}

// SetDeploy gets a reference to the given TerraformDeployHooks and assigns it to the Deploy field.
func (o *TerraformProviderHooks) SetDeploy(v TerraformDeployHooks) {
	o.Deploy = &v
}

// GetDestroy returns the Destroy field value if set, zero value otherwise.
func (o *TerraformProviderHooks) GetDestroy() TerraformDestroyHooks {
	if o == nil || isNil(o.Destroy) {
		var ret TerraformDestroyHooks
		return ret
	}
	return *o.Destroy
}

// GetDestroyOk returns a tuple with the Destroy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformProviderHooks) GetDestroyOk() (*TerraformDestroyHooks, bool) {
	if o == nil || isNil(o.Destroy) {
		return nil, false
	}
	return o.Destroy, true
}

// HasDestroy returns a boolean if a field has been set.
func (o *TerraformProviderHooks) HasDestroy() bool {
	if o != nil && !isNil(o.Destroy) {
		return true
	}

	return false
}

// SetDestroy gets a reference to the given TerraformDestroyHooks and assigns it to the Destroy field.
func (o *TerraformProviderHooks) SetDestroy(v TerraformDestroyHooks) {
	o.Destroy = &v
}

func (o TerraformProviderHooks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TerraformProviderHooks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Deploy) {
		toSerialize["deploy"] = o.Deploy
	}
	if !isNil(o.Destroy) {
		toSerialize["destroy"] = o.Destroy
	}
	return toSerialize, nil
}

type NullableTerraformProviderHooks struct {
	value *TerraformProviderHooks
	isSet bool
}

func (v NullableTerraformProviderHooks) Get() *TerraformProviderHooks {
	return v.value
}

func (v *NullableTerraformProviderHooks) Set(val *TerraformProviderHooks) {
	v.value = val
	v.isSet = true
}

func (v NullableTerraformProviderHooks) IsSet() bool {
	return v.isSet
}

func (v *NullableTerraformProviderHooks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTerraformProviderHooks(val *TerraformProviderHooks) *NullableTerraformProviderHooks {
	return &NullableTerraformProviderHooks{value: val, isSet: true}
}

func (v NullableTerraformProviderHooks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTerraformProviderHooks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


