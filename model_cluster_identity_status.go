/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ClusterIdentityStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterIdentityStatus{}

// ClusterIdentityStatus struct for ClusterIdentityStatus
type ClusterIdentityStatus struct {
	PrincipalId *string `json:"principalId,omitempty"`
	TenantId *string `json:"tenantId,omitempty"`
}

// NewClusterIdentityStatus instantiates a new ClusterIdentityStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterIdentityStatus() *ClusterIdentityStatus {
	this := ClusterIdentityStatus{}
	return &this
}

// NewClusterIdentityStatusWithDefaults instantiates a new ClusterIdentityStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterIdentityStatusWithDefaults() *ClusterIdentityStatus {
	this := ClusterIdentityStatus{}
	return &this
}

// GetPrincipalId returns the PrincipalId field value if set, zero value otherwise.
func (o *ClusterIdentityStatus) GetPrincipalId() string {
	if o == nil || isNil(o.PrincipalId) {
		var ret string
		return ret
	}
	return *o.PrincipalId
}

// GetPrincipalIdOk returns a tuple with the PrincipalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterIdentityStatus) GetPrincipalIdOk() (*string, bool) {
	if o == nil || isNil(o.PrincipalId) {
		return nil, false
	}
	return o.PrincipalId, true
}

// HasPrincipalId returns a boolean if a field has been set.
func (o *ClusterIdentityStatus) HasPrincipalId() bool {
	if o != nil && !isNil(o.PrincipalId) {
		return true
	}

	return false
}

// SetPrincipalId gets a reference to the given string and assigns it to the PrincipalId field.
func (o *ClusterIdentityStatus) SetPrincipalId(v string) {
	o.PrincipalId = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *ClusterIdentityStatus) GetTenantId() string {
	if o == nil || isNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterIdentityStatus) GetTenantIdOk() (*string, bool) {
	if o == nil || isNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *ClusterIdentityStatus) HasTenantId() bool {
	if o != nil && !isNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *ClusterIdentityStatus) SetTenantId(v string) {
	o.TenantId = &v
}

func (o ClusterIdentityStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterIdentityStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PrincipalId) {
		toSerialize["principalId"] = o.PrincipalId
	}
	if !isNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	return toSerialize, nil
}

type NullableClusterIdentityStatus struct {
	value *ClusterIdentityStatus
	isSet bool
}

func (v NullableClusterIdentityStatus) Get() *ClusterIdentityStatus {
	return v.value
}

func (v *NullableClusterIdentityStatus) Set(val *ClusterIdentityStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterIdentityStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterIdentityStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterIdentityStatus(val *ClusterIdentityStatus) *NullableClusterIdentityStatus {
	return &NullableClusterIdentityStatus{value: val, isSet: true}
}

func (v NullableClusterIdentityStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterIdentityStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


