/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the VariableSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VariableSpec{}

// VariableSpec specification of variables
type VariableSpec struct {
	// name of the variable
	Name string `json:"name"`
	// type of the variable
	Type string `json:"type"`
	// value of the variable
	Value string `json:"value"`
}

// NewVariableSpec instantiates a new VariableSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVariableSpec(name string, type_ string, value string) *VariableSpec {
	this := VariableSpec{}
	this.Name = name
	this.Type = type_
	this.Value = value
	return &this
}

// NewVariableSpecWithDefaults instantiates a new VariableSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVariableSpecWithDefaults() *VariableSpec {
	this := VariableSpec{}
	return &this
}

// GetName returns the Name field value
func (o *VariableSpec) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VariableSpec) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VariableSpec) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *VariableSpec) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *VariableSpec) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *VariableSpec) SetType(v string) {
	o.Type = v
}

// GetValue returns the Value field value
func (o *VariableSpec) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *VariableSpec) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *VariableSpec) SetValue(v string) {
	o.Value = v
}

func (o VariableSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VariableSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableVariableSpec struct {
	value *VariableSpec
	isSet bool
}

func (v NullableVariableSpec) Get() *VariableSpec {
	return v.value
}

func (v *NullableVariableSpec) Set(val *VariableSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVariableSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVariableSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVariableSpec(val *VariableSpec) *NullableVariableSpec {
	return &NullableVariableSpec{value: val, isSet: true}
}

func (v NullableVariableSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVariableSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


