/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ContainerOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContainerOptions{}

// ContainerOptions struct for ContainerOptions
type ContainerOptions struct {
	// Specify the set of arguments to be passed
	Arguments []string `json:"arguments,omitempty"`
	// Specify the set of commands to be executed
	Commands []string `json:"commands,omitempty"`
	// Specify the cpu limit in milli
	CpuLimitMilli *string `json:"cpuLimitMilli,omitempty"`
	// Specify the environment variables to be set in key,value pair
	Envvars *map[string]string `json:"envvars,omitempty"`
	// Specify the container image to be used
	Image *string `json:"image,omitempty"`
	// Specify the memory limit to be allocated in MB
	MemoryLimitMB *string `json:"memoryLimitMB,omitempty"`
	// Specify the success condition of the container
	SuccessCondition *string `json:"successCondition,omitempty"`
	// Specify the working directory path
	WorkingDirPath *string `json:"workingDirPath,omitempty"`
}

// NewContainerOptions instantiates a new ContainerOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerOptions() *ContainerOptions {
	this := ContainerOptions{}
	return &this
}

// NewContainerOptionsWithDefaults instantiates a new ContainerOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerOptionsWithDefaults() *ContainerOptions {
	this := ContainerOptions{}
	return &this
}

// GetArguments returns the Arguments field value if set, zero value otherwise.
func (o *ContainerOptions) GetArguments() []string {
	if o == nil || isNil(o.Arguments) {
		var ret []string
		return ret
	}
	return o.Arguments
}

// GetArgumentsOk returns a tuple with the Arguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerOptions) GetArgumentsOk() ([]string, bool) {
	if o == nil || isNil(o.Arguments) {
		return nil, false
	}
	return o.Arguments, true
}

// HasArguments returns a boolean if a field has been set.
func (o *ContainerOptions) HasArguments() bool {
	if o != nil && !isNil(o.Arguments) {
		return true
	}

	return false
}

// SetArguments gets a reference to the given []string and assigns it to the Arguments field.
func (o *ContainerOptions) SetArguments(v []string) {
	o.Arguments = v
}

// GetCommands returns the Commands field value if set, zero value otherwise.
func (o *ContainerOptions) GetCommands() []string {
	if o == nil || isNil(o.Commands) {
		var ret []string
		return ret
	}
	return o.Commands
}

// GetCommandsOk returns a tuple with the Commands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerOptions) GetCommandsOk() ([]string, bool) {
	if o == nil || isNil(o.Commands) {
		return nil, false
	}
	return o.Commands, true
}

// HasCommands returns a boolean if a field has been set.
func (o *ContainerOptions) HasCommands() bool {
	if o != nil && !isNil(o.Commands) {
		return true
	}

	return false
}

// SetCommands gets a reference to the given []string and assigns it to the Commands field.
func (o *ContainerOptions) SetCommands(v []string) {
	o.Commands = v
}

// GetCpuLimitMilli returns the CpuLimitMilli field value if set, zero value otherwise.
func (o *ContainerOptions) GetCpuLimitMilli() string {
	if o == nil || isNil(o.CpuLimitMilli) {
		var ret string
		return ret
	}
	return *o.CpuLimitMilli
}

// GetCpuLimitMilliOk returns a tuple with the CpuLimitMilli field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerOptions) GetCpuLimitMilliOk() (*string, bool) {
	if o == nil || isNil(o.CpuLimitMilli) {
		return nil, false
	}
	return o.CpuLimitMilli, true
}

// HasCpuLimitMilli returns a boolean if a field has been set.
func (o *ContainerOptions) HasCpuLimitMilli() bool {
	if o != nil && !isNil(o.CpuLimitMilli) {
		return true
	}

	return false
}

// SetCpuLimitMilli gets a reference to the given string and assigns it to the CpuLimitMilli field.
func (o *ContainerOptions) SetCpuLimitMilli(v string) {
	o.CpuLimitMilli = &v
}

// GetEnvvars returns the Envvars field value if set, zero value otherwise.
func (o *ContainerOptions) GetEnvvars() map[string]string {
	if o == nil || isNil(o.Envvars) {
		var ret map[string]string
		return ret
	}
	return *o.Envvars
}

// GetEnvvarsOk returns a tuple with the Envvars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerOptions) GetEnvvarsOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Envvars) {
		return nil, false
	}
	return o.Envvars, true
}

// HasEnvvars returns a boolean if a field has been set.
func (o *ContainerOptions) HasEnvvars() bool {
	if o != nil && !isNil(o.Envvars) {
		return true
	}

	return false
}

// SetEnvvars gets a reference to the given map[string]string and assigns it to the Envvars field.
func (o *ContainerOptions) SetEnvvars(v map[string]string) {
	o.Envvars = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *ContainerOptions) GetImage() string {
	if o == nil || isNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerOptions) GetImageOk() (*string, bool) {
	if o == nil || isNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *ContainerOptions) HasImage() bool {
	if o != nil && !isNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *ContainerOptions) SetImage(v string) {
	o.Image = &v
}

// GetMemoryLimitMB returns the MemoryLimitMB field value if set, zero value otherwise.
func (o *ContainerOptions) GetMemoryLimitMB() string {
	if o == nil || isNil(o.MemoryLimitMB) {
		var ret string
		return ret
	}
	return *o.MemoryLimitMB
}

// GetMemoryLimitMBOk returns a tuple with the MemoryLimitMB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerOptions) GetMemoryLimitMBOk() (*string, bool) {
	if o == nil || isNil(o.MemoryLimitMB) {
		return nil, false
	}
	return o.MemoryLimitMB, true
}

// HasMemoryLimitMB returns a boolean if a field has been set.
func (o *ContainerOptions) HasMemoryLimitMB() bool {
	if o != nil && !isNil(o.MemoryLimitMB) {
		return true
	}

	return false
}

// SetMemoryLimitMB gets a reference to the given string and assigns it to the MemoryLimitMB field.
func (o *ContainerOptions) SetMemoryLimitMB(v string) {
	o.MemoryLimitMB = &v
}

// GetSuccessCondition returns the SuccessCondition field value if set, zero value otherwise.
func (o *ContainerOptions) GetSuccessCondition() string {
	if o == nil || isNil(o.SuccessCondition) {
		var ret string
		return ret
	}
	return *o.SuccessCondition
}

// GetSuccessConditionOk returns a tuple with the SuccessCondition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerOptions) GetSuccessConditionOk() (*string, bool) {
	if o == nil || isNil(o.SuccessCondition) {
		return nil, false
	}
	return o.SuccessCondition, true
}

// HasSuccessCondition returns a boolean if a field has been set.
func (o *ContainerOptions) HasSuccessCondition() bool {
	if o != nil && !isNil(o.SuccessCondition) {
		return true
	}

	return false
}

// SetSuccessCondition gets a reference to the given string and assigns it to the SuccessCondition field.
func (o *ContainerOptions) SetSuccessCondition(v string) {
	o.SuccessCondition = &v
}

// GetWorkingDirPath returns the WorkingDirPath field value if set, zero value otherwise.
func (o *ContainerOptions) GetWorkingDirPath() string {
	if o == nil || isNil(o.WorkingDirPath) {
		var ret string
		return ret
	}
	return *o.WorkingDirPath
}

// GetWorkingDirPathOk returns a tuple with the WorkingDirPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerOptions) GetWorkingDirPathOk() (*string, bool) {
	if o == nil || isNil(o.WorkingDirPath) {
		return nil, false
	}
	return o.WorkingDirPath, true
}

// HasWorkingDirPath returns a boolean if a field has been set.
func (o *ContainerOptions) HasWorkingDirPath() bool {
	if o != nil && !isNil(o.WorkingDirPath) {
		return true
	}

	return false
}

// SetWorkingDirPath gets a reference to the given string and assigns it to the WorkingDirPath field.
func (o *ContainerOptions) SetWorkingDirPath(v string) {
	o.WorkingDirPath = &v
}

func (o ContainerOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContainerOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Arguments) {
		toSerialize["arguments"] = o.Arguments
	}
	if !isNil(o.Commands) {
		toSerialize["commands"] = o.Commands
	}
	if !isNil(o.CpuLimitMilli) {
		toSerialize["cpuLimitMilli"] = o.CpuLimitMilli
	}
	if !isNil(o.Envvars) {
		toSerialize["envvars"] = o.Envvars
	}
	if !isNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !isNil(o.MemoryLimitMB) {
		toSerialize["memoryLimitMB"] = o.MemoryLimitMB
	}
	if !isNil(o.SuccessCondition) {
		toSerialize["successCondition"] = o.SuccessCondition
	}
	if !isNil(o.WorkingDirPath) {
		toSerialize["workingDirPath"] = o.WorkingDirPath
	}
	return toSerialize, nil
}

type NullableContainerOptions struct {
	value *ContainerOptions
	isSet bool
}

func (v NullableContainerOptions) Get() *ContainerOptions {
	return v.value
}

func (v *NullableContainerOptions) Set(val *ContainerOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerOptions(val *ContainerOptions) *NullableContainerOptions {
	return &NullableContainerOptions{value: val, isSet: true}
}

func (v NullableContainerOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


