/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the Defender type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Defender{}

// Defender struct for Defender
type Defender struct {
	// Resource ID of the Log Analytics workspace to be associated with Microsoft Defender. When Microsoft Defender is enabled, this field is required and must be a valid workspace resource ID. When Microsoft Defender is disabled, leave the field empty.
	LogAnalyticsWorkspaceResourceId *string `json:"logAnalyticsWorkspaceResourceId,omitempty"`
	SecurityMonitoring *Securitymonitoring `json:"securityMonitoring,omitempty"`
}

// NewDefender instantiates a new Defender object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDefender() *Defender {
	this := Defender{}
	return &this
}

// NewDefenderWithDefaults instantiates a new Defender object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDefenderWithDefaults() *Defender {
	this := Defender{}
	return &this
}

// GetLogAnalyticsWorkspaceResourceId returns the LogAnalyticsWorkspaceResourceId field value if set, zero value otherwise.
func (o *Defender) GetLogAnalyticsWorkspaceResourceId() string {
	if o == nil || isNil(o.LogAnalyticsWorkspaceResourceId) {
		var ret string
		return ret
	}
	return *o.LogAnalyticsWorkspaceResourceId
}

// GetLogAnalyticsWorkspaceResourceIdOk returns a tuple with the LogAnalyticsWorkspaceResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Defender) GetLogAnalyticsWorkspaceResourceIdOk() (*string, bool) {
	if o == nil || isNil(o.LogAnalyticsWorkspaceResourceId) {
		return nil, false
	}
	return o.LogAnalyticsWorkspaceResourceId, true
}

// HasLogAnalyticsWorkspaceResourceId returns a boolean if a field has been set.
func (o *Defender) HasLogAnalyticsWorkspaceResourceId() bool {
	if o != nil && !isNil(o.LogAnalyticsWorkspaceResourceId) {
		return true
	}

	return false
}

// SetLogAnalyticsWorkspaceResourceId gets a reference to the given string and assigns it to the LogAnalyticsWorkspaceResourceId field.
func (o *Defender) SetLogAnalyticsWorkspaceResourceId(v string) {
	o.LogAnalyticsWorkspaceResourceId = &v
}

// GetSecurityMonitoring returns the SecurityMonitoring field value if set, zero value otherwise.
func (o *Defender) GetSecurityMonitoring() Securitymonitoring {
	if o == nil || isNil(o.SecurityMonitoring) {
		var ret Securitymonitoring
		return ret
	}
	return *o.SecurityMonitoring
}

// GetSecurityMonitoringOk returns a tuple with the SecurityMonitoring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Defender) GetSecurityMonitoringOk() (*Securitymonitoring, bool) {
	if o == nil || isNil(o.SecurityMonitoring) {
		return nil, false
	}
	return o.SecurityMonitoring, true
}

// HasSecurityMonitoring returns a boolean if a field has been set.
func (o *Defender) HasSecurityMonitoring() bool {
	if o != nil && !isNil(o.SecurityMonitoring) {
		return true
	}

	return false
}

// SetSecurityMonitoring gets a reference to the given Securitymonitoring and assigns it to the SecurityMonitoring field.
func (o *Defender) SetSecurityMonitoring(v Securitymonitoring) {
	o.SecurityMonitoring = &v
}

func (o Defender) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Defender) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.LogAnalyticsWorkspaceResourceId) {
		toSerialize["logAnalyticsWorkspaceResourceId"] = o.LogAnalyticsWorkspaceResourceId
	}
	if !isNil(o.SecurityMonitoring) {
		toSerialize["securityMonitoring"] = o.SecurityMonitoring
	}
	return toSerialize, nil
}

type NullableDefender struct {
	value *Defender
	isSet bool
}

func (v NullableDefender) Get() *Defender {
	return v.value
}

func (v *NullableDefender) Set(val *Defender) {
	v.value = val
	v.isSet = true
}

func (v NullableDefender) IsSet() bool {
	return v.isSet
}

func (v *NullableDefender) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDefender(val *Defender) *NullableDefender {
	return &NullableDefender{value: val, isSet: true}
}

func (v NullableDefender) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDefender) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


