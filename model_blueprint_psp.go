/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the BlueprintPSP type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlueprintPSP{}

// BlueprintPSP blueprint PSP metadata
type BlueprintPSP struct {
	// flag to specify if PSP is enabled for blueprint
	Enabled bool `json:"enabled"`
	// names of the PSPs to be added for the blueprint
	Names []string `json:"names"`
	// scope of the PSP for the blueprint
	Scope string `json:"scope"`
}

// NewBlueprintPSP instantiates a new BlueprintPSP object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlueprintPSP(enabled bool, names []string, scope string) *BlueprintPSP {
	this := BlueprintPSP{}
	this.Enabled = enabled
	this.Names = names
	this.Scope = scope
	return &this
}

// NewBlueprintPSPWithDefaults instantiates a new BlueprintPSP object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlueprintPSPWithDefaults() *BlueprintPSP {
	this := BlueprintPSP{}
	return &this
}

// GetEnabled returns the Enabled field value
func (o *BlueprintPSP) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *BlueprintPSP) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *BlueprintPSP) SetEnabled(v bool) {
	o.Enabled = v
}

// GetNames returns the Names field value
func (o *BlueprintPSP) GetNames() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Names
}

// GetNamesOk returns a tuple with the Names field value
// and a boolean to check if the value has been set.
func (o *BlueprintPSP) GetNamesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Names, true
}

// SetNames sets field value
func (o *BlueprintPSP) SetNames(v []string) {
	o.Names = v
}

// GetScope returns the Scope field value
func (o *BlueprintPSP) GetScope() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
func (o *BlueprintPSP) GetScopeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Scope, true
}

// SetScope sets field value
func (o *BlueprintPSP) SetScope(v string) {
	o.Scope = v
}

func (o BlueprintPSP) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlueprintPSP) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enabled"] = o.Enabled
	toSerialize["names"] = o.Names
	toSerialize["scope"] = o.Scope
	return toSerialize, nil
}

type NullableBlueprintPSP struct {
	value *BlueprintPSP
	isSet bool
}

func (v NullableBlueprintPSP) Get() *BlueprintPSP {
	return v.value
}

func (v *NullableBlueprintPSP) Set(val *BlueprintPSP) {
	v.value = val
	v.isSet = true
}

func (v NullableBlueprintPSP) IsSet() bool {
	return v.isSet
}

func (v *NullableBlueprintPSP) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlueprintPSP(val *BlueprintPSP) *NullableBlueprintPSP {
	return &NullableBlueprintPSP{value: val, isSet: true}
}

func (v NullableBlueprintPSP) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlueprintPSP) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


