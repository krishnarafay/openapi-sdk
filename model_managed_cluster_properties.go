/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ManagedClusterProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedClusterProperties{}

// ManagedClusterProperties struct for ManagedClusterProperties
type ManagedClusterProperties struct {
	AadProfile *Aadprofile `json:"aadProfile,omitempty"`
	// The profile of managed cluster add-on.
	AddonProfiles *map[string]string `json:"addonProfiles,omitempty"`
	ApiServerAccessProfile *Apiserveraccessprofile `json:"apiServerAccessProfile,omitempty"`
	AutoScalerProfile *Autoscalerprofile `json:"autoScalerProfile,omitempty"`
	AutoUpgradeProfile *Autoupgradeprofile `json:"autoUpgradeProfile,omitempty"`
	// If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see disable local accounts.
	DisableLocalAccounts *bool `json:"disableLocalAccounts,omitempty"`
	// This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}
	DiskEncryptionSetID *string `json:"diskEncryptionSetID,omitempty"`
	// This cannot be updated once the Managed Cluster has been created.
	DnsPrefix *string `json:"dnsPrefix,omitempty"`
	// (DEPRECATING) Whether to enable Kubernetes pod security policy (preview). This feature is set for removal on October 15th, 2020. Learn more at aka.ms/aks/azpodpolicy.
	EnablePodSecurityPolicy *bool `json:"enablePodSecurityPolicy,omitempty"`
	// Whether to enable Kubernetes Role-Based Access Control.
	EnableRBAC *bool `json:"enableRBAC,omitempty"`
	// This cannot be updated once the Managed Cluster has been created.
	FqdnSubdomain *string `json:"fqdnSubdomain,omitempty"`
	HttpProxyConfig *Httpproxyconfig `json:"httpProxyConfig,omitempty"`
	// Identities associated with the cluster.
	IdentityProfile *map[string]string `json:"identityProfile,omitempty"`
	// Both patch version (e.g. 1.20.13) and (e.g. 1.20) are supported. When is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer patch version is available. When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -> 1.15.x or 1.15.x -> 1.16.x are allowed, however 1.14.x -> 1.16.x is not allowed. See upgrading an AKS cluster for more details.
	KubernetesVersion *string `json:"kubernetesVersion,omitempty"`
	LinuxProfile *Linuxprofile `json:"linuxProfile,omitempty"`
	NetworkProfile *Networkprofile `json:"networkProfile,omitempty"`
	// The name of the resource group containing agent pool nodes.
	NodeResourceGroup *string `json:"nodeResourceGroup,omitempty"`
	PodIdentityProfile *Podidentityprofile `json:"podIdentityProfile,omitempty"`
	// Private link resources associated with the cluster.
	PrivateLinkResources []Privatelinkresources `json:"privateLinkResources,omitempty"`
	// Allow or deny public network access for AKS. Valid values are Enabled, Disabled.
	PublicNetworkAccess *string `json:"publicNetworkAccess,omitempty"`
	SecurityProfile *Securityprofile `json:"securityProfile,omitempty"`
	ServicePrincipalProfile *Serviceprincipalprofile `json:"servicePrincipalProfile,omitempty"`
	StorageProfile *Storageprofile `json:"storageProfile,omitempty"`
	WindowsProfile *Windowsprofile `json:"windowsProfile,omitempty"`
}

// NewManagedClusterProperties instantiates a new ManagedClusterProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedClusterProperties() *ManagedClusterProperties {
	this := ManagedClusterProperties{}
	return &this
}

// NewManagedClusterPropertiesWithDefaults instantiates a new ManagedClusterProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedClusterPropertiesWithDefaults() *ManagedClusterProperties {
	this := ManagedClusterProperties{}
	return &this
}

// GetAadProfile returns the AadProfile field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetAadProfile() Aadprofile {
	if o == nil || isNil(o.AadProfile) {
		var ret Aadprofile
		return ret
	}
	return *o.AadProfile
}

// GetAadProfileOk returns a tuple with the AadProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetAadProfileOk() (*Aadprofile, bool) {
	if o == nil || isNil(o.AadProfile) {
		return nil, false
	}
	return o.AadProfile, true
}

// HasAadProfile returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasAadProfile() bool {
	if o != nil && !isNil(o.AadProfile) {
		return true
	}

	return false
}

// SetAadProfile gets a reference to the given Aadprofile and assigns it to the AadProfile field.
func (o *ManagedClusterProperties) SetAadProfile(v Aadprofile) {
	o.AadProfile = &v
}

// GetAddonProfiles returns the AddonProfiles field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetAddonProfiles() map[string]string {
	if o == nil || isNil(o.AddonProfiles) {
		var ret map[string]string
		return ret
	}
	return *o.AddonProfiles
}

// GetAddonProfilesOk returns a tuple with the AddonProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetAddonProfilesOk() (*map[string]string, bool) {
	if o == nil || isNil(o.AddonProfiles) {
		return nil, false
	}
	return o.AddonProfiles, true
}

// HasAddonProfiles returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasAddonProfiles() bool {
	if o != nil && !isNil(o.AddonProfiles) {
		return true
	}

	return false
}

// SetAddonProfiles gets a reference to the given map[string]string and assigns it to the AddonProfiles field.
func (o *ManagedClusterProperties) SetAddonProfiles(v map[string]string) {
	o.AddonProfiles = &v
}

// GetApiServerAccessProfile returns the ApiServerAccessProfile field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetApiServerAccessProfile() Apiserveraccessprofile {
	if o == nil || isNil(o.ApiServerAccessProfile) {
		var ret Apiserveraccessprofile
		return ret
	}
	return *o.ApiServerAccessProfile
}

// GetApiServerAccessProfileOk returns a tuple with the ApiServerAccessProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetApiServerAccessProfileOk() (*Apiserveraccessprofile, bool) {
	if o == nil || isNil(o.ApiServerAccessProfile) {
		return nil, false
	}
	return o.ApiServerAccessProfile, true
}

// HasApiServerAccessProfile returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasApiServerAccessProfile() bool {
	if o != nil && !isNil(o.ApiServerAccessProfile) {
		return true
	}

	return false
}

// SetApiServerAccessProfile gets a reference to the given Apiserveraccessprofile and assigns it to the ApiServerAccessProfile field.
func (o *ManagedClusterProperties) SetApiServerAccessProfile(v Apiserveraccessprofile) {
	o.ApiServerAccessProfile = &v
}

// GetAutoScalerProfile returns the AutoScalerProfile field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetAutoScalerProfile() Autoscalerprofile {
	if o == nil || isNil(o.AutoScalerProfile) {
		var ret Autoscalerprofile
		return ret
	}
	return *o.AutoScalerProfile
}

// GetAutoScalerProfileOk returns a tuple with the AutoScalerProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetAutoScalerProfileOk() (*Autoscalerprofile, bool) {
	if o == nil || isNil(o.AutoScalerProfile) {
		return nil, false
	}
	return o.AutoScalerProfile, true
}

// HasAutoScalerProfile returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasAutoScalerProfile() bool {
	if o != nil && !isNil(o.AutoScalerProfile) {
		return true
	}

	return false
}

// SetAutoScalerProfile gets a reference to the given Autoscalerprofile and assigns it to the AutoScalerProfile field.
func (o *ManagedClusterProperties) SetAutoScalerProfile(v Autoscalerprofile) {
	o.AutoScalerProfile = &v
}

// GetAutoUpgradeProfile returns the AutoUpgradeProfile field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetAutoUpgradeProfile() Autoupgradeprofile {
	if o == nil || isNil(o.AutoUpgradeProfile) {
		var ret Autoupgradeprofile
		return ret
	}
	return *o.AutoUpgradeProfile
}

// GetAutoUpgradeProfileOk returns a tuple with the AutoUpgradeProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetAutoUpgradeProfileOk() (*Autoupgradeprofile, bool) {
	if o == nil || isNil(o.AutoUpgradeProfile) {
		return nil, false
	}
	return o.AutoUpgradeProfile, true
}

// HasAutoUpgradeProfile returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasAutoUpgradeProfile() bool {
	if o != nil && !isNil(o.AutoUpgradeProfile) {
		return true
	}

	return false
}

// SetAutoUpgradeProfile gets a reference to the given Autoupgradeprofile and assigns it to the AutoUpgradeProfile field.
func (o *ManagedClusterProperties) SetAutoUpgradeProfile(v Autoupgradeprofile) {
	o.AutoUpgradeProfile = &v
}

// GetDisableLocalAccounts returns the DisableLocalAccounts field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetDisableLocalAccounts() bool {
	if o == nil || isNil(o.DisableLocalAccounts) {
		var ret bool
		return ret
	}
	return *o.DisableLocalAccounts
}

// GetDisableLocalAccountsOk returns a tuple with the DisableLocalAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetDisableLocalAccountsOk() (*bool, bool) {
	if o == nil || isNil(o.DisableLocalAccounts) {
		return nil, false
	}
	return o.DisableLocalAccounts, true
}

// HasDisableLocalAccounts returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasDisableLocalAccounts() bool {
	if o != nil && !isNil(o.DisableLocalAccounts) {
		return true
	}

	return false
}

// SetDisableLocalAccounts gets a reference to the given bool and assigns it to the DisableLocalAccounts field.
func (o *ManagedClusterProperties) SetDisableLocalAccounts(v bool) {
	o.DisableLocalAccounts = &v
}

// GetDiskEncryptionSetID returns the DiskEncryptionSetID field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetDiskEncryptionSetID() string {
	if o == nil || isNil(o.DiskEncryptionSetID) {
		var ret string
		return ret
	}
	return *o.DiskEncryptionSetID
}

// GetDiskEncryptionSetIDOk returns a tuple with the DiskEncryptionSetID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetDiskEncryptionSetIDOk() (*string, bool) {
	if o == nil || isNil(o.DiskEncryptionSetID) {
		return nil, false
	}
	return o.DiskEncryptionSetID, true
}

// HasDiskEncryptionSetID returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasDiskEncryptionSetID() bool {
	if o != nil && !isNil(o.DiskEncryptionSetID) {
		return true
	}

	return false
}

// SetDiskEncryptionSetID gets a reference to the given string and assigns it to the DiskEncryptionSetID field.
func (o *ManagedClusterProperties) SetDiskEncryptionSetID(v string) {
	o.DiskEncryptionSetID = &v
}

// GetDnsPrefix returns the DnsPrefix field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetDnsPrefix() string {
	if o == nil || isNil(o.DnsPrefix) {
		var ret string
		return ret
	}
	return *o.DnsPrefix
}

// GetDnsPrefixOk returns a tuple with the DnsPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetDnsPrefixOk() (*string, bool) {
	if o == nil || isNil(o.DnsPrefix) {
		return nil, false
	}
	return o.DnsPrefix, true
}

// HasDnsPrefix returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasDnsPrefix() bool {
	if o != nil && !isNil(o.DnsPrefix) {
		return true
	}

	return false
}

// SetDnsPrefix gets a reference to the given string and assigns it to the DnsPrefix field.
func (o *ManagedClusterProperties) SetDnsPrefix(v string) {
	o.DnsPrefix = &v
}

// GetEnablePodSecurityPolicy returns the EnablePodSecurityPolicy field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetEnablePodSecurityPolicy() bool {
	if o == nil || isNil(o.EnablePodSecurityPolicy) {
		var ret bool
		return ret
	}
	return *o.EnablePodSecurityPolicy
}

// GetEnablePodSecurityPolicyOk returns a tuple with the EnablePodSecurityPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetEnablePodSecurityPolicyOk() (*bool, bool) {
	if o == nil || isNil(o.EnablePodSecurityPolicy) {
		return nil, false
	}
	return o.EnablePodSecurityPolicy, true
}

// HasEnablePodSecurityPolicy returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasEnablePodSecurityPolicy() bool {
	if o != nil && !isNil(o.EnablePodSecurityPolicy) {
		return true
	}

	return false
}

// SetEnablePodSecurityPolicy gets a reference to the given bool and assigns it to the EnablePodSecurityPolicy field.
func (o *ManagedClusterProperties) SetEnablePodSecurityPolicy(v bool) {
	o.EnablePodSecurityPolicy = &v
}

// GetEnableRBAC returns the EnableRBAC field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetEnableRBAC() bool {
	if o == nil || isNil(o.EnableRBAC) {
		var ret bool
		return ret
	}
	return *o.EnableRBAC
}

// GetEnableRBACOk returns a tuple with the EnableRBAC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetEnableRBACOk() (*bool, bool) {
	if o == nil || isNil(o.EnableRBAC) {
		return nil, false
	}
	return o.EnableRBAC, true
}

// HasEnableRBAC returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasEnableRBAC() bool {
	if o != nil && !isNil(o.EnableRBAC) {
		return true
	}

	return false
}

// SetEnableRBAC gets a reference to the given bool and assigns it to the EnableRBAC field.
func (o *ManagedClusterProperties) SetEnableRBAC(v bool) {
	o.EnableRBAC = &v
}

// GetFqdnSubdomain returns the FqdnSubdomain field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetFqdnSubdomain() string {
	if o == nil || isNil(o.FqdnSubdomain) {
		var ret string
		return ret
	}
	return *o.FqdnSubdomain
}

// GetFqdnSubdomainOk returns a tuple with the FqdnSubdomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetFqdnSubdomainOk() (*string, bool) {
	if o == nil || isNil(o.FqdnSubdomain) {
		return nil, false
	}
	return o.FqdnSubdomain, true
}

// HasFqdnSubdomain returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasFqdnSubdomain() bool {
	if o != nil && !isNil(o.FqdnSubdomain) {
		return true
	}

	return false
}

// SetFqdnSubdomain gets a reference to the given string and assigns it to the FqdnSubdomain field.
func (o *ManagedClusterProperties) SetFqdnSubdomain(v string) {
	o.FqdnSubdomain = &v
}

// GetHttpProxyConfig returns the HttpProxyConfig field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetHttpProxyConfig() Httpproxyconfig {
	if o == nil || isNil(o.HttpProxyConfig) {
		var ret Httpproxyconfig
		return ret
	}
	return *o.HttpProxyConfig
}

// GetHttpProxyConfigOk returns a tuple with the HttpProxyConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetHttpProxyConfigOk() (*Httpproxyconfig, bool) {
	if o == nil || isNil(o.HttpProxyConfig) {
		return nil, false
	}
	return o.HttpProxyConfig, true
}

// HasHttpProxyConfig returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasHttpProxyConfig() bool {
	if o != nil && !isNil(o.HttpProxyConfig) {
		return true
	}

	return false
}

// SetHttpProxyConfig gets a reference to the given Httpproxyconfig and assigns it to the HttpProxyConfig field.
func (o *ManagedClusterProperties) SetHttpProxyConfig(v Httpproxyconfig) {
	o.HttpProxyConfig = &v
}

// GetIdentityProfile returns the IdentityProfile field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetIdentityProfile() map[string]string {
	if o == nil || isNil(o.IdentityProfile) {
		var ret map[string]string
		return ret
	}
	return *o.IdentityProfile
}

// GetIdentityProfileOk returns a tuple with the IdentityProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetIdentityProfileOk() (*map[string]string, bool) {
	if o == nil || isNil(o.IdentityProfile) {
		return nil, false
	}
	return o.IdentityProfile, true
}

// HasIdentityProfile returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasIdentityProfile() bool {
	if o != nil && !isNil(o.IdentityProfile) {
		return true
	}

	return false
}

// SetIdentityProfile gets a reference to the given map[string]string and assigns it to the IdentityProfile field.
func (o *ManagedClusterProperties) SetIdentityProfile(v map[string]string) {
	o.IdentityProfile = &v
}

// GetKubernetesVersion returns the KubernetesVersion field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetKubernetesVersion() string {
	if o == nil || isNil(o.KubernetesVersion) {
		var ret string
		return ret
	}
	return *o.KubernetesVersion
}

// GetKubernetesVersionOk returns a tuple with the KubernetesVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetKubernetesVersionOk() (*string, bool) {
	if o == nil || isNil(o.KubernetesVersion) {
		return nil, false
	}
	return o.KubernetesVersion, true
}

// HasKubernetesVersion returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasKubernetesVersion() bool {
	if o != nil && !isNil(o.KubernetesVersion) {
		return true
	}

	return false
}

// SetKubernetesVersion gets a reference to the given string and assigns it to the KubernetesVersion field.
func (o *ManagedClusterProperties) SetKubernetesVersion(v string) {
	o.KubernetesVersion = &v
}

// GetLinuxProfile returns the LinuxProfile field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetLinuxProfile() Linuxprofile {
	if o == nil || isNil(o.LinuxProfile) {
		var ret Linuxprofile
		return ret
	}
	return *o.LinuxProfile
}

// GetLinuxProfileOk returns a tuple with the LinuxProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetLinuxProfileOk() (*Linuxprofile, bool) {
	if o == nil || isNil(o.LinuxProfile) {
		return nil, false
	}
	return o.LinuxProfile, true
}

// HasLinuxProfile returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasLinuxProfile() bool {
	if o != nil && !isNil(o.LinuxProfile) {
		return true
	}

	return false
}

// SetLinuxProfile gets a reference to the given Linuxprofile and assigns it to the LinuxProfile field.
func (o *ManagedClusterProperties) SetLinuxProfile(v Linuxprofile) {
	o.LinuxProfile = &v
}

// GetNetworkProfile returns the NetworkProfile field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetNetworkProfile() Networkprofile {
	if o == nil || isNil(o.NetworkProfile) {
		var ret Networkprofile
		return ret
	}
	return *o.NetworkProfile
}

// GetNetworkProfileOk returns a tuple with the NetworkProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetNetworkProfileOk() (*Networkprofile, bool) {
	if o == nil || isNil(o.NetworkProfile) {
		return nil, false
	}
	return o.NetworkProfile, true
}

// HasNetworkProfile returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasNetworkProfile() bool {
	if o != nil && !isNil(o.NetworkProfile) {
		return true
	}

	return false
}

// SetNetworkProfile gets a reference to the given Networkprofile and assigns it to the NetworkProfile field.
func (o *ManagedClusterProperties) SetNetworkProfile(v Networkprofile) {
	o.NetworkProfile = &v
}

// GetNodeResourceGroup returns the NodeResourceGroup field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetNodeResourceGroup() string {
	if o == nil || isNil(o.NodeResourceGroup) {
		var ret string
		return ret
	}
	return *o.NodeResourceGroup
}

// GetNodeResourceGroupOk returns a tuple with the NodeResourceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetNodeResourceGroupOk() (*string, bool) {
	if o == nil || isNil(o.NodeResourceGroup) {
		return nil, false
	}
	return o.NodeResourceGroup, true
}

// HasNodeResourceGroup returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasNodeResourceGroup() bool {
	if o != nil && !isNil(o.NodeResourceGroup) {
		return true
	}

	return false
}

// SetNodeResourceGroup gets a reference to the given string and assigns it to the NodeResourceGroup field.
func (o *ManagedClusterProperties) SetNodeResourceGroup(v string) {
	o.NodeResourceGroup = &v
}

// GetPodIdentityProfile returns the PodIdentityProfile field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetPodIdentityProfile() Podidentityprofile {
	if o == nil || isNil(o.PodIdentityProfile) {
		var ret Podidentityprofile
		return ret
	}
	return *o.PodIdentityProfile
}

// GetPodIdentityProfileOk returns a tuple with the PodIdentityProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetPodIdentityProfileOk() (*Podidentityprofile, bool) {
	if o == nil || isNil(o.PodIdentityProfile) {
		return nil, false
	}
	return o.PodIdentityProfile, true
}

// HasPodIdentityProfile returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasPodIdentityProfile() bool {
	if o != nil && !isNil(o.PodIdentityProfile) {
		return true
	}

	return false
}

// SetPodIdentityProfile gets a reference to the given Podidentityprofile and assigns it to the PodIdentityProfile field.
func (o *ManagedClusterProperties) SetPodIdentityProfile(v Podidentityprofile) {
	o.PodIdentityProfile = &v
}

// GetPrivateLinkResources returns the PrivateLinkResources field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetPrivateLinkResources() []Privatelinkresources {
	if o == nil || isNil(o.PrivateLinkResources) {
		var ret []Privatelinkresources
		return ret
	}
	return o.PrivateLinkResources
}

// GetPrivateLinkResourcesOk returns a tuple with the PrivateLinkResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetPrivateLinkResourcesOk() ([]Privatelinkresources, bool) {
	if o == nil || isNil(o.PrivateLinkResources) {
		return nil, false
	}
	return o.PrivateLinkResources, true
}

// HasPrivateLinkResources returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasPrivateLinkResources() bool {
	if o != nil && !isNil(o.PrivateLinkResources) {
		return true
	}

	return false
}

// SetPrivateLinkResources gets a reference to the given []Privatelinkresources and assigns it to the PrivateLinkResources field.
func (o *ManagedClusterProperties) SetPrivateLinkResources(v []Privatelinkresources) {
	o.PrivateLinkResources = v
}

// GetPublicNetworkAccess returns the PublicNetworkAccess field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetPublicNetworkAccess() string {
	if o == nil || isNil(o.PublicNetworkAccess) {
		var ret string
		return ret
	}
	return *o.PublicNetworkAccess
}

// GetPublicNetworkAccessOk returns a tuple with the PublicNetworkAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetPublicNetworkAccessOk() (*string, bool) {
	if o == nil || isNil(o.PublicNetworkAccess) {
		return nil, false
	}
	return o.PublicNetworkAccess, true
}

// HasPublicNetworkAccess returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasPublicNetworkAccess() bool {
	if o != nil && !isNil(o.PublicNetworkAccess) {
		return true
	}

	return false
}

// SetPublicNetworkAccess gets a reference to the given string and assigns it to the PublicNetworkAccess field.
func (o *ManagedClusterProperties) SetPublicNetworkAccess(v string) {
	o.PublicNetworkAccess = &v
}

// GetSecurityProfile returns the SecurityProfile field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetSecurityProfile() Securityprofile {
	if o == nil || isNil(o.SecurityProfile) {
		var ret Securityprofile
		return ret
	}
	return *o.SecurityProfile
}

// GetSecurityProfileOk returns a tuple with the SecurityProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetSecurityProfileOk() (*Securityprofile, bool) {
	if o == nil || isNil(o.SecurityProfile) {
		return nil, false
	}
	return o.SecurityProfile, true
}

// HasSecurityProfile returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasSecurityProfile() bool {
	if o != nil && !isNil(o.SecurityProfile) {
		return true
	}

	return false
}

// SetSecurityProfile gets a reference to the given Securityprofile and assigns it to the SecurityProfile field.
func (o *ManagedClusterProperties) SetSecurityProfile(v Securityprofile) {
	o.SecurityProfile = &v
}

// GetServicePrincipalProfile returns the ServicePrincipalProfile field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetServicePrincipalProfile() Serviceprincipalprofile {
	if o == nil || isNil(o.ServicePrincipalProfile) {
		var ret Serviceprincipalprofile
		return ret
	}
	return *o.ServicePrincipalProfile
}

// GetServicePrincipalProfileOk returns a tuple with the ServicePrincipalProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetServicePrincipalProfileOk() (*Serviceprincipalprofile, bool) {
	if o == nil || isNil(o.ServicePrincipalProfile) {
		return nil, false
	}
	return o.ServicePrincipalProfile, true
}

// HasServicePrincipalProfile returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasServicePrincipalProfile() bool {
	if o != nil && !isNil(o.ServicePrincipalProfile) {
		return true
	}

	return false
}

// SetServicePrincipalProfile gets a reference to the given Serviceprincipalprofile and assigns it to the ServicePrincipalProfile field.
func (o *ManagedClusterProperties) SetServicePrincipalProfile(v Serviceprincipalprofile) {
	o.ServicePrincipalProfile = &v
}

// GetStorageProfile returns the StorageProfile field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetStorageProfile() Storageprofile {
	if o == nil || isNil(o.StorageProfile) {
		var ret Storageprofile
		return ret
	}
	return *o.StorageProfile
}

// GetStorageProfileOk returns a tuple with the StorageProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetStorageProfileOk() (*Storageprofile, bool) {
	if o == nil || isNil(o.StorageProfile) {
		return nil, false
	}
	return o.StorageProfile, true
}

// HasStorageProfile returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasStorageProfile() bool {
	if o != nil && !isNil(o.StorageProfile) {
		return true
	}

	return false
}

// SetStorageProfile gets a reference to the given Storageprofile and assigns it to the StorageProfile field.
func (o *ManagedClusterProperties) SetStorageProfile(v Storageprofile) {
	o.StorageProfile = &v
}

// GetWindowsProfile returns the WindowsProfile field value if set, zero value otherwise.
func (o *ManagedClusterProperties) GetWindowsProfile() Windowsprofile {
	if o == nil || isNil(o.WindowsProfile) {
		var ret Windowsprofile
		return ret
	}
	return *o.WindowsProfile
}

// GetWindowsProfileOk returns a tuple with the WindowsProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedClusterProperties) GetWindowsProfileOk() (*Windowsprofile, bool) {
	if o == nil || isNil(o.WindowsProfile) {
		return nil, false
	}
	return o.WindowsProfile, true
}

// HasWindowsProfile returns a boolean if a field has been set.
func (o *ManagedClusterProperties) HasWindowsProfile() bool {
	if o != nil && !isNil(o.WindowsProfile) {
		return true
	}

	return false
}

// SetWindowsProfile gets a reference to the given Windowsprofile and assigns it to the WindowsProfile field.
func (o *ManagedClusterProperties) SetWindowsProfile(v Windowsprofile) {
	o.WindowsProfile = &v
}

func (o ManagedClusterProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedClusterProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AadProfile) {
		toSerialize["aadProfile"] = o.AadProfile
	}
	if !isNil(o.AddonProfiles) {
		toSerialize["addonProfiles"] = o.AddonProfiles
	}
	if !isNil(o.ApiServerAccessProfile) {
		toSerialize["apiServerAccessProfile"] = o.ApiServerAccessProfile
	}
	if !isNil(o.AutoScalerProfile) {
		toSerialize["autoScalerProfile"] = o.AutoScalerProfile
	}
	if !isNil(o.AutoUpgradeProfile) {
		toSerialize["autoUpgradeProfile"] = o.AutoUpgradeProfile
	}
	if !isNil(o.DisableLocalAccounts) {
		toSerialize["disableLocalAccounts"] = o.DisableLocalAccounts
	}
	if !isNil(o.DiskEncryptionSetID) {
		toSerialize["diskEncryptionSetID"] = o.DiskEncryptionSetID
	}
	if !isNil(o.DnsPrefix) {
		toSerialize["dnsPrefix"] = o.DnsPrefix
	}
	if !isNil(o.EnablePodSecurityPolicy) {
		toSerialize["enablePodSecurityPolicy"] = o.EnablePodSecurityPolicy
	}
	if !isNil(o.EnableRBAC) {
		toSerialize["enableRBAC"] = o.EnableRBAC
	}
	if !isNil(o.FqdnSubdomain) {
		toSerialize["fqdnSubdomain"] = o.FqdnSubdomain
	}
	if !isNil(o.HttpProxyConfig) {
		toSerialize["httpProxyConfig"] = o.HttpProxyConfig
	}
	if !isNil(o.IdentityProfile) {
		toSerialize["identityProfile"] = o.IdentityProfile
	}
	if !isNil(o.KubernetesVersion) {
		toSerialize["kubernetesVersion"] = o.KubernetesVersion
	}
	if !isNil(o.LinuxProfile) {
		toSerialize["linuxProfile"] = o.LinuxProfile
	}
	if !isNil(o.NetworkProfile) {
		toSerialize["networkProfile"] = o.NetworkProfile
	}
	if !isNil(o.NodeResourceGroup) {
		toSerialize["nodeResourceGroup"] = o.NodeResourceGroup
	}
	if !isNil(o.PodIdentityProfile) {
		toSerialize["podIdentityProfile"] = o.PodIdentityProfile
	}
	if !isNil(o.PrivateLinkResources) {
		toSerialize["privateLinkResources"] = o.PrivateLinkResources
	}
	if !isNil(o.PublicNetworkAccess) {
		toSerialize["publicNetworkAccess"] = o.PublicNetworkAccess
	}
	if !isNil(o.SecurityProfile) {
		toSerialize["securityProfile"] = o.SecurityProfile
	}
	if !isNil(o.ServicePrincipalProfile) {
		toSerialize["servicePrincipalProfile"] = o.ServicePrincipalProfile
	}
	if !isNil(o.StorageProfile) {
		toSerialize["storageProfile"] = o.StorageProfile
	}
	if !isNil(o.WindowsProfile) {
		toSerialize["windowsProfile"] = o.WindowsProfile
	}
	return toSerialize, nil
}

type NullableManagedClusterProperties struct {
	value *ManagedClusterProperties
	isSet bool
}

func (v NullableManagedClusterProperties) Get() *ManagedClusterProperties {
	return v.value
}

func (v *NullableManagedClusterProperties) Set(val *ManagedClusterProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedClusterProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedClusterProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedClusterProperties(val *ManagedClusterProperties) *NullableManagedClusterProperties {
	return &NullableManagedClusterProperties{value: val, isSet: true}
}

func (v NullableManagedClusterProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedClusterProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


