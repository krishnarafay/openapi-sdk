openapi: 3.0.0
info:
  description: Kubernetes Operations APIs
  title: Kubernetes Operations APIs
  version: v3
servers:
- url: /
security:
- ApiKeyAuth: []
paths:
  /apis/apps.k8smgmt.io/v3/projects/{project}/catalogs:
    get:
      description: Catalog list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/CatalogList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/CatalogList'
          description: Success
      tags:
      - Catalog List
    post:
      description: Catalog Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Catalog'
          application/yaml:
            schema:
              $ref: '#/components/schemas/Catalog'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Catalog'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Catalog'
          description: Success
      tags:
      - Catalog Apply
  /apis/apps.k8smgmt.io/v3/projects/{project}/catalogs/{name}:
    delete:
      description: Catalog Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - Catalog Delete
    get:
      description: Catalog Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Catalog'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Catalog'
          description: Success
      tags:
      - Catalog Detail
  /apis/apps.k8smgmt.io/v3/projects/{project}/catalogs/{name}/status:
    get:
      description: Catalog Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Catalog'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Catalog'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Catalog'
          description: Success
      tags:
      - Catalog Detail
  /apis/apps.k8smgmt.io/v3/projects/{project}/overrides:
    get:
      description: Override list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OverrideList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OverrideList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OverrideList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OverrideList'
          description: Success
      tags:
      - Override List
    post:
      description: Override Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Override'
          application/yaml:
            schema:
              $ref: '#/components/schemas/Override'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Override'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Override'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Override'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Override'
          description: Success
      tags:
      - Override Apply
  /apis/apps.k8smgmt.io/v3/projects/{project}/overrides/{name}:
    delete:
      description: Override Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - Override Delete
    get:
      description: Override Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Override'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Override'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Override'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Override'
          description: Success
      tags:
      - Override Detail
  /apis/apps.k8smgmt.io/v3/projects/{project}/overrides/{name}/artifacts:
    get:
      description: Override Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Override'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Override'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Override'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Override'
          description: Success
      tags:
      - Override Detail
  /apis/apps.k8smgmt.io/v3/projects/{project}/workloads:
    get:
      description: Workload list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/WorkloadList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/WorkloadList'
          description: Success
      tags:
      - Workload List
    post:
      description: Workload Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workload'
          application/yaml:
            schema:
              $ref: '#/components/schemas/Workload'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workload'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Workload'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workload'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Workload'
          description: Success
      tags:
      - Workload Apply
  /apis/apps.k8smgmt.io/v3/projects/{project}/workloads/{name}:
    delete:
      description: Workload Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - Workload Delete
    get:
      description: Workload Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workload'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Workload'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workload'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Workload'
          description: Success
      tags:
      - Workload Detail
  /apis/apps.k8smgmt.io/v3/projects/{project}/workloads/{name}/artifacts:
    get:
      description: Workload Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workload'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Workload'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workload'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Workload'
          description: Success
      tags:
      - Workload Detail
  /apis/apps.k8smgmt.io/v3/projects/{project}/workloads/{name}/status:
    get:
      description: Workload Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workload'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Workload'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workload'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Workload'
          description: Success
      tags:
      - Workload Detail
  /apis/apps.k8smgmt.io/v3/projects/{project}/workloadtemplates:
    get:
      description: WorkloadTemplate list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadTemplateList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/WorkloadTemplateList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadTemplateList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/WorkloadTemplateList'
          description: Success
      tags:
      - WorkloadTemplate List
    post:
      description: WorkloadTemplate Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkloadTemplate'
          application/yaml:
            schema:
              $ref: '#/components/schemas/WorkloadTemplate'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/WorkloadTemplate'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/WorkloadTemplate'
          description: Success
      tags:
      - WorkloadTemplate Apply
  /apis/apps.k8smgmt.io/v3/projects/{project}/workloadtemplates/{name}:
    delete:
      description: WorkloadTemplate Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - WorkloadTemplate Delete
    get:
      description: WorkloadTemplate Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/WorkloadTemplate'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/WorkloadTemplate'
          description: Success
      tags:
      - WorkloadTemplate Detail
  /apis/apps.k8smgmt.io/v3/projects/{project}/workloadtemplates/{name}/artifacts:
    get:
      description: WorkloadTemplate Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/WorkloadTemplate'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/WorkloadTemplate'
          description: Success
      tags:
      - WorkloadTemplate Detail
  /apis/cost.k8smgmt.io/v3/projects/{project}/costprofiles:
    get:
      description: CostProfile list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProfileList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/CostProfileList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProfileList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/CostProfileList'
          description: Success
      tags:
      - CostProfile List
    post:
      description: CostProfile Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProfile'
          application/yaml:
            schema:
              $ref: '#/components/schemas/CostProfile'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProfile'
            application/yaml:
              schema:
                $ref: '#/components/schemas/CostProfile'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProfile'
            application/yaml:
              schema:
                $ref: '#/components/schemas/CostProfile'
          description: Success
      tags:
      - CostProfile Apply
  /apis/cost.k8smgmt.io/v3/projects/{project}/costprofiles/{name}:
    delete:
      description: CostProfile Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - CostProfile Delete
    get:
      description: CostProfile Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProfile'
            application/yaml:
              schema:
                $ref: '#/components/schemas/CostProfile'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProfile'
            application/yaml:
              schema:
                $ref: '#/components/schemas/CostProfile'
          description: Success
      tags:
      - CostProfile Detail
  /apis/eaas.k8smgmt.io/v1/projects/{project}/configcontexts:
    get:
      description: ConfigContext list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigContextList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ConfigContextList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigContextList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ConfigContextList'
          description: Success
      tags:
      - ConfigContext List
    post:
      description: ConfigContext Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigContext'
          application/yaml:
            schema:
              $ref: '#/components/schemas/ConfigContext'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigContext'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ConfigContext'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigContext'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ConfigContext'
          description: Success
      tags:
      - ConfigContext Apply
  /apis/eaas.k8smgmt.io/v1/projects/{project}/configcontexts/{name}:
    delete:
      description: ConfigContext Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - ConfigContext Delete
    get:
      description: ConfigContext Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigContext'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ConfigContext'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigContext'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ConfigContext'
          description: Success
      tags:
      - ConfigContext Detail
  /apis/eaas.k8smgmt.io/v1/projects/{project}/environments:
    get:
      description: Environment list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/EnvironmentList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/EnvironmentList'
          description: Success
      tags:
      - Environment List
    post:
      description: Environment Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
          application/yaml:
            schema:
              $ref: '#/components/schemas/Environment'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Success
      tags:
      - Environment Apply
  /apis/eaas.k8smgmt.io/v1/projects/{project}/environments/{name}:
    delete:
      description: Environment Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - Environment Delete
    get:
      description: Environment Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Success
      tags:
      - Environment Detail
  /apis/eaas.k8smgmt.io/v1/projects/{project}/environmenttemplates:
    get:
      description: EnvironmentTemplate list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentTemplateList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/EnvironmentTemplateList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentTemplateList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/EnvironmentTemplateList'
          description: Success
      tags:
      - EnvironmentTemplate List
    post:
      description: EnvironmentTemplate Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentTemplate'
          application/yaml:
            schema:
              $ref: '#/components/schemas/EnvironmentTemplate'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/EnvironmentTemplate'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/EnvironmentTemplate'
          description: Success
      tags:
      - EnvironmentTemplate Apply
  /apis/eaas.k8smgmt.io/v1/projects/{project}/environmenttemplates/{name}:
    delete:
      description: EnvironmentTemplate Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - EnvironmentTemplate Delete
    get:
      description: EnvironmentTemplate Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/EnvironmentTemplate'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/EnvironmentTemplate'
          description: Success
      tags:
      - EnvironmentTemplate Detail
  /apis/eaas.k8smgmt.io/v1/projects/{project}/resources:
    get:
      description: Resource list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ResourceList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ResourceList'
          description: Success
      tags:
      - Resource List
    post:
      description: Resource Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resource'
          application/yaml:
            schema:
              $ref: '#/components/schemas/Resource'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Resource'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Resource'
          description: Success
      tags:
      - Resource Apply
  /apis/eaas.k8smgmt.io/v1/projects/{project}/resources/{name}:
    delete:
      description: Resource Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - Resource Delete
    get:
      description: Resource Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Resource'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Resource'
          description: Success
      tags:
      - Resource Detail
  /apis/eaas.k8smgmt.io/v1/projects/{project}/resourcetemplates:
    get:
      description: ResourceTemplate list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTemplateList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ResourceTemplateList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTemplateList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ResourceTemplateList'
          description: Success
      tags:
      - ResourceTemplate List
    post:
      description: ResourceTemplate Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceTemplate'
          application/yaml:
            schema:
              $ref: '#/components/schemas/ResourceTemplate'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ResourceTemplate'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ResourceTemplate'
          description: Success
      tags:
      - ResourceTemplate Apply
  /apis/eaas.k8smgmt.io/v1/projects/{project}/resourcetemplates/{name}:
    delete:
      description: ResourceTemplate Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - ResourceTemplate Delete
    get:
      description: ResourceTemplate Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ResourceTemplate'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ResourceTemplate'
          description: Success
      tags:
      - ResourceTemplate Detail
  /apis/gitops.k8smgmt.io/v3/projects/{project}/agents:
    get:
      description: Agent list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/AgentList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/AgentList'
          description: Success
      tags:
      - Agent List
    post:
      description: Agent Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agent'
          application/yaml:
            schema:
              $ref: '#/components/schemas/Agent'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Agent'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Agent'
          description: Success
      tags:
      - Agent Apply
  /apis/gitops.k8smgmt.io/v3/projects/{project}/agents/{name}:
    delete:
      description: Agent Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - Agent Delete
    get:
      description: Agent Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Agent'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Agent'
          description: Success
      tags:
      - Agent Detail
  /apis/gitops.k8smgmt.io/v3/projects/{project}/agents/{name}/status:
    get:
      description: Agent Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Agent'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Agent'
          description: Success
      tags:
      - Agent Detail
  /apis/gitops.k8smgmt.io/v3/projects/{project}/infraprovisioners:
    get:
      description: InfraProvisioner list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfraProvisionerList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/InfraProvisionerList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfraProvisionerList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/InfraProvisionerList'
          description: Success
      tags:
      - InfraProvisioner List
    post:
      description: InfraProvisioner Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InfraProvisioner'
          application/yaml:
            schema:
              $ref: '#/components/schemas/InfraProvisioner'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfraProvisioner'
            application/yaml:
              schema:
                $ref: '#/components/schemas/InfraProvisioner'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfraProvisioner'
            application/yaml:
              schema:
                $ref: '#/components/schemas/InfraProvisioner'
          description: Success
      tags:
      - InfraProvisioner Apply
  /apis/gitops.k8smgmt.io/v3/projects/{project}/infraprovisioners/{name}:
    delete:
      description: InfraProvisioner Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - InfraProvisioner Delete
    get:
      description: InfraProvisioner Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfraProvisioner'
            application/yaml:
              schema:
                $ref: '#/components/schemas/InfraProvisioner'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfraProvisioner'
            application/yaml:
              schema:
                $ref: '#/components/schemas/InfraProvisioner'
          description: Success
      tags:
      - InfraProvisioner Detail
  /apis/gitops.k8smgmt.io/v3/projects/{project}/infraprovisioners/{name}/artifacts:
    get:
      description: InfraProvisioner Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfraProvisioner'
            application/yaml:
              schema:
                $ref: '#/components/schemas/InfraProvisioner'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfraProvisioner'
            application/yaml:
              schema:
                $ref: '#/components/schemas/InfraProvisioner'
          description: Success
      tags:
      - InfraProvisioner Detail
  /apis/gitops.k8smgmt.io/v3/projects/{project}/pipelines:
    get:
      description: Pipeline list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/PipelineList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/PipelineList'
          description: Success
      tags:
      - Pipeline List
    post:
      description: Pipeline Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pipeline'
          application/yaml:
            schema:
              $ref: '#/components/schemas/Pipeline'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Success
      tags:
      - Pipeline Apply
  /apis/gitops.k8smgmt.io/v3/projects/{project}/pipelines/{name}:
    delete:
      description: Pipeline Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - Pipeline Delete
    get:
      description: Pipeline Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Success
      tags:
      - Pipeline Detail
  /apis/gitops.k8smgmt.io/v3/projects/{project}/pipelines/{name}/artifacts:
    get:
      description: Pipeline Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Success
      tags:
      - Pipeline Detail
  /apis/gitops.k8smgmt.io/v3/projects/{project}/pipelines/{name}/status:
    get:
      description: Pipeline Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Success
      tags:
      - Pipeline Detail
  /apis/gitops.k8smgmt.io/v3/projects/{project}/secretgroups:
    get:
      description: SecretGroup list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretGroupList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretGroupList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretGroupList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretGroupList'
          description: Success
      tags:
      - SecretGroup List
    post:
      description: SecretGroup Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretGroup'
          application/yaml:
            schema:
              $ref: '#/components/schemas/SecretGroup'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretGroup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretGroup'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretGroup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretGroup'
          description: Success
      tags:
      - SecretGroup Apply
  /apis/gitops.k8smgmt.io/v3/projects/{project}/secretgroups/{name}:
    delete:
      description: SecretGroup Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - SecretGroup Delete
    get:
      description: SecretGroup Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretGroup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretGroup'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretGroup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretGroup'
          description: Success
      tags:
      - SecretGroup Detail
  /apis/gitops.k8smgmt.io/v3/projects/{project}/secretgroups/{name}/artifacts:
    get:
      description: SecretGroup Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretGroup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretGroup'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretGroup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretGroup'
          description: Success
      tags:
      - SecretGroup Detail
  /apis/gitops.k8smgmt.io/v3/projects/{project}/secretgroups/{name}/status:
    get:
      description: SecretGroup Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretGroup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretGroup'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretGroup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretGroup'
          description: Success
      tags:
      - SecretGroup Detail
  /apis/infra.k8smgmt.io/v3/projects/{project}/addons:
    get:
      description: Addon list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/AddonList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddonList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/AddonList'
          description: Success
      tags:
      - Addon List
    post:
      description: Addon Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Addon'
          application/yaml:
            schema:
              $ref: '#/components/schemas/Addon'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addon'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Addon'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addon'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Addon'
          description: Success
      tags:
      - Addon Apply
  /apis/infra.k8smgmt.io/v3/projects/{project}/addons/{name}:
    delete:
      description: Addon Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - Addon Delete
    get:
      description: Addon Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addon'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Addon'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addon'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Addon'
          description: Success
      tags:
      - Addon Detail
  /apis/infra.k8smgmt.io/v3/projects/{project}/addons/{name}/artifacts:
    get:
      description: Addon Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addon'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Addon'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Addon'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Addon'
          description: Success
      tags:
      - Addon Detail
  /apis/infra.k8smgmt.io/v3/projects/{project}/blueprints:
    get:
      description: Blueprint list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/BlueprintList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlueprintList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/BlueprintList'
          description: Success
      tags:
      - Blueprint List
    post:
      description: Blueprint Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Blueprint'
          application/yaml:
            schema:
              $ref: '#/components/schemas/Blueprint'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blueprint'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Blueprint'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blueprint'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Blueprint'
          description: Success
      tags:
      - Blueprint Apply
  /apis/infra.k8smgmt.io/v3/projects/{project}/blueprints/{name}:
    delete:
      description: Blueprint Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - Blueprint Delete
    get:
      description: Blueprint Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blueprint'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Blueprint'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blueprint'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Blueprint'
          description: Success
      tags:
      - Blueprint Detail
  /apis/infra.k8smgmt.io/v3/projects/{project}/clusters:
    get:
      description: Cluster list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterList'
          description: Success
      tags:
      - Cluster List
    post:
      description: Cluster Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
          application/yaml:
            schema:
              $ref: '#/components/schemas/Cluster'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: Success
      tags:
      - Cluster Apply
  /apis/infra.k8smgmt.io/v3/projects/{project}/clusters/{name}:
    delete:
      description: Cluster Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - Cluster Delete
    get:
      description: Cluster Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: Success
      tags:
      - Cluster Detail
  /apis/infra.k8smgmt.io/v3/projects/{project}/clusters/{name}/bootstrap:
    get:
      description: Cluster Bootstrap YAML
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/x-rafay-yaml:
              schema:
                description: Bootstrap YAML contents
                title: Bootstrap YAML
                type: string
          description: Bootstrap YAML contents
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/x-rafay-yaml:
              schema:
                description: Bootstrap YAML contents
                title: Bootstrap YAML
                type: string
          description: Bootstrap YAML contents
      tags:
      - Cluster Bootstrap
  /apis/infra.k8smgmt.io/v3/projects/{project}/clusters/{name}/patchwithcallback: {}
  /apis/infra.k8smgmt.io/v3/projects/{project}/clusters/{name}/status:
    get:
      description: Cluster Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: Success
      tags:
      - Cluster Detail
  /apis/infra.k8smgmt.io/v3/projects/{project}/credentials:
    get:
      description: Credentials list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/CredentialsList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/CredentialsList'
          description: Success
      tags:
      - Credentials List
    post:
      description: Credentials Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
          application/yaml:
            schema:
              $ref: '#/components/schemas/Credentials'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Credentials'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Credentials'
          description: Success
      tags:
      - Credentials Apply
  /apis/infra.k8smgmt.io/v3/projects/{project}/credentials/{name}:
    delete:
      description: Credentials Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - Credentials Delete
    get:
      description: Credentials Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Credentials'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Credentials'
          description: Success
      tags:
      - Credentials Detail
  /apis/infra.k8smgmt.io/v3/projects/{project}/credentials/{name}/artifacts:
    get:
      description: Credentials Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Credentials'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Credentials'
          description: Success
      tags:
      - Credentials Detail
  /apis/infra.k8smgmt.io/v3/projects/{project}/credentialss:
    get:
      description: Credentials list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/CredentialsList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/CredentialsList'
          description: Success
      tags:
      - Credentials List
    post:
      description: Credentials Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
          application/yaml:
            schema:
              $ref: '#/components/schemas/Credentials'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Credentials'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Credentials'
          description: Success
      tags:
      - Credentials Apply
  /apis/infra.k8smgmt.io/v3/projects/{project}/credentialss/{name}:
    delete:
      description: Credentials Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - Credentials Delete
    get:
      description: Credentials Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Credentials'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Credentials'
          description: Success
      tags:
      - Credentials Detail
  /apis/infra.k8smgmt.io/v3/projects/{project}/credentialss/{name}/artifacts:
    get:
      description: Credentials Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Credentials'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Credentials'
          description: Success
      tags:
      - Credentials Detail
  /apis/infra.k8smgmt.io/v3/projects/{project}/namespaces:
    get:
      description: Namespace list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceList'
          description: Success
      tags:
      - Namespace List
    post:
      description: Namespace Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Namespace'
          application/yaml:
            schema:
              $ref: '#/components/schemas/Namespace'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Namespace'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Namespace'
          description: Success
      tags:
      - Namespace Apply
  /apis/infra.k8smgmt.io/v3/projects/{project}/namespaces/{name}:
    delete:
      description: Namespace Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - Namespace Delete
    get:
      description: Namespace Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Namespace'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Namespace'
          description: Success
      tags:
      - Namespace Detail
  /apis/infra.k8smgmt.io/v3/projects/{project}/namespaces/{name}/artifacts:
    get:
      description: Namespace Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Namespace'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Namespace'
          description: Success
      tags:
      - Namespace Detail
  /apis/infra.k8smgmt.io/v3/projects/{project}/namespaces/{name}/status:
    get:
      description: Namespace Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Namespace'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Namespace'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Namespace'
          description: Success
      tags:
      - Namespace Detail
  /apis/integrations.k8smgmt.io/v3/projects/{project}/containerregistries:
    get:
      description: ContainerRegistry list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistryList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ContainerRegistryList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistryList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ContainerRegistryList'
          description: Success
      tags:
      - ContainerRegistry List
    post:
      description: ContainerRegistry Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerRegistry'
          application/yaml:
            schema:
              $ref: '#/components/schemas/ContainerRegistry'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistry'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ContainerRegistry'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistry'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ContainerRegistry'
          description: Success
      tags:
      - ContainerRegistry Apply
  /apis/integrations.k8smgmt.io/v3/projects/{project}/containerregistries/{name}:
    delete:
      description: ContainerRegistry Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - ContainerRegistry Delete
    get:
      description: ContainerRegistry Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistry'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ContainerRegistry'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistry'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ContainerRegistry'
          description: Success
      tags:
      - ContainerRegistry Detail
  /apis/integrations.k8smgmt.io/v3/projects/{project}/containerregistrys:
    get:
      description: ContainerRegistry list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistryList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ContainerRegistryList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistryList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ContainerRegistryList'
          description: Success
      tags:
      - ContainerRegistry List
    post:
      description: ContainerRegistry Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerRegistry'
          application/yaml:
            schema:
              $ref: '#/components/schemas/ContainerRegistry'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistry'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ContainerRegistry'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistry'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ContainerRegistry'
          description: Success
      tags:
      - ContainerRegistry Apply
  /apis/integrations.k8smgmt.io/v3/projects/{project}/containerregistrys/{name}:
    delete:
      description: ContainerRegistry Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - ContainerRegistry Delete
    get:
      description: ContainerRegistry Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistry'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ContainerRegistry'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRegistry'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ContainerRegistry'
          description: Success
      tags:
      - ContainerRegistry Detail
  /apis/integrations.k8smgmt.io/v3/projects/{project}/repositories:
    get:
      description: Repository list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/RepositoryList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/RepositoryList'
          description: Success
      tags:
      - Repository List
    post:
      description: Repository Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repository'
          application/yaml:
            schema:
              $ref: '#/components/schemas/Repository'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Success
      tags:
      - Repository Apply
  /apis/integrations.k8smgmt.io/v3/projects/{project}/repositories/{name}:
    delete:
      description: Repository Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - Repository Delete
    get:
      description: Repository Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Success
      tags:
      - Repository Detail
  /apis/integrations.k8smgmt.io/v3/projects/{project}/repositories/{name}/artifacts:
    get:
      description: Repository Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Success
      tags:
      - Repository Detail
  /apis/integrations.k8smgmt.io/v3/projects/{project}/repositorys:
    get:
      description: Repository list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/RepositoryList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/RepositoryList'
          description: Success
      tags:
      - Repository List
    post:
      description: Repository Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repository'
          application/yaml:
            schema:
              $ref: '#/components/schemas/Repository'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Success
      tags:
      - Repository Apply
  /apis/integrations.k8smgmt.io/v3/projects/{project}/repositorys/{name}:
    delete:
      description: Repository Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - Repository Delete
    get:
      description: Repository Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Success
      tags:
      - Repository Detail
  /apis/integrations.k8smgmt.io/v3/projects/{project}/repositorys/{name}/artifacts:
    get:
      description: Repository Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Repository'
          description: Success
      tags:
      - Repository Detail
  /apis/integrations.k8smgmt.io/v3/projects/{project}/secretproviderclasses:
    get:
      description: SecretProviderClass list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretProviderClassList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretProviderClassList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretProviderClassList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretProviderClassList'
          description: Success
      tags:
      - SecretProviderClass List
    post:
      description: SecretProviderClass Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretProviderClass'
          application/yaml:
            schema:
              $ref: '#/components/schemas/SecretProviderClass'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
          description: Success
      tags:
      - SecretProviderClass Apply
  /apis/integrations.k8smgmt.io/v3/projects/{project}/secretproviderclasses/{name}:
    delete:
      description: SecretProviderClass Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - SecretProviderClass Delete
    get:
      description: SecretProviderClass Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
          description: Success
      tags:
      - SecretProviderClass Detail
  /apis/integrations.k8smgmt.io/v3/projects/{project}/secretproviderclasses/{name}/artifacts:
    get:
      description: SecretProviderClass Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
          description: Success
      tags:
      - SecretProviderClass Detail
  /apis/integrations.k8smgmt.io/v3/projects/{project}/secretproviderclasss:
    get:
      description: SecretProviderClass list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretProviderClassList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretProviderClassList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretProviderClassList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretProviderClassList'
          description: Success
      tags:
      - SecretProviderClass List
    post:
      description: SecretProviderClass Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretProviderClass'
          application/yaml:
            schema:
              $ref: '#/components/schemas/SecretProviderClass'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
          description: Success
      tags:
      - SecretProviderClass Apply
  /apis/integrations.k8smgmt.io/v3/projects/{project}/secretproviderclasss/{name}:
    delete:
      description: SecretProviderClass Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - SecretProviderClass Delete
    get:
      description: SecretProviderClass Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
          description: Success
      tags:
      - SecretProviderClass Detail
  /apis/integrations.k8smgmt.io/v3/projects/{project}/secretproviderclasss/{name}/artifacts:
    get:
      description: SecretProviderClass Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretProviderClass'
          description: Success
      tags:
      - SecretProviderClass Detail
  /apis/integrations.k8smgmt.io/v3/projects/{project}/secretsealers:
    get:
      description: SecretSealer list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretSealerList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretSealerList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretSealerList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretSealerList'
          description: Success
      tags:
      - SecretSealer List
    post:
      description: SecretSealer Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretSealer'
          application/yaml:
            schema:
              $ref: '#/components/schemas/SecretSealer'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretSealer'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretSealer'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretSealer'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretSealer'
          description: Success
      tags:
      - SecretSealer Apply
  /apis/integrations.k8smgmt.io/v3/projects/{project}/secretsealers/{name}:
    delete:
      description: SecretSealer Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - SecretSealer Delete
    get:
      description: SecretSealer Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretSealer'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretSealer'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretSealer'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretSealer'
          description: Success
      tags:
      - SecretSealer Detail
  /apis/integrations.k8smgmt.io/v3/projects/{project}/secretstores:
    get:
      description: SecretStore list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretStoreList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretStoreList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretStoreList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretStoreList'
          description: Success
      tags:
      - SecretStore List
    post:
      description: SecretStore Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretStore'
          application/yaml:
            schema:
              $ref: '#/components/schemas/SecretStore'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretStore'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretStore'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretStore'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretStore'
          description: Success
      tags:
      - SecretStore Apply
  /apis/integrations.k8smgmt.io/v3/projects/{project}/secretstores/{name}:
    delete:
      description: SecretStore Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - SecretStore Delete
    get:
      description: SecretStore Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretStore'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretStore'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretStore'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretStore'
          description: Success
      tags:
      - SecretStore Detail
  /apis/integrations.k8smgmt.io/v3/projects/{project}/secretstores/{name}/status:
    get:
      description: SecretStore Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretStore'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretStore'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretStore'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SecretStore'
          description: Success
      tags:
      - SecretStore Detail
  /apis/opa.k8smgmt.io/v3/projects/{project}/opaconstraints:
    get:
      description: OPAConstraint list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAConstraintList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAConstraintList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAConstraintList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAConstraintList'
          description: Success
      tags:
      - OPAConstraint List
    post:
      description: OPAConstraint Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OPAConstraint'
          application/yaml:
            schema:
              $ref: '#/components/schemas/OPAConstraint'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAConstraint'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAConstraint'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAConstraint'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAConstraint'
          description: Success
      tags:
      - OPAConstraint Apply
  /apis/opa.k8smgmt.io/v3/projects/{project}/opaconstraints/{name}:
    delete:
      description: OPAConstraint Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - OPAConstraint Delete
    get:
      description: OPAConstraint Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAConstraint'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAConstraint'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAConstraint'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAConstraint'
          description: Success
      tags:
      - OPAConstraint Detail
  /apis/opa.k8smgmt.io/v3/projects/{project}/opaconstraints/{name}/artifacts:
    get:
      description: OPAConstraint Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAConstraint'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAConstraint'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAConstraint'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAConstraint'
          description: Success
      tags:
      - OPAConstraint Detail
  /apis/opa.k8smgmt.io/v3/projects/{project}/opaconstrainttemplates:
    get:
      description: OPAConstraintTemplate list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAConstraintTemplateList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAConstraintTemplateList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAConstraintTemplateList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAConstraintTemplateList'
          description: Success
      tags:
      - OPAConstraintTemplate List
    post:
      description: OPAConstraintTemplate Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OPAConstraintTemplate'
          application/yaml:
            schema:
              $ref: '#/components/schemas/OPAConstraintTemplate'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAConstraintTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAConstraintTemplate'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAConstraintTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAConstraintTemplate'
          description: Success
      tags:
      - OPAConstraintTemplate Apply
  /apis/opa.k8smgmt.io/v3/projects/{project}/opaconstrainttemplates/{name}:
    delete:
      description: OPAConstraintTemplate Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - OPAConstraintTemplate Delete
    get:
      description: OPAConstraintTemplate Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAConstraintTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAConstraintTemplate'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAConstraintTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAConstraintTemplate'
          description: Success
      tags:
      - OPAConstraintTemplate Detail
  /apis/opa.k8smgmt.io/v3/projects/{project}/opaconstrainttemplates/{name}/artifacts:
    get:
      description: OPAConstraintTemplate Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAConstraintTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAConstraintTemplate'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAConstraintTemplate'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAConstraintTemplate'
          description: Success
      tags:
      - OPAConstraintTemplate Detail
  /apis/opa.k8smgmt.io/v3/projects/{project}/opapolicies:
    get:
      description: OPAPolicy list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAPolicyList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAPolicyList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAPolicyList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAPolicyList'
          description: Success
      tags:
      - OPAPolicy List
    post:
      description: OPAPolicy Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OPAPolicy'
          application/yaml:
            schema:
              $ref: '#/components/schemas/OPAPolicy'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAPolicy'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAPolicy'
          description: Success
      tags:
      - OPAPolicy Apply
  /apis/opa.k8smgmt.io/v3/projects/{project}/opapolicies/{name}:
    delete:
      description: OPAPolicy Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - OPAPolicy Delete
    get:
      description: OPAPolicy Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAPolicy'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAPolicy'
          description: Success
      tags:
      - OPAPolicy Detail
  /apis/opa.k8smgmt.io/v3/projects/{project}/opapolicys:
    get:
      description: OPAPolicy list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAPolicyList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAPolicyList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAPolicyList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAPolicyList'
          description: Success
      tags:
      - OPAPolicy List
    post:
      description: OPAPolicy Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OPAPolicy'
          application/yaml:
            schema:
              $ref: '#/components/schemas/OPAPolicy'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAPolicy'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAPolicy'
          description: Success
      tags:
      - OPAPolicy Apply
  /apis/opa.k8smgmt.io/v3/projects/{project}/opapolicys/{name}:
    delete:
      description: OPAPolicy Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - OPAPolicy Delete
    get:
      description: OPAPolicy Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAPolicy'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAPolicy'
          description: Success
      tags:
      - OPAPolicy Detail
  /apis/opa.k8smgmt.io/v3/projects/{project}/opaprofiles:
    get:
      description: OPAProfile list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAProfileList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAProfileList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAProfileList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAProfileList'
          description: Success
      tags:
      - OPAProfile List
    post:
      description: OPAProfile Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OPAProfile'
          application/yaml:
            schema:
              $ref: '#/components/schemas/OPAProfile'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAProfile'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAProfile'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAProfile'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAProfile'
          description: Success
      tags:
      - OPAProfile Apply
  /apis/opa.k8smgmt.io/v3/projects/{project}/opaprofiles/{name}:
    delete:
      description: OPAProfile Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - OPAProfile Delete
    get:
      description: OPAProfile Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAProfile'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAProfile'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OPAProfile'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OPAProfile'
          description: Success
      tags:
      - OPAProfile Detail
  /apis/security.k8smgmt.io/v3/projects/{project}/clusternetworkpolicies:
    get:
      description: ClusterNetworkPolicy list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyList'
          description: Success
      tags:
      - ClusterNetworkPolicy List
    post:
      description: ClusterNetworkPolicy Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterNetworkPolicy'
          application/yaml:
            schema:
              $ref: '#/components/schemas/ClusterNetworkPolicy'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicy'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicy'
          description: Success
      tags:
      - ClusterNetworkPolicy Apply
  /apis/security.k8smgmt.io/v3/projects/{project}/clusternetworkpolicies/{name}:
    delete:
      description: ClusterNetworkPolicy Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - ClusterNetworkPolicy Delete
    get:
      description: ClusterNetworkPolicy Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicy'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicy'
          description: Success
      tags:
      - ClusterNetworkPolicy Detail
  /apis/security.k8smgmt.io/v3/projects/{project}/clusternetworkpolicyrules:
    get:
      description: ClusterNetworkPolicyRule list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyRuleList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyRuleList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyRuleList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyRuleList'
          description: Success
      tags:
      - ClusterNetworkPolicyRule List
    post:
      description: ClusterNetworkPolicyRule Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterNetworkPolicyRule'
          application/yaml:
            schema:
              $ref: '#/components/schemas/ClusterNetworkPolicyRule'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyRule'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyRule'
          description: Success
      tags:
      - ClusterNetworkPolicyRule Apply
  /apis/security.k8smgmt.io/v3/projects/{project}/clusternetworkpolicyrules/{name}:
    delete:
      description: ClusterNetworkPolicyRule Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - ClusterNetworkPolicyRule Delete
    get:
      description: ClusterNetworkPolicyRule Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyRule'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyRule'
          description: Success
      tags:
      - ClusterNetworkPolicyRule Detail
  /apis/security.k8smgmt.io/v3/projects/{project}/clusternetworkpolicyrules/{name}/artifacts:
    get:
      description: ClusterNetworkPolicyRule Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyRule'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyRule'
          description: Success
      tags:
      - ClusterNetworkPolicyRule Detail
  /apis/security.k8smgmt.io/v3/projects/{project}/clusternetworkpolicys:
    get:
      description: ClusterNetworkPolicy list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicyList'
          description: Success
      tags:
      - ClusterNetworkPolicy List
    post:
      description: ClusterNetworkPolicy Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterNetworkPolicy'
          application/yaml:
            schema:
              $ref: '#/components/schemas/ClusterNetworkPolicy'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicy'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicy'
          description: Success
      tags:
      - ClusterNetworkPolicy Apply
  /apis/security.k8smgmt.io/v3/projects/{project}/clusternetworkpolicys/{name}:
    delete:
      description: ClusterNetworkPolicy Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - ClusterNetworkPolicy Delete
    get:
      description: ClusterNetworkPolicy Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicy'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterNetworkPolicy'
          description: Success
      tags:
      - ClusterNetworkPolicy Detail
  /apis/security.k8smgmt.io/v3/projects/{project}/namespacenetworkpolicies:
    get:
      description: NamespaceNetworkPolicy list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyList'
          description: Success
      tags:
      - NamespaceNetworkPolicy List
    post:
      description: NamespaceNetworkPolicy Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamespaceNetworkPolicy'
          application/yaml:
            schema:
              $ref: '#/components/schemas/NamespaceNetworkPolicy'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicy'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicy'
          description: Success
      tags:
      - NamespaceNetworkPolicy Apply
  /apis/security.k8smgmt.io/v3/projects/{project}/namespacenetworkpolicies/{name}:
    delete:
      description: NamespaceNetworkPolicy Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - NamespaceNetworkPolicy Delete
    get:
      description: NamespaceNetworkPolicy Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicy'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicy'
          description: Success
      tags:
      - NamespaceNetworkPolicy Detail
  /apis/security.k8smgmt.io/v3/projects/{project}/namespacenetworkpolicyrules:
    get:
      description: NamespaceNetworkPolicyRule list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyRuleList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyRuleList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyRuleList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyRuleList'
          description: Success
      tags:
      - NamespaceNetworkPolicyRule List
    post:
      description: NamespaceNetworkPolicyRule Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamespaceNetworkPolicyRule'
          application/yaml:
            schema:
              $ref: '#/components/schemas/NamespaceNetworkPolicyRule'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyRule'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyRule'
          description: Success
      tags:
      - NamespaceNetworkPolicyRule Apply
  /apis/security.k8smgmt.io/v3/projects/{project}/namespacenetworkpolicyrules/{name}:
    delete:
      description: NamespaceNetworkPolicyRule Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - NamespaceNetworkPolicyRule Delete
    get:
      description: NamespaceNetworkPolicyRule Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyRule'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyRule'
          description: Success
      tags:
      - NamespaceNetworkPolicyRule Detail
  /apis/security.k8smgmt.io/v3/projects/{project}/namespacenetworkpolicyrules/{name}/artifacts:
    get:
      description: NamespaceNetworkPolicyRule Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyRule'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyRule'
          description: Success
      tags:
      - NamespaceNetworkPolicyRule Detail
  /apis/security.k8smgmt.io/v3/projects/{project}/namespacenetworkpolicys:
    get:
      description: NamespaceNetworkPolicy list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicyList'
          description: Success
      tags:
      - NamespaceNetworkPolicy List
    post:
      description: NamespaceNetworkPolicy Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamespaceNetworkPolicy'
          application/yaml:
            schema:
              $ref: '#/components/schemas/NamespaceNetworkPolicy'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicy'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicy'
          description: Success
      tags:
      - NamespaceNetworkPolicy Apply
  /apis/security.k8smgmt.io/v3/projects/{project}/namespacenetworkpolicys/{name}:
    delete:
      description: NamespaceNetworkPolicy Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - NamespaceNetworkPolicy Delete
    get:
      description: NamespaceNetworkPolicy Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicy'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceNetworkPolicy'
          description: Success
      tags:
      - NamespaceNetworkPolicy Detail
  /apis/security.k8smgmt.io/v3/projects/{project}/networkpolicyprofiles:
    get:
      description: NetworkPolicyProfile list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkPolicyProfileList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NetworkPolicyProfileList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkPolicyProfileList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NetworkPolicyProfileList'
          description: Success
      tags:
      - NetworkPolicyProfile List
    post:
      description: NetworkPolicyProfile Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkPolicyProfile'
          application/yaml:
            schema:
              $ref: '#/components/schemas/NetworkPolicyProfile'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkPolicyProfile'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NetworkPolicyProfile'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkPolicyProfile'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NetworkPolicyProfile'
          description: Success
      tags:
      - NetworkPolicyProfile Apply
  /apis/security.k8smgmt.io/v3/projects/{project}/networkpolicyprofiles/{name}:
    delete:
      description: NetworkPolicyProfile Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - NetworkPolicyProfile Delete
    get:
      description: NetworkPolicyProfile Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkPolicyProfile'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NetworkPolicyProfile'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkPolicyProfile'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NetworkPolicyProfile'
          description: Success
      tags:
      - NetworkPolicyProfile Detail
  /apis/servicemesh.k8smgmt.io/v3/projects/{project}/clustermeshpolicies:
    get:
      description: ClusterMeshPolicy list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicyList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicyList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicyList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicyList'
          description: Success
      tags:
      - ClusterMeshPolicy List
    post:
      description: ClusterMeshPolicy Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterMeshPolicy'
          application/yaml:
            schema:
              $ref: '#/components/schemas/ClusterMeshPolicy'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicy'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicy'
          description: Success
      tags:
      - ClusterMeshPolicy Apply
  /apis/servicemesh.k8smgmt.io/v3/projects/{project}/clustermeshpolicies/{name}:
    delete:
      description: ClusterMeshPolicy Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - ClusterMeshPolicy Delete
    get:
      description: ClusterMeshPolicy Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicy'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicy'
          description: Success
      tags:
      - ClusterMeshPolicy Detail
  /apis/servicemesh.k8smgmt.io/v3/projects/{project}/clustermeshpolicys:
    get:
      description: ClusterMeshPolicy list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicyList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicyList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicyList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicyList'
          description: Success
      tags:
      - ClusterMeshPolicy List
    post:
      description: ClusterMeshPolicy Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterMeshPolicy'
          application/yaml:
            schema:
              $ref: '#/components/schemas/ClusterMeshPolicy'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicy'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicy'
          description: Success
      tags:
      - ClusterMeshPolicy Apply
  /apis/servicemesh.k8smgmt.io/v3/projects/{project}/clustermeshpolicys/{name}:
    delete:
      description: ClusterMeshPolicy Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - ClusterMeshPolicy Delete
    get:
      description: ClusterMeshPolicy Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicy'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterMeshPolicy'
          description: Success
      tags:
      - ClusterMeshPolicy Detail
  /apis/servicemesh.k8smgmt.io/v3/projects/{project}/clustermeshrules:
    get:
      description: ClusterMeshRule list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMeshRuleList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterMeshRuleList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMeshRuleList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterMeshRuleList'
          description: Success
      tags:
      - ClusterMeshRule List
    post:
      description: ClusterMeshRule Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterMeshRule'
          application/yaml:
            schema:
              $ref: '#/components/schemas/ClusterMeshRule'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMeshRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterMeshRule'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMeshRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterMeshRule'
          description: Success
      tags:
      - ClusterMeshRule Apply
  /apis/servicemesh.k8smgmt.io/v3/projects/{project}/clustermeshrules/{name}:
    delete:
      description: ClusterMeshRule Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - ClusterMeshRule Delete
    get:
      description: ClusterMeshRule Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMeshRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterMeshRule'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMeshRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterMeshRule'
          description: Success
      tags:
      - ClusterMeshRule Detail
  /apis/servicemesh.k8smgmt.io/v3/projects/{project}/clustermeshrules/{name}/artifacts:
    get:
      description: ClusterMeshRule Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMeshRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterMeshRule'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterMeshRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ClusterMeshRule'
          description: Success
      tags:
      - ClusterMeshRule Detail
  /apis/servicemesh.k8smgmt.io/v3/projects/{project}/meshprofiles:
    get:
      description: MeshProfile list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeshProfileList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/MeshProfileList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeshProfileList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/MeshProfileList'
          description: Success
      tags:
      - MeshProfile List
    post:
      description: MeshProfile Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeshProfile'
          application/yaml:
            schema:
              $ref: '#/components/schemas/MeshProfile'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeshProfile'
            application/yaml:
              schema:
                $ref: '#/components/schemas/MeshProfile'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeshProfile'
            application/yaml:
              schema:
                $ref: '#/components/schemas/MeshProfile'
          description: Success
      tags:
      - MeshProfile Apply
  /apis/servicemesh.k8smgmt.io/v3/projects/{project}/meshprofiles/{name}:
    delete:
      description: MeshProfile Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - MeshProfile Delete
    get:
      description: MeshProfile Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeshProfile'
            application/yaml:
              schema:
                $ref: '#/components/schemas/MeshProfile'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeshProfile'
            application/yaml:
              schema:
                $ref: '#/components/schemas/MeshProfile'
          description: Success
      tags:
      - MeshProfile Detail
  /apis/servicemesh.k8smgmt.io/v3/projects/{project}/namespacemeshpolicies:
    get:
      description: NamespaceMeshPolicy list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicyList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicyList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicyList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicyList'
          description: Success
      tags:
      - NamespaceMeshPolicy List
    post:
      description: NamespaceMeshPolicy Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamespaceMeshPolicy'
          application/yaml:
            schema:
              $ref: '#/components/schemas/NamespaceMeshPolicy'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicy'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicy'
          description: Success
      tags:
      - NamespaceMeshPolicy Apply
  /apis/servicemesh.k8smgmt.io/v3/projects/{project}/namespacemeshpolicies/{name}:
    delete:
      description: NamespaceMeshPolicy Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - NamespaceMeshPolicy Delete
    get:
      description: NamespaceMeshPolicy Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicy'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicy'
          description: Success
      tags:
      - NamespaceMeshPolicy Detail
  /apis/servicemesh.k8smgmt.io/v3/projects/{project}/namespacemeshpolicys:
    get:
      description: NamespaceMeshPolicy list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicyList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicyList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicyList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicyList'
          description: Success
      tags:
      - NamespaceMeshPolicy List
    post:
      description: NamespaceMeshPolicy Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamespaceMeshPolicy'
          application/yaml:
            schema:
              $ref: '#/components/schemas/NamespaceMeshPolicy'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicy'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicy'
          description: Success
      tags:
      - NamespaceMeshPolicy Apply
  /apis/servicemesh.k8smgmt.io/v3/projects/{project}/namespacemeshpolicys/{name}:
    delete:
      description: NamespaceMeshPolicy Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - NamespaceMeshPolicy Delete
    get:
      description: NamespaceMeshPolicy Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicy'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicy'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceMeshPolicy'
          description: Success
      tags:
      - NamespaceMeshPolicy Detail
  /apis/servicemesh.k8smgmt.io/v3/projects/{project}/namespacemeshrules:
    get:
      description: NamespaceMeshRule list endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceMeshRuleList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceMeshRuleList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceMeshRuleList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceMeshRuleList'
          description: Success
      tags:
      - NamespaceMeshRule List
    post:
      description: NamespaceMeshRule Apply endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamespaceMeshRule'
          application/yaml:
            schema:
              $ref: '#/components/schemas/NamespaceMeshRule'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceMeshRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceMeshRule'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceMeshRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceMeshRule'
          description: Success
      tags:
      - NamespaceMeshRule Apply
  /apis/servicemesh.k8smgmt.io/v3/projects/{project}/namespacemeshrules/{name}:
    delete:
      description: NamespaceMeshRule Delete endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - NamespaceMeshRule Delete
    get:
      description: NamespaceMeshRule Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceMeshRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceMeshRule'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceMeshRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceMeshRule'
          description: Success
      tags:
      - NamespaceMeshRule Detail
  /apis/servicemesh.k8smgmt.io/v3/projects/{project}/namespacemeshrules/{name}/artifacts:
    get:
      description: NamespaceMeshRule Detail endpoint
      parameters:
      - description: project of the resource
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceMeshRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceMeshRule'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceMeshRule'
            application/yaml:
              schema:
                $ref: '#/components/schemas/NamespaceMeshRule'
          description: Success
      tags:
      - NamespaceMeshRule Detail
  /apis/system.k8smgmt.io/v3/chargebackgroupreports:
    get:
      description: ChargebackGroupReport list endpoint
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackGroupReportList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ChargebackGroupReportList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackGroupReportList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ChargebackGroupReportList'
          description: Success
      tags:
      - ChargebackGroupReport List
    post:
      description: ChargebackGroupReport Apply endpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargebackGroupReport'
          application/yaml:
            schema:
              $ref: '#/components/schemas/ChargebackGroupReport'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackGroupReport'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ChargebackGroupReport'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackGroupReport'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ChargebackGroupReport'
          description: Success
      tags:
      - ChargebackGroupReport Apply
  /apis/system.k8smgmt.io/v3/chargebackgroupreports/{name}:
    delete:
      description: ChargebackGroupReport Delete endpoint
      parameters:
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - ChargebackGroupReport Delete
    get:
      description: ChargebackGroupReport Detail endpoint
      parameters:
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackGroupReport'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ChargebackGroupReport'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackGroupReport'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ChargebackGroupReport'
          description: Success
      tags:
      - ChargebackGroupReport Detail
  /apis/system.k8smgmt.io/v3/chargebackgroups:
    get:
      description: ChargebackGroup list endpoint
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackGroupList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ChargebackGroupList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackGroupList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ChargebackGroupList'
          description: Success
      tags:
      - ChargebackGroup List
    post:
      description: ChargebackGroup Apply endpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargebackGroup'
          application/yaml:
            schema:
              $ref: '#/components/schemas/ChargebackGroup'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackGroup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ChargebackGroup'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackGroup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ChargebackGroup'
          description: Success
      tags:
      - ChargebackGroup Apply
  /apis/system.k8smgmt.io/v3/chargebackgroups/{name}:
    delete:
      description: ChargebackGroup Delete endpoint
      parameters:
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - ChargebackGroup Delete
    get:
      description: ChargebackGroup Detail endpoint
      parameters:
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackGroup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ChargebackGroup'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackGroup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ChargebackGroup'
          description: Success
      tags:
      - ChargebackGroup Detail
  /apis/system.k8smgmt.io/v3/chargebackgroups/{name}/status:
    get:
      description: ChargebackGroup Detail endpoint
      parameters:
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackGroup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ChargebackGroup'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackGroup'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ChargebackGroup'
          description: Success
      tags:
      - ChargebackGroup Detail
  /apis/system.k8smgmt.io/v3/chargebackshares:
    get:
      description: ChargebackShare list endpoint
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackShareList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ChargebackShareList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackShareList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ChargebackShareList'
          description: Success
      tags:
      - ChargebackShare List
    post:
      description: ChargebackShare Apply endpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargebackShare'
          application/yaml:
            schema:
              $ref: '#/components/schemas/ChargebackShare'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackShare'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ChargebackShare'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackShare'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ChargebackShare'
          description: Success
      tags:
      - ChargebackShare Apply
  /apis/system.k8smgmt.io/v3/chargebackshares/{name}:
    delete:
      description: ChargebackShare Delete endpoint
      parameters:
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - ChargebackShare Delete
    get:
      description: ChargebackShare Detail endpoint
      parameters:
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackShare'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ChargebackShare'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargebackShare'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ChargebackShare'
          description: Success
      tags:
      - ChargebackShare Detail
  /apis/system.k8smgmt.io/v3/organizations:
    get:
      description: Organization list endpoint
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OrganizationList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/OrganizationList'
          description: Success
      tags:
      - Organization List
    post:
      description: Organization Apply endpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/yaml:
            schema:
              $ref: '#/components/schemas/Organization'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Success
      tags:
      - Organization Apply
  /apis/system.k8smgmt.io/v3/organizations/{name}:
    delete:
      description: Organization Delete endpoint
      parameters:
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - Organization Delete
    get:
      description: Organization Detail endpoint
      parameters:
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Success
      tags:
      - Organization Detail
  /apis/system.k8smgmt.io/v3/partners:
    get:
      description: Partner list endpoint
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/PartnerList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/PartnerList'
          description: Success
      tags:
      - Partner List
    post:
      description: Partner Apply endpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Partner'
          application/yaml:
            schema:
              $ref: '#/components/schemas/Partner'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Partner'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Partner'
          description: Success
      tags:
      - Partner Apply
  /apis/system.k8smgmt.io/v3/partners/{name}:
    delete:
      description: Partner Delete endpoint
      parameters:
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - Partner Delete
    get:
      description: Partner Detail endpoint
      parameters:
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Partner'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Partner'
          description: Success
      tags:
      - Partner Detail
  /apis/system.k8smgmt.io/v3/projects:
    get:
      description: Project list endpoint
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ProjectList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/ProjectList'
          description: Success
      tags:
      - Project List
    post:
      description: Project Apply endpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/yaml:
            schema:
              $ref: '#/components/schemas/Project'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Project'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Project'
          description: Success
      tags:
      - Project Apply
  /apis/system.k8smgmt.io/v3/projects/{name}:
    delete:
      description: Project Delete endpoint
      parameters:
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - Project Delete
    get:
      description: Project Detail endpoint
      parameters:
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Project'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Project'
          description: Success
      tags:
      - Project Detail
  /apis/system.k8smgmt.io/v3/projects/{name}/status:
    get:
      description: Project Detail endpoint
      parameters:
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Project'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Project'
          description: Success
      tags:
      - Project Detail
  /apis/system.k8smgmt.io/v3/roles:
    get:
      description: Role list endpoint
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/RoleList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/RoleList'
          description: Success
      tags:
      - Role List
    post:
      description: Role Apply endpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
          application/yaml:
            schema:
              $ref: '#/components/schemas/Role'
        description: schema of the resource to apply
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Role'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Role'
          description: Success
      tags:
      - Role Apply
  /apis/system.k8smgmt.io/v3/roles/{name}:
    delete:
      description: Role Delete endpoint
      parameters:
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          description: Success
      tags:
      - Role Delete
    get:
      description: Role Detail endpoint
      parameters:
      - description: name of the resource
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Role'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Not Found
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
            application/yaml:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Internal Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Role'
          description: Success
      tags:
      - Role Detail
components:
  schemas:
    AKSStatus:
      properties:
        identityProfile:
          $ref: '#/components/schemas/IdentityProfile'
        nodepools:
          items:
            $ref: '#/components/schemas/NodepoolStatus'
          type: array
      type: object
    APIError:
      description: API Error
      properties:
        code:
          description: Error Code
          format: int32
          title: Code
          type: integer
        external:
          description: External Error
          title: External
          type: string
        internal:
          description: Internal Error string
          title: Internal
          type: string
      title: API Error
    Aadprofile:
      properties:
        adminGroupObjectIDs:
          description: The list of AAD group object IDs that will have admin role
            of the cluster.
          items:
            type: string
          title: Admin Group Object IDs
          type: array
        clientAppID:
          description: The client AAD application ID.
          title: Client App ID
          type: string
        enableAzureRBAC:
          description: Whether to enable Azure RBAC for Kubernetes authorization.
          title: Enable Azure RBAC
          type: boolean
        managed:
          description: Whether to enable managed AAD.
          title: Managed
          type: boolean
        serverAppID:
          description: The server AAD application ID.
          title: Server App ID
          type: string
        serverAppSecret:
          description: The server AAD application secret.
          title: Server App Secret
          type: string
        tenantID:
          description: "The AAD tenant ID to use for authentication. If not specified,\
            \ will use the tenant of the deployment subscription."
          title: Tenant ID
          type: string
      type: object
    AcrProfile:
      properties:
        acrName:
          description: The name of the Azure Container Registry resource.
          title: Acr Name
          type: string
        resourceGroupName:
          description: "If not specified, defaults to the resource group of the managed\
            \ cluster"
          title: Resource Group Name
          type: string
      type: object
    Additionalmetadata:
      properties:
        acrProfile:
          $ref: '#/components/schemas/AcrProfile'
        omsWorkspaceLocation:
          description: "If not specified, defaults to the resource group of the managed\
            \ cluster. Valid only if the Log analytics workspace is specified."
          type: string
      type: object
    Addon:
      description: Addon definition
      example:
        apiVersion: infra.k8smgmt.io/v3
        kind: Addon
        metadata:
          name: some-name
          project: defaultproject
        spec:
          artifact:
            artifact:
              chartPath:
                name: relative/path/to/some/chart.tgz
              repository: some-repo
              revision: master
            type: Helm
          namespace: some-namespace
          sharing:
            enabled: true
            projects:
            - name: some-project
          version: v1
      properties:
        apiVersion:
          default: infra.k8smgmt.io/v3
          description: API Version of the addon resource
          title: API Version
          type: string
        kind:
          default: Addon
          description: Kind of the addon resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/AddonSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: Addon
      type: object
    AddonList:
      description: Addon list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: infra.k8smgmt.io/v3
          kind: Addon
          metadata:
            name: some-name
            project: defaultproject
          spec:
            artifact:
              artifact:
                chartPath:
                  name: relative/path/to/some/chart.tgz
                repository: some-repo
                revision: master
              type: Helm
            namespace: some-namespace
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: v1
        - apiVersion: infra.k8smgmt.io/v3
          kind: Addon
          metadata:
            name: some-name
            project: defaultproject
          spec:
            artifact:
              artifact:
                chartPath:
                  name: relative/path/to/some/chart.tgz
                repository: some-repo
                revision: master
              type: Helm
            namespace: some-namespace
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: v1
      properties:
        apiVersion:
          description: API Version of the addon list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the addon resources
          items:
            $ref: '#/components/schemas/Addon'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the addon list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: AddonList
      type: object
    AddonSpec:
      description: specification of addon
      example:
        artifact:
          artifact:
            chartPath:
              name: relative/path/to/some/chart.tgz
            repository: some-repo
            revision: master
          type: Helm
        namespace: some-namespace
        sharing:
          enabled: true
          projects:
          - name: some-project
        version: v1
      properties:
        artifact:
          $ref: '#/components/schemas/ArtifactSpec'
        namespace:
          description: namespace of the addon
          title: Namespace
          type: string
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        version:
          description: version of the addon
          title: Version
          type: string
      required:
      - artifact
      - namespace
      - sharing
      - version
      title: Addon Specification
      type: object
    Agent:
      description: Agent definition
      example:
        apiVersion: gitops.k8smgmt.io/v3
        kind: Agent
        metadata:
          name: some-name
          project: defaultproject
        spec:
          cluster:
            name: some-cluster
          type: Cluster
      properties:
        apiVersion:
          default: gitops.k8smgmt.io/v3
          description: API Version of the agent resource
          title: API Version
          type: string
        kind:
          default: Agent
          description: Kind of the agent resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/AgentSpec'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: Agent
      type: object
    AgentList:
      description: agent list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: gitops.k8smgmt.io/v3
          kind: Agent
          metadata:
            name: some-name
            project: defaultproject
          spec:
            cluster:
              name: some-cluster
            type: Cluster
        - apiVersion: gitops.k8smgmt.io/v3
          kind: Agent
          metadata:
            name: some-name
            project: defaultproject
          spec:
            cluster:
              name: some-cluster
            type: Cluster
      properties:
        apiVersion:
          description: API Version of the agent list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the agent resources
          items:
            $ref: '#/components/schemas/Agent'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the agent list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: AgentList
      type: object
    AgentMeta:
      description: metadata of the agent
      example:
        name: some-agent
      properties:
        name:
          description: name of the agent
          title: Name
          type: string
      required:
      - name
      title: Agent Metadata
      type: object
    AgentSpec:
      description: specification of agent
      example:
        cluster:
          name: some-cluster
        type: Cluster
      properties:
        active:
          description: flag to indicate if the agent is active
          title: Active
          type: boolean
        cluster:
          $ref: '#/components/schemas/ClusterMeta'
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        type:
          default: Cluster
          description: type of agent
          enum:
          - Cluster
          - Docker
          title: Agent Type
          type: string
        version:
          description: version of agent
          title: Agent Version
          type: string
      required:
      - cluster
      - type
      title: Agent Specification
      type: object
    AksV3ConfigObject:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/AksV3Spec'
      type: object
    AksV3Spec:
      properties:
        managedCluster:
          $ref: '#/components/schemas/Managedcluster'
        nodePools:
          items:
            $ref: '#/components/schemas/Nodepool'
          type: array
        resourceGroupName:
          type: string
        subscriptionID:
          type: string
      type: object
    Apiserveraccessprofile:
      properties:
        authorizedIPRanges:
          description: "IP ranges are specified in CIDR format, e.g. 137.117.106.88/29.\
            \ This feature is not compatible with clusters that use Public IP Per\
            \ Node, or clusters that are using a Basic Load Balancer. For more information\
            \ see API server authorized IP ranges."
          items:
            type: string
          title: Authorized IP Ranges
          type: array
        disableRunCommand:
          description: Whether to disable run command for the cluster or not.
          title: Disable Run Command
          type: boolean
        enablePrivateCluster:
          description: "For more details, see https://learn.microsoft.com/en-us/azure/aks/private-clusters"
          title: Enable Private Cluster
          type: boolean
        enablePrivateClusterPublicFQDN:
          description: Whether to create additional public FQDN for private cluster
            or not.
          title: Enable Private Cluster Public FQDN
          type: boolean
        privateDNSZone:
          description: The default is System. For more details see configure private
            DNS zone. Allowed values are system and none.
          title: Private DNS Zone
          type: string
      type: object
    ApprovalConfig:
      description: approval configuration
      example:
        approvers:
        - ssoUser: true
          userName: some-user@test.com
        timeout: 120s
        type: Email
      properties:
        approvers:
          description: list of approvers
          items:
            $ref: '#/components/schemas/Approver'
          title: Approvers
          type: array
        timeout:
          description: timeout for approval
          title: Approval Timeout
          type: string
        type:
          description: type of approval
          enum:
          - Email
          title: Approval Type
          type: string
      required:
      - approvers
      - types
      title: Approval Configuration
      type: object
    ApprovalOptions:
      type: object
    Approver:
      description: approver configuration
      example:
        ssoUser: true
        userName: some-user@test.com
      properties:
        ssoUser:
          description: flag to specify if the user is a SSO User
          title: SSO User
          type: boolean
        userName:
          description: user name of the approver
          title: User Name
          type: string
      required:
      - userName
      title: Approver Configuration
      type: object
    ArtifactSpec:
      description: ArtifactSpec
      example:
        artifact:
          chartPath:
            name: relative/path/to/some/chart.tgz
          repository: some-repo
          revision: master
        type: Helm
      properties:
        artifact:
          $ref: '#/components/schemas/ArtifactSpec_artifact'
        options:
          $ref: '#/components/schemas/ArtifactSpec_options'
        type:
          description: type of the artifact
          enum:
          - Helm
          - Yaml
          - AlertManager
          title: Artifact Type
          type: string
      required:
      - artifact
      - type
      title: ArtifactSpec
      type: object
    Autoscalerprofile:
      properties:
        balanceSimilarNodeGroups:
          description: Valid values are true and false
          title: Balance Similar Node Groups
          type: string
        expander:
          default: least-waste
          description: "If not specified, the default is random. See https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders\
            \ for more information. Valid values are least-waste, most-pods, priority,\
            \ random."
          title: Expander
          type: string
        maxEmptyBulkDelete:
          description: The default is 10.
          title: Max Empty Build Delete
          type: string
        maxGracefulTerminationSec:
          description: The default is 600.
          title: Max Graceful Termination Seconds
          type: string
        maxNodeProvisionTime:
          description: The default is 15m. Values must be an integer followed by an
            m. No unit of time other than minutes (m) is supported.
          title: Max Node Provision Time
          type: string
        maxTotalUnreadyPercentage:
          description: The default is 45. The maximum is 100 and the minimum is 0.
          title: Max Total Unready Percentage
          type: string
        newPodScaleUpDelay:
          description: "For scenarios like burst/batch scale where you don't want\
            \ CA to act before the kubernetes scheduler could schedule all the pods,\
            \ you can tell CA to ignore unscheduled pods before they're a certain\
            \ age. The default is 0s. Values must be an integer followed by a unit\
            \ (s for seconds, m for minutes, h for hours, etc)."
          title: New Pod Scale Up Delay
          type: string
        okTotalUnreadyCount:
          description: This must be an integer. The default is 3.
          title: Ok Total Unready Count
          type: string
        scaleDownDelayAfterAdd:
          description: The default is 10m. Values must be an integer followed by an
            m. No unit of time other than minutes (m) is supported.
          title: Scale Down Delay After Add
          type: string
        scaleDownDelayAfterDelete:
          description: The default is the scan-interval. Values must be an integer
            followed by an m. No unit of time other than minutes (m) is supported.
          title: Scale Down Delay After Delete
          type: string
        scaleDownDelayAfterFailure:
          description: The default is 3m. Values must be an integer followed by an
            m. No unit of time other than minutes (m) is supported.
          title: Scale Down Delay After Failure
          type: string
        scaleDownUnneededTime:
          description: The default is 10m. Values must be an integer followed by an
            m. No unit of time other than minutes (m) is supported.
          title: Scale Down Unneeded Time
          type: string
        scaleDownUnreadyTime:
          description: The default is 20m. Values must be an integer followed by an
            m. No unit of time other than minutes (m) is supported.
          title: Scale Down Unready Time
          type: string
        scaleDownUtilizationThreshold:
          description: The default is 0.5.
          title: Scale Down Utilization Threshold
          type: string
        scanInterval:
          description: The default is 10. Values must be an integer number of seconds.
          title: Scan Interval
          type: string
        skipNodesWithLocalStorage:
          description: The default is true.
          title: skipNodesWithLocalStorage
          type: string
        skipNodesWithSystemPods:
          description: The default is true.
          title: Skip Nodes With System Pods
          type: string
      type: object
    Autoupgradeprofile:
      properties:
        upgradeChannel:
          default: rapid
          description: "For more information see https://learn.microsoft.com/en-us/azure/aks/upgrade-cluster?tabs=azure-cli#set-auto-upgrade-channel.\
            \ Valid values are rapid, stable, patch, node-image, none."
          title: Upgrade Channel
          type: string
      type: object
    AwsCostProfile:
      description: Aws custom cost profile params
      example:
        awsCredentials:
          awsServiceKeyName: ""
          awsServiceKeySecret: ""
          cloudCredentialsName: credsName
          roleArn: ""
        curIntegration:
          athenaBucketName: reserved-pricing
          athenaDatabase: rafay
          athenaRegion: us-west-1
          athenaTable: costmgmt
          awsAccountId: ""
        spotIntegration:
          awsAccountId: ""
          awsSpotDataBucket: spot-pricing
          awsSpotDataPrefix: costmgmt
          awsSpotDataRegion: us-west-1
          spotLabel: type
          spotLabelValue: spot
      properties:
        awsCredentials:
          $ref: '#/components/schemas/AwsCredsCostProfile'
        curIntegration:
          $ref: '#/components/schemas/AwsCurIntegration'
        spotIntegration:
          $ref: '#/components/schemas/AwsSpotIntegration'
      title: Aws CostProfile params
      type: object
    AwsCredsCostProfile:
      description: Aws Credentials to fetch cost data
      example:
        awsServiceKeyName: ""
        awsServiceKeySecret: ""
        cloudCredentialsName: credsName
        roleArn: ""
      properties:
        awsServiceKeyName:
          description: Aws Service Key Name
          title: Aws Service Key Name
          type: string
        awsServiceKeySecret:
          description: Aws Service Key Secret
          title: Aws Service Key Secret
          type: string
        cloudCredentialsName:
          description: cloud credentials id
          title: cloud credentials id
          type: string
        roleArn:
          description: Aws role arn
          title: Aws role arn
          type: string
      title: Aws Credentials
      type: object
    AwsCurIntegration:
      description: Aws custom cost profile params
      example:
        athenaBucketName: reserved-pricing
        athenaDatabase: rafay
        athenaRegion: us-west-1
        athenaTable: costmgmt
        awsAccountId: ""
        masterPayerArn: costmgmt
      properties:
        athenaBucketName:
          description: Aws Athena Bucket Name
          title: Athena Bucket Name
          type: string
        athenaDatabase:
          description: Aws Athena Database
          title: Athena Database
          type: string
        athenaRegion:
          description: Aws Athena Region
          title: Athena Region
          type: string
        athenaTable:
          description: Aws Athena Table Name
          title: Athena Table Name
          type: string
        awsAccountId:
          description: Aws Account ID
          title: Aws Account ID
          type: string
        masterPayerArn:
          description: Master Payer Arn
          title: 'Master Payer Arn '
          type: string
      title: Aws custom pricing params
      type: object
    AwsSpotIntegration:
      description: Aws Spot Integration params
      example:
        awsAccountId: ""
        awsSpotDataBucket: spot-pricing
        awsSpotDataPrefix: costmgmt
        awsSpotDataRegion: us-west-1
        spotLabel: type
        spotLabelValue: spot
      properties:
        awsAccountId:
          description: Aws Account ID
          title: Aws Account ID
          type: string
        awsSpotDataBucket:
          description: Aws Spot Data Bucket
          title: Aws Spot Data Bucket
          type: string
        awsSpotDataPrefix:
          description: Aws Spot Data Prefix
          title: Aws Spot Data Prefix
          type: string
        awsSpotDataRegion:
          description: Aws Spot Data Region
          title: Aws Spot Data Region
          type: string
        spotLabel:
          description: Aws Spot Label
          title: Spot Label
          type: string
        spotLabelValue:
          description: Aws Spot Label Value
          title: Spot Label Value
          type: string
      title: Aws Spot Integration
      type: object
    AzureCostProfile:
      description: Azure custom cost profile params
      example:
        customPricing:
          azureClientID: ""
          azureClientSecret: ""
          azureSubscriptionID: ""
          azureTenantID: ""
          cloudCredentialsName: credsName
          spotInstance:
            spotLabel: type
            spotLabelValue: spot
        gpuEstimates:
          gpuLabel: accelerator
          gpuLabelValue: nvidia
      properties:
        customPricing:
          $ref: '#/components/schemas/AzureCustomPricing'
        gpuEstimates:
          $ref: '#/components/schemas/GpuCostProfile'
      title: Azure CostProfile params
      type: object
    AzureCustomPricing:
      description: Azure custom cost profile params
      example:
        azureClientID: ""
        azureClientSecret: ""
        azureSubscriptionID: ""
        azureTenantID: ""
        cloudCredentialsName: credsName
        spotInstance:
          spotLabel: type
          spotLabelValue: spot
      properties:
        azureClientID:
          description: Azure Client ID
          title: Azure Client ID
          type: string
        azureClientSecret:
          description: Azure Client Secret
          title: Azure Client Secret
          type: string
        azureSubscriptionID:
          description: Azure Subscription ID
          title: Azure Subscription ID
          type: string
        azureTenantID:
          description: Azure Tenant ID
          title: Azure Tenant ID
          type: string
        cloudCredentialsName:
          description: cloud credentials id
          title: cloud credentials id
          type: string
        spotInstance:
          $ref: '#/components/schemas/SpotInstance'
      title: Azure custom pricing params
      type: object
    Azurekeyvaultkms:
      properties:
        enabled:
          description: Whether to enable Azure Key Vault key management service. The
            default is false.
          title: Enabled
          type: boolean
        keyId:
          description: "Identifier of Azure Key Vault key. See key identifier format\
            \ for more details. When Azure Key Vault key management service is enabled,\
            \ this field is required and must be a valid key identifier. When Azure\
            \ Key Vault key management service is disabled, leave the field empty."
          title: Key Id
          type: string
        keyVaultNetworkAccess:
          description: Network access of key vault. The possible values are Public
            and Private. Public means the key vault allows public access from all
            networks. Private means the key vault disables public access and enables
            private link. The default value is Public.
          title: Key Vault Network Access
          type: string
        keyVaultResourceId:
          description: "Resource ID of key vault. When keyVaultNetworkAccess is Private,\
            \ this field is required and must be a valid resource ID. When keyVaultNetworkAccess\
            \ is Public, leave the field empty."
          title: key Vault Resource ID
          type: string
      type: object
    Blueprint:
      description: Blueprint definition
      example:
        apiVersion: infra.k8smgmt.io/v3
        kind: Blueprint
        metadata:
          name: some-name
          project: defaultproject
        spec:
          costProfile:
            name: example-profile
            version: v1
          customAddons:
          - dependsOn:
            - some-other-addon-1
            - some-other-addon-2
            name: some-addon
            version: v12
          defaultAddons:
            csiSecretStoreConfig:
              enableSecretRotation: v1
              providers:
                aws: "true"
              syncSecrets: "true"
            enableCsiSecretStore: false
            enableIngress: true
            enableLogging: false
            enableMonitoring: false
            enableRookCeph: false
            enableVM: true
          drift:
            action: Deny
            enabled: true
          networkPolicy:
            policies:
            - name: example-policy
              version: v1
            profile:
              name: example-profile
              version: v1
          opaPolicy:
            enabled: "true"
            name: example-policy
            version: v1
          privateKubeAPIProxies:
          - name: some-name
          psp:
            enabled: true
            names:
            - psp-1
            - psp-2
            scope: Namespace
          serviceMesh:
            policies:
            - name: example-policy
              version: v1
            profile:
              name: example-profile
              version: v1
          sharing:
            enabled: true
            projects:
            - name: some-project
          version: v1
      properties:
        apiVersion:
          default: infra.k8smgmt.io/v3
          description: API Version of the blueprint resource
          title: API Version
          type: string
        kind:
          default: Blueprint
          description: Kind of the blueprint resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/BlueprintSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: Blueprint
      type: object
    BlueprintAddon:
      description: blueprint addon spec
      example:
        dependsOn:
        - some-other-addon-1
        - some-other-addon-2
        name: some-addon
        version: v12
      properties:
        dependsOn:
          description: other addons current addons depends on
          items:
            type: string
          title: Depends On
          type: array
        name:
          description: name of the blueprint addon
          title: Name
          type: string
        version:
          description: version of the blueprint addon
          title: Version
          type: string
      required:
      - name
      - version
      title: Blueprint Addon
      type: object
    BlueprintBase:
      description: blueprint base
      example:
        name: some-base
        version: v1
      properties:
        name:
          description: name of the blueprint base
          title: Name
          type: string
        version:
          description: version of the blueprint base
          title: Version
          type: string
      title: Blueprint Base
      type: object
    BlueprintConfig:
      properties:
        name:
          type: string
        version:
          type: string
      type: object
    BlueprintList:
      description: Blueprint list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: infra.k8smgmt.io/v3
          kind: Blueprint
          metadata:
            name: some-name
            project: defaultproject
          spec:
            costProfile:
              name: example-profile
              version: v1
            customAddons:
            - dependsOn:
              - some-other-addon-1
              - some-other-addon-2
              name: some-addon
              version: v12
            defaultAddons:
              csiSecretStoreConfig:
                enableSecretRotation: v1
                providers:
                  aws: "true"
                syncSecrets: "true"
              enableCsiSecretStore: false
              enableIngress: true
              enableLogging: false
              enableMonitoring: false
              enableRookCeph: false
              enableVM: true
            drift:
              action: Deny
              enabled: true
            networkPolicy:
              policies:
              - name: example-policy
                version: v1
              profile:
                name: example-profile
                version: v1
            opaPolicy:
              enabled: "true"
              name: example-policy
              version: v1
            privateKubeAPIProxies:
            - name: some-name
            psp:
              enabled: true
              names:
              - psp-1
              - psp-2
              scope: Namespace
            serviceMesh:
              policies:
              - name: example-policy
                version: v1
              profile:
                name: example-profile
                version: v1
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: v1
        - apiVersion: infra.k8smgmt.io/v3
          kind: Blueprint
          metadata:
            name: some-name
            project: defaultproject
          spec:
            costProfile:
              name: example-profile
              version: v1
            customAddons:
            - dependsOn:
              - some-other-addon-1
              - some-other-addon-2
              name: some-addon
              version: v12
            defaultAddons:
              csiSecretStoreConfig:
                enableSecretRotation: v1
                providers:
                  aws: "true"
                syncSecrets: "true"
              enableCsiSecretStore: false
              enableIngress: true
              enableLogging: false
              enableMonitoring: false
              enableRookCeph: false
              enableVM: true
            drift:
              action: Deny
              enabled: true
            networkPolicy:
              policies:
              - name: example-policy
                version: v1
              profile:
                name: example-profile
                version: v1
            opaPolicy:
              enabled: "true"
              name: example-policy
              version: v1
            privateKubeAPIProxies:
            - name: some-name
            psp:
              enabled: true
              names:
              - psp-1
              - psp-2
              scope: Namespace
            serviceMesh:
              policies:
              - name: example-policy
                version: v1
              profile:
                name: example-profile
                version: v1
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: v1
      properties:
        apiVersion:
          description: API Version of the blueprint list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the blueprint resources
          items:
            $ref: '#/components/schemas/Blueprint'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the blueprint list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: BlueprintList
      type: object
    BlueprintPSP:
      description: blueprint PSP metadata
      example:
        enabled: true
        names:
        - psp-1
        - psp-2
        scope: Namespace
      properties:
        enabled:
          description: flag to specify if PSP is enabled for blueprint
          title: Enabled
          type: boolean
        names:
          description: names of the PSPs to be added for the blueprint
          items:
            type: string
          title: Names
          type: array
        scope:
          description: scope of the PSP for the blueprint
          enum:
          - Cluster
          - Namespace
          title: Scope
          type: string
      required:
      - enabled
      - names
      - scope
      title: Blueprint PSP
      type: object
    BlueprintPlacement:
      description: blueprint fleet placement
      properties:
        autoPublish:
          description: Bool value of autoPublish
          title: AutoPublish
          type: boolean
        fleetValues:
          description: Array of Fleet value
          items:
            type: string
          title: FleetValues
          type: array
      title: Blueprint fleet placement
      type: object
    BlueprintSpec:
      description: blueprint specification
      example:
        costProfile:
          name: example-profile
          version: v1
        csiSecretStoreConfig:
          enableSecretRotation: v1
          providers:
            aws: "true"
          syncSecrets: "true"
        customAddons:
        - dependsOn:
          - some-other-addon-1
          - some-other-addon-2
          name: some-addon
          version: v12
        defaultAddons:
          csiSecretStoreConfig:
            enableSecretRotation: v1
            providers:
              aws: "true"
            syncSecrets: "true"
          enableCsiSecretStore: true
          enableIngress: true
          enableLogging: false
          enableMonitoring: false
          enableVM: true
        drift:
          action: Deny
          enabled: true
        networkPolicy:
          policies:
          - name: example-policy
            version: v1
          profile:
            name: example-profile
            version: v1
        opaPolicy:
          enabled: "true"
          name: example-policy
          version: v1
        placement:
          autoPublish: true
          fleetValues:
          - value1
          - value2
        privateKubeAPIProxies:
        - name: some-name
        psp:
          enabled: true
          names:
          - psp-1
          - psp-2
          scope: Namespace
        serviceMesh:
          policies:
          - name: example-policy
            version: v1
          profile:
            name: example-profile
            version: v1
        sharing:
          enabled: true
          projects:
          - name: some-project
        version: v1
      properties:
        base:
          $ref: '#/components/schemas/BlueprintBase'
        costProfile:
          $ref: '#/components/schemas/CostProfile'
        customAddons:
          description: custom addon configuration
          items:
            $ref: '#/components/schemas/BlueprintAddon'
          title: Custom Addons
          type: array
        defaultAddons:
          $ref: '#/components/schemas/DefaultAddons'
        drift:
          $ref: '#/components/schemas/DriftSpec'
        namespaceConfig:
          $ref: '#/components/schemas/NsConfig'
        networkPolicy:
          $ref: '#/components/schemas/NetworkPolicy'
        opaPolicy:
          $ref: '#/components/schemas/OPAPolicy'
        placement:
          $ref: '#/components/schemas/BlueprintPlacement'
        privateKubeAPIProxies:
          description: private  kubernetes API proxy networks
          items:
            $ref: '#/components/schemas/KubeAPIProxyNetwork'
          title: Private Kuberenetes API Proxy Networks
          type: array
        psp:
          $ref: '#/components/schemas/BlueprintPSP'
        serviceMesh:
          $ref: '#/components/schemas/ServiceMesh'
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        type:
          description: Blueprint Type
          title: Blueprint Type
          type: string
        version:
          description: version of the blueprint
          title: Version
          type: string
      title: Blueprint Specification
      type: object
    BlueprintStatus:
      properties:
        name:
          type: string
        version:
          type: string
      type: object
    Catalog:
      description: Catalog definition
      example:
        apiVersion: apps.k8smgmt.io/v3
        kind: Catalog
        metadata:
          name: some-name
          project: defaultproject
        spec:
          autoSync: true
          iconURL: https://example.com/icon.png
          repository: default-bitnami
          type: HelmCatalog
      properties:
        apiVersion:
          default: apps.k8smgmt.io/v3
          description: API Version of the catalog resource
          title: API Version
          type: string
        kind:
          default: Catalog
          description: Kind of the catalog resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/CatalogSpec'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: Catalog
      type: object
    CatalogList:
      description: Catalog list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: apps.k8smgmt.io/v3
          kind: Catalog
          metadata:
            name: some-name
            project: defaultproject
          spec:
            autoSync: true
            iconURL: https://example.com/icon.png
            repository: default-bitnami
            type: HelmCatalog
        - apiVersion: apps.k8smgmt.io/v3
          kind: Catalog
          metadata:
            name: some-name
            project: defaultproject
          spec:
            autoSync: true
            iconURL: https://example.com/icon.png
            repository: default-bitnami
            type: HelmCatalog
      properties:
        apiVersion:
          description: API Version of the catalog list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the catalog resources
          items:
            $ref: '#/components/schemas/Catalog'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the catalog list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: CatalogList
      type: object
    CatalogSpec:
      description: specification of catalog
      example:
        autoSync: true
        iconURL: https://example.com/icon.png
        repository: default-bitnami
        type: HelmRepository
      properties:
        autoSync:
          description: flag to indicate if the catalog is synced periodically
          title: AutoSync
          type: boolean
        iconURL:
          description: icon url of catalog
          title: Icon URL
          type: string
        repository:
          description: catalog helm repository name
          title: Repository
          type: string
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        type:
          description: type of catalog
          enum:
          - HelmRepository
          title: Catalog Type
          type: string
      required:
      - repository
      - type
      title: Catalog Specification
      type: object
    ChargebackAggregate:
      description: 'ChargebackAggregate parameters '
      example:
        cluster: false
        label:
        - scb3
        namespace: false
        project: false
      properties:
        cluster:
          description: cluster
          title: cluster
          type: boolean
        label:
          description: label
          items:
            type: string
          title: label
          type: array
        namespace:
          description: namespace
          title: namespace
          type: boolean
        project:
          description: project
          title: project
          type: boolean
      title: ChargebackAggregate Parameters
      type: object
    ChargebackFilter:
      description: 'ChargebackFilter parameters '
      example:
        cluster: cl1
        label:
        - scb3
        namespace: n2
        project: p1
      properties:
        cluster:
          description: cluster
          title: cluster
          type: string
        clusterName:
          description: clusterName
          title: clusterName
          type: string
        label:
          description: label
          items:
            type: string
          title: label
          type: array
        namespace:
          description: namespace
          title: namespace
          type: string
        project:
          description: project
          title: project
          type: string
        projectName:
          description: projectName
          title: projectName
          type: string
      title: ChargebackFilter Parameters
      type: object
    ChargebackGroup:
      description: Chargeback Group definition
      example:
        apiVersion: system.k8smgmt.io/v3
        kind: ChargebackGroup
        metadata:
          name: mkr18
        spec:
          aggregate:
            cluster: false
            label:
            - scb3
            namespace: false
            project: false
          exclusions:
          - namespace: n2
            project: p2
          inclusions:
          - label:
            - scb3
            project: p1
          - cluster: cl1
            label:
            - ""
            project: defaultproject
          type: summary
      properties:
        apiVersion:
          default: system.k8smgmt.io/v3
          description: API Version of the group resource
          title: API Version
          type: string
        kind:
          default: ChargebackGroup
          description: Kind of the group resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/ChargebackGroupSpec'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: ChargebackGroup
      type: object
    ChargebackGroupList:
      description: Chargeback Group list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: system.k8smgmt.io/v3
          kind: ChargebackGroup
          metadata:
            name: mkr18
          spec:
            aggregate:
              cluster: false
              label:
              - scb3
              namespace: false
              project: false
            exclusions:
            - namespace: n2
              project: p2
            inclusions:
            - label:
              - scb3
              project: p1
            - cluster: cl1
              label:
              - ""
              project: defaultproject
            type: summary
        - apiVersion: system.k8smgmt.io/v3
          kind: ChargebackGroup
          metadata:
            name: mkr18
          spec:
            aggregate:
              cluster: false
              label:
              - scb3
              namespace: false
              project: false
            exclusions:
            - namespace: n2
              project: p2
            inclusions:
            - label:
              - scb3
              project: p1
            - cluster: cl1
              label:
              - ""
              project: defaultproject
            type: summary
      properties:
        apiVersion:
          description: API Version of the Chargeback Group list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the Chargeback Group resources
          items:
            $ref: '#/components/schemas/ChargebackGroup'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the Chargeback Group list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: ChargebackGroupList
      type: object
    ChargebackGroupReport:
      description: Cost Profile definition
      example:
        apiVersion: system.k8smgmt.io/v3
        kind: ChargebackGroupReport
        metadata:
          name: mkr17
        spec:
          endDate:
            seconds: 1668176085
          groupName: mkr17
          startDate:
            seconds: 1668176085
      properties:
        apiVersion:
          default: system.k8smgmt.io/v3
          description: API Version of the ChargebackGroupReport resource
          title: API Version
          type: string
        kind:
          default: ChargebackGroupReport
          description: Kind of the ChargebackGroupReport resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/ChargebackGroupReportSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: ChargebackGroupReport
      type: object
    ChargebackGroupReportList:
      description: ChargebackGroupReport list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: system.k8smgmt.io/v3
          kind: ChargebackGroupReport
          metadata:
            name: mkr17
          spec:
            endDate:
              seconds: 1668176085
            groupName: mkr17
            startDate:
              seconds: 1668176085
        - apiVersion: system.k8smgmt.io/v3
          kind: ChargebackGroupReport
          metadata:
            name: mkr17
          spec:
            endDate:
              seconds: 1668176085
            groupName: mkr17
            startDate:
              seconds: 1668176085
      properties:
        apiVersion:
          description: API Version of the ChargebackGroupReport list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the ChargebackGroupReport resources
          items:
            $ref: '#/components/schemas/ChargebackGroupReport'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the ChargebackGroupReport list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: ChargebackGroupReportList
      type: object
    ChargebackGroupReportSpec:
      description: profile specification
      example:
        endDate:
          seconds: 1668176085
        groupName: mkr17
        startDate:
          seconds: 1668176085
      properties:
        endDate:
          $ref: '#/components/schemas/endDate'
        groupName:
          description: groupName
          title: groupName
          type: string
        reportLocation:
          description: reportLocation
          title: reportLocation
          type: string
        reportUrl:
          description: reportUrl
          title: reportUrl
          type: string
        startDate:
          $ref: '#/components/schemas/startDate'
        urlExpiry:
          description: urlExpiry
          title: urlExpiry
          type: string
      title: Profile Specification
      type: object
    ChargebackGroupSpec:
      description: profile specification
      example:
        aggregate:
          cluster: false
          label:
          - scb3
          namespace: false
          project: false
        exclusions:
        - namespace: n2
          project: p2
        inclusions:
        - label:
          - scb3
          project: p1
        - cluster: cl1
          label:
          - ""
          project: defaultproject
        type: summary
      properties:
        aggregate:
          $ref: '#/components/schemas/ChargebackAggregate'
        exclusions:
          description: exclusions
          items:
            $ref: '#/components/schemas/ChargebackFilter'
          title: exclusions
          type: array
        inclusions:
          description: inclusions
          items:
            $ref: '#/components/schemas/ChargebackFilter'
          title: inclusions
          type: array
        type:
          description: type
          title: type
          type: string
      title: Profile Specification
      type: object
    ChargebackShare:
      description: ChargebackShare definition
      example:
        apiVersion: system.k8smgmt.io/v3
        kind: ChargebackShare
        metadata:
          name: chargebackshare
        spec:
          shareEnabled: true
          shareType: allocation
      properties:
        apiVersion:
          default: system.k8smgmt.io/v3
          description: API Version of the ChargebackShare resource
          title: API Version
          type: string
        kind:
          default: ChargebackShare
          description: Kind of the ChargebackShare resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/ChargebackShareSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: ChargebackShare
      type: object
    ChargebackShareList:
      description: ChargebackShare list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: system.k8smgmt.io/v3
          kind: ChargebackShare
          metadata:
            name: chargebackshare
          spec:
            shareEnabled: true
            shareType: allocation
        - apiVersion: system.k8smgmt.io/v3
          kind: ChargebackShare
          metadata:
            name: chargebackshare
          spec:
            shareEnabled: true
            shareType: allocation
      properties:
        apiVersion:
          description: API Version of the ChargebackShare list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the ChargebackShare resources
          items:
            $ref: '#/components/schemas/ChargebackShare'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the ChargebackShare list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: ChargebackShareList
      type: object
    ChargebackShareSpec:
      description: ChargebackShareSpec specification
      example:
        shareEnabled: true
        shareType: allocation
      properties:
        shareEnabled:
          description: shareEnabled
          title: shareEnabled
          type: boolean
        shareType:
          description: shareType
          title: shareType
          type: string
      title: ChargebackShareSpec Specification
      type: object
    Cluster:
      example:
        metadata:
          name: example-cluster
          annotations:
            key: annotations
          description: description
          project: defaultproject
          labels:
            key: labels
        apiVersion: infra.k8smgmt.io/v3
        kind: Cluster
        spec:
          blueprintConfig:
            name: minimal
            version: latest
          cloudcredentials: azure
          config:
            kind: aksClusterConfig
            metadata:
              name: example-cluster
            spec:
              managedCluster:
                apiVersion: 2022-07-01
                identity:
                  type: SystemAssigned
                location: centralindia
                properties:
                  apiServerAccessProfile:
                    enablePrivateCluster: true
                  dnsPrefix: exxample-azure-cluster-dns
                  kubernetesVersion: 1.23.12
                  networkProfile:
                    loadBalancerSku: standard
                    networkPlugin: kubenet
                sku:
                  name: Basic
                  tier: Free
                type: Microsoft.ContainerService/managedClusters
              nodePools:
              - apiVersion: 2022-07-01
                location: centralindia
                name: primary
                properties:
                  count: 1
                  enableAutoScaling: true
                  maxCount: 1
                  maxPods: 40
                  minCount: 1
                  mode: System
                  orchestratorVersion: 1.23.12
                  osType: Linux
                  type: VirtualMachineScaleSets
                  vmSize: Standard_DS2_v2
                type: Microsoft.ContainerService/managedClusters/agentPools
              resourceGroupName: resource-name
          drift:
            action: Deny
            enabled: true
          type: aks
        status:
          aks:
            nodepools:
            - createdAt: 2023-01-31T04:06:50Z
              id: id
              name: primary
          blueprint:
            name: minimal
          commonStatus:
            conditionStatus: 1
            conditionType: ClusterOperationSubmitted
            lastUpdated:
              nanos: 84036000
              seconds: 1675141518
            reason: clusterOperationisbeingapplied
          conditions:
          - reason: pending
            status: "False"
            type: ClusterRegisterSucceeded
          - reason: pending
            status: "False"
            type: ClusterCheckInSucceeded
          - reason: pending
            status: "False"
            type: ClusterNodeSyncSucceeded
          - reason: pending
            status: "False"
            type: ClusterBlueprintSyncSucceeded
          - reason: pending
            status: "False"
            type: ClusterNamespaceSyncSucceeded
          - reason: pending
            status: "False"
            type: ClusterReady
          createdAt: 2023-01-31T04:06:22Z
          displayName: example-cluster
          extra:
            vaultIntegration: {}
          id: id
          name: example-cluster
          provisionStatus: INFRA_CREATION_INPROGRESS
      properties:
        apiVersion:
          default: infra.k8smgmt.io/v3
          description: api version
          title: API Version
          type: string
        kind:
          default: Cluster
          description: kind
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/ClusterSpec'
        status:
          $ref: '#/components/schemas/ClusterStatus'
      type: object
    ClusterCondition:
      properties:
        lastUpdated:
          $ref: '#/components/schemas/StatusTime'
        reason:
          type: string
        status:
          enum:
          - Invalid
          - "True"
          - "False"
          - Unknown
          type: string
        type:
          enum:
          - InvalidValue
          - ClusterRegisterSucceeded
          - ClusterApproveSucceeded
          - ClusterCheckInSucceeded
          - ClusterNodeSyncSucceeded
          - ClusterBlueprintSyncSucceeded
          - ClusterNamespaceSyncSucceeded
          - ClusterReady
          type: string
      type: object
    ClusterIdentityStatus:
      properties:
        principalId:
          type: string
        tenantId:
          type: string
      type: object
    ClusterList:
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            name: example-cluster
            annotations:
              key: annotations
            description: description
            project: defaultproject
            labels:
              key: labels
          apiVersion: infra.k8smgmt.io/v3
          kind: Cluster
          spec:
            blueprintConfig:
              name: minimal
              version: latest
            cloudcredentials: azure
            config:
              kind: aksClusterConfig
              metadata:
                name: example-cluster
              spec:
                managedCluster:
                  apiVersion: 2022-07-01
                  identity:
                    type: SystemAssigned
                  location: centralindia
                  properties:
                    apiServerAccessProfile:
                      enablePrivateCluster: true
                    dnsPrefix: exxample-azure-cluster-dns
                    kubernetesVersion: 1.23.12
                    networkProfile:
                      loadBalancerSku: standard
                      networkPlugin: kubenet
                  sku:
                    name: Basic
                    tier: Free
                  type: Microsoft.ContainerService/managedClusters
                nodePools:
                - apiVersion: 2022-07-01
                  location: centralindia
                  name: primary
                  properties:
                    count: 1
                    enableAutoScaling: true
                    maxCount: 1
                    maxPods: 40
                    minCount: 1
                    mode: System
                    orchestratorVersion: 1.23.12
                    osType: Linux
                    type: VirtualMachineScaleSets
                    vmSize: Standard_DS2_v2
                  type: Microsoft.ContainerService/managedClusters/agentPools
                resourceGroupName: resource-name
            drift:
              action: Deny
              enabled: true
            type: aks
          status:
            aks:
              nodepools:
              - createdAt: 2023-01-31T04:06:50Z
                id: id
                name: primary
            blueprint:
              name: minimal
            commonStatus:
              conditionStatus: 1
              conditionType: ClusterOperationSubmitted
              lastUpdated:
                nanos: 84036000
                seconds: 1675141518
              reason: clusterOperationisbeingapplied
            conditions:
            - reason: pending
              status: "False"
              type: ClusterRegisterSucceeded
            - reason: pending
              status: "False"
              type: ClusterCheckInSucceeded
            - reason: pending
              status: "False"
              type: ClusterNodeSyncSucceeded
            - reason: pending
              status: "False"
              type: ClusterBlueprintSyncSucceeded
            - reason: pending
              status: "False"
              type: ClusterNamespaceSyncSucceeded
            - reason: pending
              status: "False"
              type: ClusterReady
            createdAt: 2023-01-31T04:06:22Z
            displayName: example-cluster
            extra:
              vaultIntegration: {}
            id: id
            name: example-cluster
            provisionStatus: INFRA_CREATION_INPROGRESS
        - metadata:
            name: example-cluster
            annotations:
              key: annotations
            description: description
            project: defaultproject
            labels:
              key: labels
          apiVersion: infra.k8smgmt.io/v3
          kind: Cluster
          spec:
            blueprintConfig:
              name: minimal
              version: latest
            cloudcredentials: azure
            config:
              kind: aksClusterConfig
              metadata:
                name: example-cluster
              spec:
                managedCluster:
                  apiVersion: 2022-07-01
                  identity:
                    type: SystemAssigned
                  location: centralindia
                  properties:
                    apiServerAccessProfile:
                      enablePrivateCluster: true
                    dnsPrefix: exxample-azure-cluster-dns
                    kubernetesVersion: 1.23.12
                    networkProfile:
                      loadBalancerSku: standard
                      networkPlugin: kubenet
                  sku:
                    name: Basic
                    tier: Free
                  type: Microsoft.ContainerService/managedClusters
                nodePools:
                - apiVersion: 2022-07-01
                  location: centralindia
                  name: primary
                  properties:
                    count: 1
                    enableAutoScaling: true
                    maxCount: 1
                    maxPods: 40
                    minCount: 1
                    mode: System
                    orchestratorVersion: 1.23.12
                    osType: Linux
                    type: VirtualMachineScaleSets
                    vmSize: Standard_DS2_v2
                  type: Microsoft.ContainerService/managedClusters/agentPools
                resourceGroupName: resource-name
            drift:
              action: Deny
              enabled: true
            type: aks
          status:
            aks:
              nodepools:
              - createdAt: 2023-01-31T04:06:50Z
                id: id
                name: primary
            blueprint:
              name: minimal
            commonStatus:
              conditionStatus: 1
              conditionType: ClusterOperationSubmitted
              lastUpdated:
                nanos: 84036000
                seconds: 1675141518
              reason: clusterOperationisbeingapplied
            conditions:
            - reason: pending
              status: "False"
              type: ClusterRegisterSucceeded
            - reason: pending
              status: "False"
              type: ClusterCheckInSucceeded
            - reason: pending
              status: "False"
              type: ClusterNodeSyncSucceeded
            - reason: pending
              status: "False"
              type: ClusterBlueprintSyncSucceeded
            - reason: pending
              status: "False"
              type: ClusterNamespaceSyncSucceeded
            - reason: pending
              status: "False"
              type: ClusterReady
            createdAt: 2023-01-31T04:06:22Z
            displayName: example-cluster
            extra:
              vaultIntegration: {}
            id: id
            name: example-cluster
            provisionStatus: INFRA_CREATION_INPROGRESS
      properties:
        apiVersion:
          type: string
        items:
          items:
            $ref: '#/components/schemas/Cluster'
          type: array
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      type: object
    ClusterMeshPolicy:
      description: Cluster policy definition
      example:
        apiVersion: servicemesh.k8smgmt.io/v3
        kind: ClusterMeshPolicy
        metadata:
          name: some-name
          project: defaultproject
        spec:
          rules:
          - name: test
            version: v1
          sharing:
            enabled: true
            projects:
            - name: some-project
          version: v1
      properties:
        apiVersion:
          default: servicemesh.k8smgmt.io/v3
          description: API Version of the cluster policy resource
          title: API Version
          type: string
        kind:
          default: ClusterMeshPolicy
          description: Kind of the cluster policy resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/ClusterMeshPolicySpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: ClusterMeshPolicy
      type: object
    ClusterMeshPolicyList:
      description: Cluster policy list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: servicemesh.k8smgmt.io/v3
          kind: ClusterMeshPolicy
          metadata:
            name: some-name
            project: defaultproject
          spec:
            rules:
            - name: test
              version: v1
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: v1
        - apiVersion: servicemesh.k8smgmt.io/v3
          kind: ClusterMeshPolicy
          metadata:
            name: some-name
            project: defaultproject
          spec:
            rules:
            - name: test
              version: v1
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: v1
      properties:
        apiVersion:
          description: API Version of the policy list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the cluster policy resources
          items:
            $ref: '#/components/schemas/ClusterMeshPolicy'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the policy list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: ClusterMeshPolicyList
      type: object
    ClusterMeshPolicySpec:
      description: cluster policy specification
      example:
        rules:
        - name: test
          version: v1
        sharing:
          enabled: true
          projects:
          - name: some-project
        version: v1
      properties:
        rules:
          description: Group of cluster policy rules
          items:
            $ref: '#/components/schemas/ResourceNameAndVersionRef'
          title: Rules
          type: array
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        version:
          description: version of the cluster policy
          title: Version
          type: string
      title: Cluster policy Specification
      type: object
    ClusterMeshRule:
      description: ClusterMeshRule  definition
      example:
        apiVersion: servicemesh.k8smgmt.io/v3
        kind: ClusterMeshRule
        metadata:
          name: some-name
          project: defaultproject
        spec:
          artifact:
            artifact:
              paths:
              - name: relative/path/to/some/file.yaml
              repository: some-repo
              revision: master
            type: Yaml
          sharing:
            enabled: true
            projects:
            - name: some-project
          version: example-version
      properties:
        apiVersion:
          default: servicemesh.k8smgmt.io/v3
          description: API Version of the cluster mesh rule resource
          title: API Version
          type: string
        kind:
          default: ClusterMeshRule
          description: Kind of the cluster mesh rule resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/ClusterMeshRuleSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: ClusterMeshRule
      type: object
    ClusterMeshRuleList:
      description: ClusterMeshRule  list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: servicemesh.k8smgmt.io/v3
          kind: ClusterMeshRule
          metadata:
            name: some-name
            project: defaultproject
          spec:
            artifact:
              artifact:
                paths:
                - name: relative/path/to/some/file.yaml
                repository: some-repo
                revision: master
              type: Yaml
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: example-version
        - apiVersion: servicemesh.k8smgmt.io/v3
          kind: ClusterMeshRule
          metadata:
            name: some-name
            project: defaultproject
          spec:
            artifact:
              artifact:
                paths:
                - name: relative/path/to/some/file.yaml
                repository: some-repo
                revision: master
              type: Yaml
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: example-version
      properties:
        apiVersion:
          description: API Version of the mesh rule list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the mesh rule resources
          items:
            $ref: '#/components/schemas/ClusterMeshRule'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the mesh rule list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: ClusterMeshRuleList
      type: object
    ClusterMeshRuleSpec:
      description: cluster mesh rule  specification
      example:
        artifact:
          artifact:
            paths:
            - name: relative/path/to/some/file.yaml
            repository: some-repo
            revision: master
          type: Yaml
        sharing:
          enabled: true
          projects:
          - name: some-project
        version: example-version
      properties:
        artifact:
          $ref: '#/components/schemas/ArtifactSpec'
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        version:
          description: version of the cluster mesh rule
          title: Version
          type: string
      title: Cluster Mesh Rule Specification
      type: object
    ClusterMeta:
      description: metadata of the cluster
      example:
        name: some-cluster
      properties:
        name:
          description: name of the cluster
          title: Name
          type: string
      required:
      - name
      title: Cluster Metadata
      type: object
    ClusterNetworkPolicy:
      description: Cluster policy definition
      example:
        apiVersion: security.k8smgmt.io/v3
        kind: ClusterNetworkPolicy
        metadata:
          name: some-name
          project: defaultproject
        spec:
          rules:
          - name: test
            version: v1
          sharing:
            enabled: true
            projects:
            - name: some-project
          version: v1
      properties:
        apiVersion:
          default: security.k8smgmt.io/v3
          description: API Version of the cluster policy resource
          title: API Version
          type: string
        kind:
          default: ClusterNetworkPolicy
          description: Kind of the cluster policy resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/ClusterNetworkPolicySpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: ClusterNetworkPolicy
      type: object
    ClusterNetworkPolicyList:
      description: Cluster policy list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: security.k8smgmt.io/v3
          kind: ClusterNetworkPolicy
          metadata:
            name: some-name
            project: defaultproject
          spec:
            rules:
            - name: test
              version: v1
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: v1
        - apiVersion: security.k8smgmt.io/v3
          kind: ClusterNetworkPolicy
          metadata:
            name: some-name
            project: defaultproject
          spec:
            rules:
            - name: test
              version: v1
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: v1
      properties:
        apiVersion:
          description: API Version of the policy list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the cluster policy resources
          items:
            $ref: '#/components/schemas/ClusterNetworkPolicy'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the policy list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: ClusterNetworkPolicyList
      type: object
    ClusterNetworkPolicyRule:
      description: ClusterNetworkPolicyRule  definition
      example:
        apiVersion: security.k8smgmt.io/v3
        kind: ClusterNetworkPolicyRule
        metadata:
          name: some-name
          project: defaultproject
        spec:
          artifact:
            paths:
            - name: relative/path/to/some/file.yaml
            repository: some-repo
            revision: master
          sharing:
            enabled: true
            projects:
            - name: some-project
          version: example-version
      properties:
        apiVersion:
          default: security.k8smgmt.io/v3
          description: API Version of the cluster network policy rule resource
          title: API Version
          type: string
        kind:
          default: ClusterNetworkPolicyRule
          description: Kind of the cluster network policy rule resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/ClusterNetworkPolicyRuleSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: ClusterNetworkPolicyRule
      type: object
    ClusterNetworkPolicyRuleList:
      description: ClusterNetworkPolicyRule  list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: security.k8smgmt.io/v3
          kind: ClusterNetworkPolicyRule
          metadata:
            name: some-name
            project: defaultproject
          spec:
            artifact:
              paths:
              - name: relative/path/to/some/file.yaml
              repository: some-repo
              revision: master
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: example-version
        - apiVersion: security.k8smgmt.io/v3
          kind: ClusterNetworkPolicyRule
          metadata:
            name: some-name
            project: defaultproject
          spec:
            artifact:
              paths:
              - name: relative/path/to/some/file.yaml
              repository: some-repo
              revision: master
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: example-version
      properties:
        apiVersion:
          description: API Version of the network rule list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the network rule resources
          items:
            $ref: '#/components/schemas/ClusterNetworkPolicyRule'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the network rule list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: ClusterNetworkPolicyRuleList
      type: object
    ClusterNetworkPolicyRuleSpec:
      description: cluster network policy rule  specification
      example:
        artifact:
          artifact:
            paths:
            - name: relative/path/to/some/file.yaml
            repository: some-repo
            revision: master
          type: Yaml
        sharing:
          enabled: true
          projects:
          - name: some-project
        version: example-version
      properties:
        artifact:
          $ref: '#/components/schemas/ArtifactSpec'
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        version:
          description: version of the cluster policy rule
          title: Version
          type: string
      title: Cluster Network Policy Rule Specification
      type: object
    ClusterNetworkPolicySpec:
      description: cluster policy specification
      example:
        rules:
        - name: test
          version: v1
        sharing:
          enabled: true
          projects:
          - name: some-project
        version: v1
      properties:
        rules:
          description: Group of cluster policy rules
          items:
            $ref: '#/components/schemas/ResourceNameAndVersionRef'
          title: Rules
          type: array
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        version:
          description: version of the cluster policy
          title: Version
          type: string
      title: Cluster policy Specification
      type: object
    ClusterSpec:
      description: cluster specification
      example:
        blueprintConfig:
          name: minimal
          version: latest
        cloudcredentials: azure
        config:
          kind: aksClusterConfig
          metadata:
            name: example-cluster
          spec:
            managedCluster:
              apiVersion: 2022-07-01
              identity:
                type: SystemAssigned
              location: centralindia
              properties:
                apiServerAccessProfile:
                  enablePrivateCluster: true
                dnsPrefix: exxample-azure-cluster-dns
                kubernetesVersion: 1.23.12
                networkProfile:
                  loadBalancerSku: standard
                  networkPlugin: kubenet
              sku:
                name: Basic
                tier: Free
              type: Microsoft.ContainerService/managedClusters
            nodePools:
            - apiVersion: 2022-07-01
              location: centralindia
              name: primary
              properties:
                count: 1
                enableAutoScaling: true
                maxCount: 1
                maxPods: 40
                minCount: 1
                mode: System
                orchestratorVersion: 1.23.12
                osType: Linux
                type: VirtualMachineScaleSets
                vmSize: Standard_DS2_v2
              type: Microsoft.ContainerService/managedClusters/agentPools
            resourceGroupName: resource-name
        drift:
          action: Deny
          enabled: true
        type: aks
      properties:
        blueprintConfig:
          $ref: '#/components/schemas/BlueprintConfig'
        cloudCredentials:
          description: The credentials to be used to interact with the cloud infrastructure
          title: Cloud Credentials
          type: string
        config:
          $ref: '#/components/schemas/ClusterSpec_config'
        drift:
          $ref: '#/components/schemas/DriftSpec'
        proxyConfig:
          $ref: '#/components/schemas/ProxyConfig'
        sharing:
          $ref: '#/components/schemas/Sharing'
        systemComponentsPlacement:
          $ref: '#/components/schemas/SystemComponentsPlacement'
        type:
          default: aws-eks
          description: The type of the cluster this spec corresponds to
          title: Type
          type: string
      title: Cluster Specification
      type: object
    ClusterStatus:
      description: cluster status
      example:
        aks:
          nodepools:
          - createdAt: 2023-01-31T04:06:50Z
            id: id
            name: primary
        blueprint:
          name: minimal
        commonStatus:
          conditionStatus: 1
          conditionType: ClusterOperationSubmitted
          lastUpdated:
            nanos: 84036000
            seconds: 1675141518
          reason: clusterOperationisbeingapplied
        conditions:
        - reason: pending
          status: "False"
          type: ClusterRegisterSucceeded
        - reason: pending
          status: "False"
          type: ClusterCheckInSucceeded
        - reason: pending
          status: "False"
          type: ClusterNodeSyncSucceeded
        - reason: pending
          status: "False"
          type: ClusterBlueprintSyncSucceeded
        - reason: pending
          status: "False"
          type: ClusterNamespaceSyncSucceeded
        - reason: pending
          status: "False"
          type: ClusterReady
        createdAt: 2023-01-31T04:06:22Z
        displayName: example-cluster
        extra:
          vaultIntegration: {}
        id: id
        name: example-cluster
        provisionStatus: INFRA_CREATION_INPROGRESS
      properties:
        aks:
          $ref: '#/components/schemas/AKSStatus'
        blueprint:
          $ref: '#/components/schemas/BlueprintStatus'
        commonStatus:
          $ref: '#/components/schemas/Status'
        conditions:
          items:
            $ref: '#/components/schemas/ClusterCondition'
          type: array
        controPlane:
          $ref: '#/components/schemas/ControlPlaneStatus'
        createdAt:
          $ref: '#/components/schemas/StatusTime'
        displayName:
          type: string
        extra:
          $ref: '#/components/schemas/ExtraStatus'
        id:
          type: string
        imported:
          $ref: '#/components/schemas/ImportedStatus'
        name:
          type: string
        provisionStatus:
          type: string
      title: Cluster Status
      type: object
    ConfigContext:
      description: Configuration context contains environment variables and other
        supporting variables
      example:
        apiVersion: gitops.k8smgmt.io/v3
        kind: ConfigContext
        metadata:
          name: some-name
          project: defaultproject
        spec:
          envs:
          - key: env-var1
            sensitive: false
            value: val1
          files:
          - data: gibberish values
            name: path-to-file
            sensitive: false
          variables:
          - name: var1
            options:
              description: used for computation
              sensitive: false
            value: val1
            value_type: "4"
      properties:
        apiVersion:
          default: gitops.k8smgmt.io/v3
          description: API Version of the config context resource
          title: API Version
          type: string
        kind:
          default: ConfigContext
          description: Kind of the config context resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/ConfigContextSpec'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: ConfigContext
      type: object
    ConfigContextList:
      description: List of config contexts
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: gitops.k8smgmt.io/v3
          kind: ConfigContext
          metadata:
            name: some-name
            project: defaultproject
          spec:
            envs:
            - key: env-var1
              sensitive: false
              value: val1
            files:
            - data: gibberish values
              name: path-to-file
              sensitive: false
            variables:
            - name: var1
              options:
                description: used for computation
                sensitive: false
              value: val1
              value_type: "4"
        - apiVersion: gitops.k8smgmt.io/v3
          kind: ConfigContext
          metadata:
            name: some-name
            project: defaultproject
          spec:
            envs:
            - key: env-var1
              sensitive: false
              value: val1
            files:
            - data: gibberish values
              name: path-to-file
              sensitive: false
            variables:
            - name: var1
              options:
                description: used for computation
                sensitive: false
              value: val1
              value_type: "4"
      properties:
        apiVersion:
          description: API Version of the config context list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the config context resources
          items:
            $ref: '#/components/schemas/ConfigContext'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the config context list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: ConfigContextList
      type: object
    ConfigContextSpec:
      description: config context
      example:
        envs:
        - key: env-var1
          sensitive: false
          value: val1
        files:
        - data: gibberish values
          name: path-to-file
          sensitive: false
        variables:
        - name: var1
          options:
            description: used for computation
            sensitive: false
          value: val1
          value_type: "4"
      properties:
        envs:
          description: Environment variables data
          items:
            $ref: '#/components/schemas/EnvData'
          title: Envs
          type: array
        files:
          description: File path information
          items:
            $ref: '#/components/schemas/File'
          title: Files
          type: array
        variables:
          description: Variables data for config context
          items:
            $ref: '#/components/schemas/Variable'
          title: Variables
          type: array
      required:
      - data
      title: Config Context Specification
      type: object
    ConfigObject:
      properties:
        raw:
          format: byte
          type: string
      type: object
    ContainerOptions:
      properties:
        arguments:
          description: Specify the set of arguments to be passed
          items:
            type: string
          title: Arguments
          type: array
        commands:
          description: Specify the set of commands to be executed
          items:
            type: string
          title: Commands
          type: array
        cpuLimitMilli:
          description: Specify the cpu limit in milli
          title: CpuLimitMilli
          type: string
        envvars:
          additionalProperties:
            type: string
          description: "Specify the environment variables to be set in key,value pair"
          title: EnvVars
          type: object
        image:
          description: Specify the container image to be used
          title: Image
          type: string
        memoryLimitMB:
          description: Specify the memory limit to be allocated in MB
          title: MemoryLimitMb
          type: string
        successCondition:
          description: Specify the success condition of the container
          title: SuccessCondition
          type: string
        workingDirPath:
          description: Specify the working directory path
          title: WorkingDirPath
          type: string
      type: object
    ContainerRegistry:
      description: Container Registry definition
      example:
        apiVersion: integrations.k8smgmt.io/v3
        kind: ContainerRegistry
        metadata:
          name: some-name
          project: defaultproject
        spec:
          type: KubeSeal
          version: v1
      properties:
        apiVersion:
          default: integrations.k8smgmt.io/v3
          description: API Version of the container registry resource
          title: API Version
          type: string
        kind:
          default: SecretSealer
          description: Kind of the container registry resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/ContainerRegistrySpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: Container Registry
      type: object
    ContainerRegistryList:
      description: container registry list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: integrations.k8smgmt.io/v3
          kind: ContainerRegistry
          metadata:
            name: some-name
            project: defaultproject
          spec:
            type: KubeSeal
            version: v1
        - apiVersion: integrations.k8smgmt.io/v3
          kind: ContainerRegistry
          metadata:
            name: some-name
            project: defaultproject
          spec:
            type: KubeSeal
            version: v1
      properties:
        apiVersion:
          description: API Version of the container registry list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the container registry resources
          items:
            $ref: '#/components/schemas/ContainerRegistry'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the container registry list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: ContainerRegistryList
      type: object
    ContainerRegistrySpec:
      description: Container Registry specification
      example:
        provider: Git
      properties:
        credentials:
          $ref: '#/components/schemas/ContainerRegistrySpec_credentials'
        endpoint:
          description: Container Registry endpoint
          title: Container Registry Endpoint
          type: string
        provider:
          description: container registry provider
          enum:
          - System
          - ECR
          - Custom
          - DockerHub
          - GCR
          - Quay
          - Nexus
          - JFrog
          - Harbor
          - MCR
          - ACR
          title: Container Registry Provider
          type: string
        secret:
          $ref: '#/components/schemas/File'
      title: Container Registry Specification
      type: object
    ContextData:
      properties:
        envs:
          description: Environment variables data
          items:
            $ref: '#/components/schemas/EnvData'
          title: Envs
          type: array
        files:
          description: File path information
          items:
            $ref: '#/components/schemas/File'
          title: Files
          type: array
        variables:
          description: Variables data for config context
          items:
            $ref: '#/components/schemas/Variable'
          title: Variables
          type: array
      type: object
    ControlPlaneStatus:
      properties:
        endpoint:
          $ref: '#/components/schemas/EndpointCp'
        kubeVersion:
          type: string
      type: object
    CostProfile:
      description: CostProfile Profile details
      example:
        name: example-profile
        version: v1
      properties:
        enabled:
          description: flag to specify if cost profile is enabled for blueprint
          title: Enabled
          type: boolean
        name:
          description: name of the cost profile
          title: Name
          type: string
        version:
          description: version of the cost profile
          title: Version
          type: string
      title: CostProfile
      type: object
    CostProfileList:
      description: Profile list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - name: example-profile
          version: v1
        - name: example-profile
          version: v1
      properties:
        apiVersion:
          description: API Version of the cost profile list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the cost profile resources
          items:
            $ref: '#/components/schemas/CostProfile'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the cost profile list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: CostProfileList
      type: object
    CostProfileSpec:
      description: profile specification
      example:
        installationParams:
          aws:
            awsCredentials:
              awsServiceKeyName: ""
              awsServiceKeySecret: ""
              cloudCredentialsName: credsName
              roleArn: ""
            curIntegration:
              athenaBucketName: reserved-pricing
              athenaDatabase: rafay
              athenaRegion: us-west-1
              athenaTable: costmgmt
              awsAccountId: ""
              masterPayerArn: costmgmt
            spotIntegration:
              awsAccountId: ""
              awsSpotDataBucket: spot-pricing
              awsSpotDataPrefix: costmgmt
              awsSpotDataRegion: us-west-1
              spotLabel: type
              spotLabelValue: spot
          azure:
            customPricing:
              azureClientID: ""
              azureClientSecret: ""
              azureSubscriptionID: ""
              azureTenantID: ""
              cloudCredentialsName: credsName
              spotInstance:
                spotLabel: type
                spotLabelValue: spot
            gpuEstimates:
              gpuLabel: accelerator
              gpuLabelValue: nvidia
          other:
            cpu: "0.031611"
            gpu: "0.95"
            ram: "0.004237"
            spotCpu: "0.006655"
            spotRam: "0.000892"
        providerType: other
        sharing:
          enabled: true
          projects:
          - name: some-project
        version: v1
      properties:
        installationParams:
          $ref: '#/components/schemas/InstallationParams'
        providerType:
          description: provider type
          title: provider type
          type: string
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        version:
          description: version of the profile
          title: Version
          type: string
      title: Profile Specification
      type: object
    CreationData:
      properties:
        sourceResourceId:
          description: This is the ARM ID of the source object to be used to create
            the target object.
          title: Source Resource Id
          type: string
      type: object
    Credentials:
      description: Credentials definition
      example:
        metadata:
          name: example-cluster
          annotations:
            key: annotations
          description: description
          project: defaultproject
          labels:
            key: labels
        apiVersion: infra.k8smgmt.io/v3
        kind: Credentials
        spec:
          credentials: null
          provider: aws
          secret:
            name: some-name
            project: defaultproject
          sharing:
            enabled: true
            projects:
            - name: some-project
          type: ClusterProvisioning
      properties:
        apiVersion:
          default: infra.k8smgmt.io/v3
          description: API Version of the Credentials resource
          title: API Version
          type: string
        kind:
          default: Credentials
          description: Kind of the Credentials resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/CredentialsSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: Credentials
      type: object
    CredentialsList:
      description: Credentials list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            name: example-cluster
            annotations:
              key: annotations
            description: description
            project: defaultproject
            labels:
              key: labels
          apiVersion: infra.k8smgmt.io/v3
          kind: Credentials
          spec:
            credentials: null
            provider: aws
            secret:
              name: some-name
              project: defaultproject
            sharing:
              enabled: true
              projects:
              - name: some-project
            type: ClusterProvisioning
        - metadata:
            name: example-cluster
            annotations:
              key: annotations
            description: description
            project: defaultproject
            labels:
              key: labels
          apiVersion: infra.k8smgmt.io/v3
          kind: Credentials
          spec:
            credentials: null
            provider: aws
            secret:
              name: some-name
              project: defaultproject
            sharing:
              enabled: true
              projects:
              - name: some-project
            type: ClusterProvisioning
      properties:
        apiVersion:
          description: API Version of the credentials list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the credentials resources
          items:
            $ref: '#/components/schemas/Credentials'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the credentials list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: CredentialsList
      type: object
    CredentialsSpec:
      example:
        credentials: null
        provider: aws
        secret:
          name: some-name
          project: defaultproject
        sharing:
          enabled: true
          projects:
          - name: some-project
        type: ClusterProvisioning
      properties:
        credentials:
          $ref: '#/components/schemas/CredentialsSpec_credentials'
        provider:
          default: aws
          description: Provider of Credential Access
          enum:
          - aws
          - azure
          - gcp
          - vsphere
          title: Provider
          type: string
        secret:
          $ref: '#/components/schemas/File'
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        type:
          default: ClusterProvisioning
          description: Type of Credentials Access
          enum:
          - ClusterProvisioning
          - DataBackup
          - CostManagement
          title: Type
          type: string
      type: object
    CredentialsSpecAwsAccessKey:
      description: AWS Credentials Access Key definition
      properties:
        accessId:
          title: Access ID
          type: string
        secretKey:
          title: Secret Key
          type: string
        sessionToken:
          title: Session Token
          type: string
        type:
          default: AccessKey
          description: Type of AWS Credentials Access
          enum:
          - Role
          - AccessKey
          title: Type
          type: string
      required:
      - accessId
      - secretKey
      - type
      title: AWS Credentials Access Key
      type: object
    CredentialsSpecAwsRole:
      description: AWS Credentials Role definition
      properties:
        accountId:
          title: Account Id
          type: string
        arn:
          title: Arn
          type: string
        externalId:
          title: External Id
          type: string
        type:
          default: Role
          description: Type of AWS Credentials Access
          enum:
          - Role
          - AccessKey
          title: Type
          type: string
      required:
      - accountId
      - arn
      - externalId
      - type
      title: AWS Credentials Role
      type: object
    CredentialsSpecAzure:
      description: Azure Credentials definition
      properties:
        clientId:
          title: Client ID
          type: string
        clientSecret:
          title: Client Secret
          type: string
        subscriptionId:
          title: Subscription ID
          type: string
        tenantId:
          title: Tenant ID
          type: string
      required:
      - clientId
      - clientSecret
      - subscriptionId
      - tenantId
      title: Azure Credentials
      type: object
    CredentialsSpecGcp:
      description: GCP Credentials definition
      properties:
        file:
          description: Blob content of GCP Credentials Access JSON file
          title: File
          type: string
      required:
      - file
      title: GCP Credentials
      type: object
    CredentialsSpecMinio:
      description: Minio Credentials definition
      properties:
        accessId:
          title: Access ID
          type: string
        secretKey:
          title: Secret Key
          type: string
      required:
      - accessId
      - secretKey
      title: Minio Credentials
      type: object
    CredentialsSpecVSphere:
      description: VSphere Credentials definition
      properties:
        gatewayId:
          title: Gateway ID
          type: string
        password:
          title: Password
          type: string
        username:
          title: Username
          type: string
        vsphereServer:
          title: VSphere Server URI
          type: string
      required:
      - gatewayId
      - password
      - username
      - vsphereServer
      title: VSphere Credentials
      type: object
    CronTriggerConfig:
      description: cron trigger configuration
      example:
        cronExpression: '*/5 * * * *'
        repo:
          git:
            paths:
            - name: some/relative/path
            provider: Github
            repository: some-repo
            revision: master
      properties:
        cronExpression:
          description: cron expression for trigger
          title: Cron Expression
          type: string
        repo:
          $ref: '#/components/schemas/CronTriggerConfig_repo'
      required:
      - cronExpression
      - repo
      title: Cron Triger Configuration
      type: object
    CsiSecretStoreConfig:
      description: Secret Store CSI Driver Customization details
      example:
        enableSecretRotation: v1
        providers:
          aws: "true"
        syncSecrets: "true"
      properties:
        enableSecretRotation:
          type: boolean
        providers:
          $ref: '#/components/schemas/SecretStoreProvider'
        rotationPollInterval:
          type: string
        syncSecrets:
          type: boolean
      title: Secret Store CSI Driver
      type: object
    DaemonSetOverride:
      properties:
        nodeSelectionEnabled:
          type: boolean
        tolerations:
          items:
            $ref: '#/components/schemas/DaemonSetOverride_tolerations_inner'
          type: array
      type: object
    DefaultAddons:
      description: default addon configuration
      example:
        csiSecretStoreConfig:
          enableSecretRotation: v1
          providers:
            aws: "true"
          syncSecrets: "true"
        enableCsiSecretStore: false
        enableIngress: true
        enableLogging: false
        enableMonitoring: false
        enableRookCeph: false
        enableVM: true
      properties:
        csiSecretStoreConfig:
          $ref: '#/components/schemas/CsiSecretStoreConfig'
        enableCsiSecretStore:
          description: enable csi secret store
          title: Enable CSI Secret Store
          type: boolean
        enableIngress:
          description: enable default ingress
          title: Enable Ingress
          type: boolean
        enableLogging:
          description: enable default logging
          title: Enable Logging
          type: boolean
        enableMonitoring:
          description: enable default monitoring
          title: Enable Monitoring
          type: boolean
        enableRookCeph:
          description: enable rook ceph storage
          title: Enable Rook Ceph Storage
          type: boolean
        enableVM:
          description: enable virtual machine workloads
          title: Enable Virtual Machines
          type: boolean
        monitoring:
          $ref: '#/components/schemas/MonitoringConfig'
      title: Default Addons
      type: object
    Defender:
      properties:
        logAnalyticsWorkspaceResourceId:
          description: "Resource ID of the Log Analytics workspace to be associated\
            \ with Microsoft Defender. When Microsoft Defender is enabled, this field\
            \ is required and must be a valid workspace resource ID. When Microsoft\
            \ Defender is disabled, leave the field empty."
          title: Log Analytics Workspace Resource ID
          type: string
        securityMonitoring:
          $ref: '#/components/schemas/Securitymonitoring'
      type: object
    DeployWorkloadConfig:
      description: deploy workload configuration
      example:
        workload: some-workload
      properties:
        useRevisionFromWebhookTriggerEvent:
          description: flag to indicate weather to deploy workload using revision
            recieved from webhook trigger
          title: Use Revision From Webhook Trigger To Deploy
          type: boolean
        workload:
          description: name of the workload
          title: Workload
          type: string
      required:
      - workload
      title: Deploy Workload Configuration
      type: object
    DeployWorkloadTemplateConfig:
      description: deploy workload template configuration
      example:
        namespace: some-namespace
        overrides:
        - paths:
          - name: /path/to/some/file.yaml
          repository: some-repo
          revision: master
        placement:
          labels:
          - key: some-key
          - key: some-key
        workloadTemplate: some-template
      properties:
        namespace:
          description: namespace workload template should be deployed in
          title: Namespace
          type: string
        overrides:
          description: overrides for workload template
          items:
            $ref: '#/components/schemas/OverrideTemplate'
          title: Overrides
          type: array
        placement:
          $ref: '#/components/schemas/PlacementSpec'
        useRevisionFromWebhookTriggerEvent:
          description: flag to indicate weather to deploy workload using revision
            recieved from webhook trigger
          title: Use Revision From Webhook Trigger To Deploy
          type: boolean
        workloadTemplate:
          description: name of workload template
          title: Workload Template
          type: string
      required:
      - namespace
      - overrides
      - placement
      - workloadTemplate
      title: Deploy Workload Template Config
      type: object
    Diskcsidriver:
      properties:
        enabled:
          description: Whether to enable AzureDisk CSI Driver. The default value is
            true.
          title: Enabled
          type: boolean
      type: object
    DriftSpec:
      description: drift reconcillation specification for a resource
      example:
        action: Deny
        enabled: true
      properties:
        action:
          description: flag to specify if sharing is enabled for resource
          enum:
          - Notify
          - Deny
          title: Action
          type: string
        enabled:
          description: flag to specify if drift reconcillation is enabled for resource
          title: Enabled
          type: boolean
      required:
      - enabled
      title: DriftSpec
      type: object
    Effectiveoutboundips:
      properties:
        id:
          description: The fully qualified Azure resource id.
          title: ID
          type: string
      type: object
    EndpointCp:
      properties:
        host:
          type: string
        port:
          type: string
      type: object
    EnvData:
      properties:
        key:
          description: Key of the environment variable to be set
          title: Key
          type: string
        sensitive:
          description: "Determines whether the value is sensitive or not, accordingly\
            \ applies encryption on it"
          title: Sensitive
          type: boolean
        value:
          description: Value of the environment variable to be set
          title: Value
          type: string
      type: object
    Environment:
      description: Configuration context contains environment variables and other
        supporting variables!
      example:
        apiVersion: gitops.k8smgmt.io/v3
        kind: Environment
        metadata:
          name: some-name
          project: defaultproject
        spec:
          resources:
          - kind: 2
            name: resource-one
            type: 2
          template: some-name
      properties:
        apiVersion:
          default: gitops.k8smgmt.io/v3
          description: API Version of the environment resource
          title: API Version
          type: string
        kind:
          default: ConfigContext
          description: Kind of the environment resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/EnvironmentSpec'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: ConfigContext
      type: object
    EnvironmentHooks:
      properties:
        onCompletion:
          description: On completion environment hook
          items:
            $ref: '#/components/schemas/Hook'
          title: On Completion
          type: array
        onFailure:
          description: On failure environment hook
          items:
            $ref: '#/components/schemas/Hook'
          title: On Failure
          type: array
        onInit:
          description: On initialize environment hook
          items:
            $ref: '#/components/schemas/Hook'
          title: On Init
          type: array
        onSuccess:
          description: On success environment hook
          items:
            $ref: '#/components/schemas/Hook'
          title: On Success
          type: array
      type: object
    EnvironmentList:
      description: List of Environments
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: gitops.k8smgmt.io/v3
          kind: Environment
          metadata:
            name: some-name
            project: defaultproject
          spec:
            resources:
            - kind: 2
              name: resource-one
              type: 2
            template: some-name
        - apiVersion: gitops.k8smgmt.io/v3
          kind: Environment
          metadata:
            name: some-name
            project: defaultproject
          spec:
            resources:
            - kind: 2
              name: resource-one
              type: 2
            template: some-name
      properties:
        apiVersion:
          description: API Version of the Environment list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: Environment List
          items:
            $ref: '#/components/schemas/Environment'
          readOnly: true
          title: Environment
          type: array
        kind:
          description: Kind of the Environment list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: EnvironmentList
      type: object
    EnvironmentResource:
      properties:
        dependsOn:
          description: Specify the environment resource reference that it depends
            on
          items:
            $ref: '#/components/schemas/ResourceNameAndVersionRef'
          title: Depends On
          type: array
        kind:
          description: Specify the environment resource kind
          title: Kind
          type: string
        name:
          description: Specify the environment resource name
          title: Name
          type: string
        resourceOptions:
          $ref: '#/components/schemas/EnvironmentResourceOptions'
        type:
          description: Specify the environment resource type
          title: Type
          type: string
      type: object
    EnvironmentResourceOptions:
      properties:
        dedicated:
          description: Specify if the resource is dedicated to workloads/apps
          title: Dedicated
          type: boolean
      type: object
    EnvironmentSpec:
      description: Environment context
      properties:
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        template:
          $ref: '#/components/schemas/ResourceNameAndVersionRef'
        variables:
          description: Variables data for config context
          items:
            $ref: '#/components/schemas/Variable'
          title: Variables
          type: array
      required:
      - template
      title: Environment Specification
      type: object
    EnvironmentTemplate:
      description: "Environment template contains one or more resource templates,\
        \ resources bundled together"
      example:
        apiVersion: gitops.k8smgmt.io/v3
        kind: EnvironmentTemplate
        metadata:
          name: some-name
          project: defaultproject
        spec:
          resources:
          - kind: 2
            name: resource-one
            resource_options:
              dedicated: false
            type: 2
          variables:
          - name: var1
            options:
              description: used for computation
              override:
                restrictedValues:
                - val1
                - val2
                type: allowed
              sensitive: false
            value: val1
            value_type: "4"
          version: 0.1.0
      properties:
        apiVersion:
          default: gitops.k8smgmt.io/v3
          description: API Version of the environment template resource
          title: API Version
          type: string
        kind:
          default: EnvironmentTemplate
          description: Kind of the environment template resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/EnvironmentTemplateSpec'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: EnvironmentTemplate
      type: object
    EnvironmentTemplateList:
      description: List of environment templates
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: gitops.k8smgmt.io/v3
          kind: EnvironmentTemplate
          metadata:
            name: some-name
            project: defaultproject
          spec:
            resources:
            - kind: 2
              name: resource-one
              resource_options:
                dedicated: false
              type: 2
            variables:
            - name: var1
              options:
                description: used for computation
                override:
                  restrictedValues:
                  - val1
                  - val2
                  type: allowed
                sensitive: false
              value: val1
              value_type: "4"
            version: 0.1.0
        - apiVersion: gitops.k8smgmt.io/v3
          kind: EnvironmentTemplate
          metadata:
            name: some-name
            project: defaultproject
          spec:
            resources:
            - kind: 2
              name: resource-one
              resource_options:
                dedicated: false
              type: 2
            variables:
            - name: var1
              options:
                description: used for computation
                override:
                  restrictedValues:
                  - val1
                  - val2
                  type: allowed
                sensitive: false
              value: val1
              value_type: "4"
            version: 0.1.0
      properties:
        apiVersion:
          description: API Version of the environment template list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the environment template resources
          items:
            $ref: '#/components/schemas/EnvironmentTemplate'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the environment template list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: EnvironmentTemplateList
      type: object
    EnvironmentTemplateSpec:
      description: Environment template specification
      example:
        resources:
        - kind: 2
          name: resource-one
          resource_options:
            dedicated: false
          type: 2
        variables:
        - name: var1
          options:
            description: used for computation
            override:
              type: not allowed
            sensitive: false
          value: val1
          value_type: "4"
        version: 0.1.0
      properties:
        agents:
          description: "Environment variables, file data and other variables"
          items:
            $ref: '#/components/schemas/ResourceNameAndVersionRef'
          title: Config Context Data
          type: array
        hooks:
          $ref: '#/components/schemas/EnvironmentHooks'
        resources:
          description: "Environment variables, file data and other variables"
          items:
            $ref: '#/components/schemas/EnvironmentResource'
          title: Config Context Data
          type: array
        sharingOptions:
          $ref: '#/components/schemas/SharingSpec'
        variables:
          description: "Environment variables, file data and other variables"
          items:
            $ref: '#/components/schemas/Variable'
          title: Config Context Data
          type: array
        version:
          description: Environment template version
          title: Version
          type: string
      required:
      - data
      title: Environment Template Specification
      type: object
    ExcludedNamespaces:
      description: namespaces to be excluded from gatekeeper processes
      example:
        namespaces:
        - name: test-namespace-1
        - name: test-namespace-2
        processes:
        - audit
        - sync
      properties:
        namespaces:
          description: List of namespaces to be excluded
          items:
            $ref: '#/components/schemas/ResourceRef'
          title: Namespaces
          type: array
        processes:
          description: List of processes to be excluding namespace from
          enum:
          - audit
          - webhook
          - sync
          - mutation-webhook
          - '*'
          items:
            type: string
          title: Processes
          type: array
      required:
      - namespaces
      - processes
      title: Excluded Namespaces
      type: object
    Extendedlocation:
      properties:
        name:
          description: The name of the extended location.
          title: Name
          type: string
        type:
          description: The type of the extended location.
          title: Type
          type: string
      type: object
    Extra:
      example:
        data:
          fields:
            key: ""
        files:
        - name: some-name
          project: defaultproject
        - name: some-name
          project: defaultproject
      properties:
        data:
          $ref: '#/components/schemas/Extra_data'
        files:
          items:
            $ref: '#/components/schemas/File'
          type: array
      type: object
    ExtraStatus:
      properties:
        vaultIntegration:
          $ref: '#/components/schemas/VaultClusterStatus'
      type: object
    File:
      description: file represents an file (or a directory) on the File System by
        relative path
      example:
        name: some-name
        project: defaultproject
      properties:
        data:
          description: data is the base64 encoded contents of the file
          format: byte
          title: Data
          type: string
        name:
          description: relative path of a artifact
          title: Name
          type: string
        sensitive:
          description: data is the base64 encoded contents of the file if set to true
          title: Sensitive
          type: boolean
      required:
      - name
      title: File
      type: object
    Filecsidriver:
      properties:
        enabled:
          description: Whether to enable AzureFile CSI Driver. The default value is
            true.
          title: Enabled
          type: boolean
      type: object
    GitRepoConfig:
      description: git repo configuration for pipeline trigger
      example:
        paths:
        - name: some/relative/path
        provider: Github
        repository: some-repo
        revision: master
      properties:
        paths:
          description: paths in the git repo to watch for changes
          items:
            $ref: '#/components/schemas/File'
          title: Paths
          type: array
        provider:
          description: provider for the git repo
          enum:
          - Github
          - Gitlab
          title: Provider
          type: string
        repository:
          description: name of the git repository
          title: Repository
          type: string
        revision:
          description: branch or tag in the git repository to watch for changes
          title: Revision
          type: string
      required:
      - paths
      - provider
      - repository
      - revision
      title: Trigger Git Repo Configuration
      type: object
    Gmsaprofile:
      properties:
        dnsServer:
          description: Specifies the DNS server for Windows gMSA. Set it to empty
            if you have configured the DNS server in the vnet which is used to create
            the managed cluster.
          title: DNS Server
          type: string
        enabled:
          description: Specifies whether to enable Windows gMSA in the managed cluster.
          title: Enabled
          type: boolean
        rootDomainName:
          description: "Specifies the root domain name for Windows gMSA. Set it to\
            \ empty if you have configured the DNS server in the vnet which is used\
            \ to create the managed cluster.\t"
          title: Root Domain Name
          type: string
      type: object
    GpuCostProfile:
      description: gpu cost profile params
      example:
        gpuLabel: accelerator
        gpuLabelValue: nvidia
      properties:
        gpuLabel:
          description: 'gpu Lable '
          title: gpu Label
          type: string
        gpuLabelValue:
          description: gpu Label Value
          title: gpu Label Value
          type: string
      title: gpu CostProfile params
      type: object
    HelmInCatalog:
      description: represents Helm chart in a Catalog
      example:
        catalog: some-catalog
        chartName: some-chart
        chartVersion: 1.2.3
      properties:
        catalog:
          description: name of the helm catalog
          title: Catalog
          type: string
        chartName:
          description: name of the chart
          title: Chart Name
          type: string
        chartVersion:
          description: version of the chart
          title: Chart Version
          type: string
        valuesPaths:
          description: relative paths to values files
          items:
            $ref: '#/components/schemas/File'
          title: Values Paths
          type: array
        valuesRef:
          $ref: '#/components/schemas/OverrideRepoReference'
      required:
      - chartName
      - chartVersion
      - repository
      title: Helm in Catalog
      type: object
    HelmInGitRepo:
      description: represents Helm files in a Git repo
      example:
        chartPath:
          name: relative/path/to/some/chart.tgz
        repository: some-repo
        revision: master
      properties:
        chartPath:
          $ref: '#/components/schemas/File'
        repository:
          description: name of the git repository
          title: Repository
          type: string
        revision:
          description: branch or tag in the git repository
          title: Revision
          type: string
        valuesPaths:
          description: relative paths to value file in the git repository
          items:
            $ref: '#/components/schemas/File'
          title: Value Paths
          type: array
        valuesRef:
          $ref: '#/components/schemas/OverrideRepoReference'
      required:
      - chartPath
      - repository
      - revision
      title: Helm in Git Repo Artifact
      type: object
    HelmInHelmRepo:
      description: represents Helm chart in a Helm repo
      example:
        chartName: some-chart
        chartVersion: 1.2.3
        repository: some-repo
      properties:
        chartName:
          description: name of the chart
          title: Chart Name
          type: string
        chartVersion:
          description: version of the chart
          title: Chart Version
          type: string
        repository:
          description: name of the helm repository
          title: Repository
          type: string
        valuesPaths:
          description: relative paths to values files
          items:
            $ref: '#/components/schemas/File'
          title: Values Paths
          type: array
        valuesRef:
          $ref: '#/components/schemas/OverrideRepoReference'
      required:
      - chartName
      - chartVersion
      - repository
      title: Helm in Helm Repo
      type: object
    HelmOptions:
      description: options for deploying Helm artifacts
      example:
        atomic: false
        noHooks: true
        setString:
        - key1=val1
        - key2=val2
        skipCRDs: true
      properties:
        atomic:
          description: deploy Helm artifact with atomic flag
          title: Atomic
          type: boolean
        cleanUpOnFail:
          description: cleanup deployed resources when chart fails to deploy
          title: Cleanup on fail
          type: boolean
        description:
          description: custom description for the release
          title: Description
          type: string
        disableOpenAPIValidation:
          description: disable OpenAPI validation while deploying the chart
          title: Disable OpenAPI Validation
          type: boolean
        force:
          description: deploy Helm artifact with force flag
          title: Force
          type: boolean
        keepHistory:
          description: keep release history after uninstalling
          title: Keep History
          type: boolean
        maxHistory:
          description: limit Helm artifact history
          format: int32
          title: Max History
          type: integer
        noHooks:
          description: deploy Helm artifact without hooks
          title: No Hooks
          type: boolean
        renderSubChartNotes:
          description: render sub chart notes
          title: Render Sub Chart Notes
          type: boolean
        resetValues:
          description: reset existing helm values
          title: Reset Values
          type: boolean
        reuseValues:
          description: reuse existing values
          title: Reuse Values
          type: boolean
        setString:
          description: pass custom helm values as key=value
          items:
            type: string
          title: Set String
          type: array
        skipCRDs:
          description: skip deploying crds
          title: Skip CRDs
          type: boolean
        timeout:
          description: timeout for waiting for the resources to become ready
          title: Timeout
          type: string
        wait:
          description: deploy Helm artifact with wait flag
          title: Wait
          type: boolean
      title: Helm Options
      type: object
    HelmRepoConfig:
      description: helm repo configuration for pipeline trigger
      example:
        chartName: some-chart
        chartVersion: 1.2.3
        provider: Github
      properties:
        chartName:
          description: name of the chart in repo
          title: Chart Name
          type: string
        chartVersion:
          description: version of the chart in repo
          title: Chart Version
          type: string
        repository:
          description: name of the helm repository
          title: Repository
          type: string
      required:
      - chartName
      - chartVersion
      - repository
      title: Trigger Helm Repo Configuration
      type: object
    Hook:
      properties:
        agents:
          description: Specify the resource ref agents
          items:
            $ref: '#/components/schemas/ResourceNameAndVersionRef'
          title: Agents
          type: array
        onFailure:
          description: Specify the on failure action
          title: OnFailure
          type: string
        options:
          $ref: '#/components/schemas/HookOptions'
        retry:
          $ref: '#/components/schemas/RetryOptions'
        timeoutSeconds:
          description: Specify the timeout in seconds
          format: int64
          title: Timeout
          type: integer
        type:
          description: Specify the type of hook
          title: HookType
          type: string
      type: object
    HookOptions:
      properties:
        approval:
          type: object
        container:
          $ref: '#/components/schemas/ContainerOptions'
        http:
          $ref: '#/components/schemas/HttpOptions'
        notification:
          type: object
        script:
          $ref: '#/components/schemas/ShellScriptOptions'
      type: object
    HttpOptions:
      properties:
        body:
          description: Specify the body of http request
          title: Body
          type: string
        endpoint:
          description: Specify the endpoint to be invoked
          title: Endpoint
          type: string
        headers:
          additionalProperties:
            type: string
          description: "Specify the http headers in key,value pair"
          title: Headers
          type: object
        method:
          description: Specify the http method to be used
          title: Method
          type: string
        successCondition:
          description: Specify the success condition of the request
          title: SuccessCondition
          type: string
      type: object
    Httpproxyconfig:
      properties:
        httpProxy:
          description: The HTTP proxy server endpoint to use.
          title: HTTP Proxy
          type: string
        httpsProxy:
          description: The HTTPS proxy server endpoint to use.
          title: HTTPS Proxy
          type: string
        noProxy:
          description: The endpoints that should not go through proxy.
          items:
            type: string
          title: No Proxy
          type: array
        trustedCa:
          description: Alternative CA cert to use for connecting to proxy servers.
          title: Trusted CA
          type: string
      type: object
    Identity:
      properties:
        type:
          description: "For more information see use managed identities in AKS. Valid\
            \ values are SystemAssigned, UserAssigned, None."
          title: Type
          type: string
        userAssignedIdentities:
          additionalProperties:
            type: string
          description: "The keys must be ARM resource IDs in the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}."
          title: User Assigned Identities
          type: object
      type: object
    Identity1:
      properties:
        clientId:
          description: The client ID of the user assigned identity.
          title: Client ID
          type: string
        objectId:
          description: The object ID of the user assigned identity.
          title: Object ID
          type: string
        resourceId:
          description: The resource ID of the user assigned identity.
          title: Resource ID
          type: string
      type: object
    IdentityProfile:
      properties:
        clusterIdentity:
          $ref: '#/components/schemas/ClusterIdentityStatus'
        kubeletIdentity:
          $ref: '#/components/schemas/KubeletIdentityStatus'
      type: object
    ImportedStatus:
      properties:
        bootstrapURL:
          type: string
      type: object
    ImportedV3ConfigObject:
      description: imported cluster specification
      example:
        kubernetesProvider: AKS
        location: aks/<location>
        provisionEnvironment: CLOUD
      properties:
        kubernetesProvider:
          description: kubernetes provider of the cluster
          enum:
          - AKS
          - EKS
          - GKE
          - OPENSHIFT
          - OTHER
          - RKE
          - EKSANYWHERE
          title: Cluster Kubernetes Provider
          type: string
        location:
          description: location of the cluster
          title: Cluster Location
          type: string
        provisionEnvironment:
          description: provisioning environment for the cluster
          enum:
          - CLOUD
          - ONPREM
          title: Cluster Provision Environment
          type: string
      title: V3 Imported Cluster Specifications
      type: object
    InfraProvisioner:
      description: Infrastructure Provisioner definition
      example:
        metadata:
          name: example-cluster
          annotations:
            key: annotations
          description: description
          project: defaultproject
          labels:
            key: labels
        apiVersion: gitops.k8smgmt.io/v3
        kind: Pipeline
        spec:
          folderPath:
            name: some-name
            project: defaultproject
          secret:
            name: some-name
            project: defaultproject
          repository: repository
          type: Terraform
          config: null
          revision: revision
      properties:
        apiVersion:
          default: gitops.k8smgmt.io/v3
          description: API Version of the infrastructure provisioner resource
          title: API Version
          type: string
        kind:
          default: Pipeline
          description: Kind of the infrastructure provisioner resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/InfraProvisionerSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: Infrastructure Provisioner
      type: object
    InfraProvisionerConfig:
      description: infrastructure provisioner configuration
      properties:
        action:
          $ref: '#/components/schemas/InfraProvisionerConfig_action'
        agents:
          description: list of agents to be used for provisioning
          items:
            $ref: '#/components/schemas/AgentMeta'
          title: Agents
          type: array
        persistWorkingDirectory:
          description: flag to indicate if working directory should be persisted
          title: Persist Working Directory
          type: boolean
        provisioner:
          description: name of the infrastructure provisioner
          title: Infrastructure Provisioner
          type: string
        revision:
          description: branch or tag for the git repository used in infrastructure
            provisioner
          title: Revision
          type: string
        type:
          description: type of infraprovisioner
          enum:
          - Terraform
          title: Type
          type: string
        workingDirectory:
          description: working directory for the provisioner
          title: Workload Directory
          type: string
      required:
      - action
      - agents
      - provisioner
      - revision
      - type
      title: Infrastructre Provisioner Configuration
      type: object
    InfraProvisionerList:
      description: InfraProvisioner list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            name: example-cluster
            annotations:
              key: annotations
            description: description
            project: defaultproject
            labels:
              key: labels
          apiVersion: gitops.k8smgmt.io/v3
          kind: Pipeline
          spec:
            folderPath:
              name: some-name
              project: defaultproject
            secret:
              name: some-name
              project: defaultproject
            repository: repository
            type: Terraform
            config: null
            revision: revision
        - metadata:
            name: example-cluster
            annotations:
              key: annotations
            description: description
            project: defaultproject
            labels:
              key: labels
          apiVersion: gitops.k8smgmt.io/v3
          kind: Pipeline
          spec:
            folderPath:
              name: some-name
              project: defaultproject
            secret:
              name: some-name
              project: defaultproject
            repository: repository
            type: Terraform
            config: null
            revision: revision
      properties:
        apiVersion:
          description: API Version of the infrastructure provisioner list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the infrastructure provisioner resources
          items:
            $ref: '#/components/schemas/InfraProvisioner'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the infrastructure provisioner list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: InfraProvisionerList
      type: object
    InfraProvisionerSpec:
      description: infrastructure provisioner configuration
      example:
        folderPath:
          name: some-name
          project: defaultproject
        secret:
          name: some-name
          project: defaultproject
        repository: repository
        type: Terraform
        config: null
        revision: revision
      properties:
        config:
          $ref: '#/components/schemas/InfraProvisionerSpec_config'
        folderPath:
          $ref: '#/components/schemas/File'
        repository:
          description: infrastructure provisioner git repository name
          title: Repository
          type: string
        revision:
          description: infrastructure provisioner git repository branch or tag
          title: Revision
          type: string
        secret:
          $ref: '#/components/schemas/File'
        type:
          description: type of infrastructure provisioner
          enum:
          - Terraform
          title: Infrastructure Provisioner Type
          type: string
      required:
      - config
      - folderPath
      - repository
      - revision
      - type
      title: Infrastructure Provisioner Specification
      type: object
    InlineOverrideTemplate:
      description: inline override template definition
      example:
        inline: "CustomVar: {{ .previousStage.name }}"
      properties:
        inline:
          description: inline override template
          title: Inline Template
          type: string
      required:
      - inline
      title: Inline Override Template
      type: object
    InstallationParams:
      description: Installation parameters for service mesh profile
      example:
        certType: SelfSigned
        enableIngress: true
        enableNamespacesByDefault: false
        resourceQuota:
          cpuLimits: 1000m
          cpuRequests: 500m
          memoryLimits: 4096Mi
          memoryRequests: 2048Mi
      properties:
        certType:
          description: Certificate Management Type
          title: Certificate Management Type
          type: string
        enableIngress:
          description: Enable Ingress
          title: Enable Ingress
          type: boolean
        enableNamespacesByDefault:
          description: Enable Sidecar Injection Globally
          title: Enable Sidecar Injection Globally
          type: boolean
        resourceQuota:
          $ref: '#/components/schemas/MeshResourceQuotas'
      title: Installation Parameters
      type: object
    Irsa:
      properties:
        roleArn:
          type: string
        serviceAccountName:
          type: string
        serviceAccountNamespace:
          type: string
      type: object
    KeyValue:
      description: terraform Key Value Variable
      properties:
        key:
          description: variable key
          title: Variable Key
          type: string
        type:
          description: variable type
          enum:
          - Plain
          - Secret
          title: Variable Type
          type: string
        value:
          description: variable value
          title: Variable Value
          type: string
      required:
      - key
      - type
      - value
      title: Terrafrom Variable
      type: object
    KubeAPIProxyNetwork:
      description: metadata of the kubernetes API proxy network
      example:
        name: some-name
      properties:
        name:
          description: name of the kubernetes proxy network
          title: Name
          type: string
      required:
      - name
      title: Kubenetes API Proxy Network
      type: object
    KubeletIdentityStatus:
      properties:
        principalId:
          type: string
        tenantId:
          type: string
      type: object
    Kubeletconfig:
      properties:
        allowedUnsafeSysctls:
          description: Allowed list of unsafe sysctls or unsafe sysctl patterns (ending
            in *).
          items:
            type: string
          title: Allowed Unsafe Sysctls
          type: array
        containerLogMaxFiles:
          description: The maximum number of container log files that can be present
            for a container. The number must be ≥ 2.
          format: int32
          title: Container Log Max Files
          type: integer
        containerLogMaxSizeMB:
          description: The maximum size (e.g. 10Mi) of container log file before it
            is rotated.
          format: int32
          title: Container Log Max Size MB
          type: integer
        cpuCfsQuota:
          description: The default is true.
          title: CPU Cfs Quota
          type: boolean
        cpuCfsQuotaPeriod:
          description: "The default is 100ms. Valid values are a sequence of decimal\
            \ numbers with an optional fraction and a unit suffix. For example: 300ms,\
            \ 2h45m. Supported units are ns, us, ms, s, m, and h."
          title: CPU Cfs Quota Period
          type: string
        cpuManagerPolicy:
          description: The default is none. See Kubernetes CPU management policies
            for more information. Allowed values are none and static.
          title: CPU Manager Policy
          type: string
        failSwapOn:
          description: If set to true it will make the Kubelet fail to start if swap
            is enabled on the node.
          title: fail Swap On
          type: boolean
        imageGcHighThreshold:
          description: "To disable image garbage collection, set to 100. The default\
            \ is 85%"
          format: int32
          title: Image Gc High Threshold
          type: integer
        imageGcLowThreshold:
          description: This cannot be set higher than imageGcHighThreshold. The default
            is 80%
          format: int32
          title: Image Gc Low Threshold
          type: integer
        podMaxPids:
          description: The maximum number of processes per pod.
          format: int32
          title: Pod Max Pids
          type: integer
        topologyManagerPolicy:
          description: "For more information see Kubernetes Topology Manager. The\
            \ default is none. Allowed values are none, best-effort, restricted, and\
            \ single-numa-node."
          title: Topology Manager Policy
          type: string
      type: object
    LifecycleEventHooks:
      properties:
        after:
          description: Specify all the after lifecycle hook
          items:
            $ref: '#/components/schemas/Hook'
          title: After
          type: array
        before:
          description: Specify all the before lifecycle hook
          items:
            $ref: '#/components/schemas/Hook'
          title: Before
          type: array
      type: object
    Linuxosconfig:
      properties:
        swapFileSizeMB:
          description: The size in MB of a swap file that will be created on each
            node.
          format: int32
          title: Swap File Size MB
          type: integer
        sysctls:
          $ref: '#/components/schemas/Sysctls'
        transparentHugePageDefrag:
          description: "Valid values are always, defer, defer+madvise, madvise and\
            \ never. The default is madvise. For more information see Transparent\
            \ Hugepages."
          title: Transparent Huge Page Defrag
          type: string
        transparentHugePageEnabled:
          description: "Valid values are always, madvise, and never. The default is\
            \ always. For more information see Transparent Hugepages."
          title: Transparent Huge Page Enabled
          type: string
      type: object
    Linuxprofile:
      properties:
        adminUsername:
          description: The administrator username to use for Linux VMs.
          title: adminUsername
          type: string
        ssh:
          $ref: '#/components/schemas/Ssh'
      type: object
    ListMetadata:
      example:
        offset: 1
        count: 0
        limit: 6
      properties:
        count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
        offset:
          format: int64
          type: integer
      type: object
    Loadbalancerprofile:
      properties:
        allocatedOutboundPorts:
          description: The desired number of allocated SNAT ports per VM. Allowed
            values are in the range of 0 to 64000 (inclusive). The default value is
            0 which results in Azure dynamically allocating ports.
          format: int32
          title: allocated Outbound Ports
          type: integer
        effectiveOutboundIPs:
          description: The effective outbound IP resources of the cluster load balancer.
          items:
            $ref: '#/components/schemas/Effectiveoutboundips'
          title: Effective Outbound IPs
          type: array
        enableMultipleStandardLoadBalancers:
          description: Enable multiple standard load balancers per AKS cluster or
            not.
          title: Enable Multiple Standard LoadBalancers
          type: boolean
        idleTimeoutInMinutes:
          description: Desired outbound flow idle timeout in minutes. Allowed values
            are in the range of 4 to 120 (inclusive). The default value is 30 minutes.
          format: int32
          title: Idle Timeout In Minutes
          type: integer
        managedOutboundIPs:
          $ref: '#/components/schemas/Managedoutboundips'
        outboundIPPrefixes:
          $ref: '#/components/schemas/Outboundipprefixes'
        outboundIPs:
          $ref: '#/components/schemas/Outboundips'
      type: object
    ManagedAlertManager:
      description: represents managed alert manager
      example:
        configmap:
          name: file://path/to/some-configmap.yaml
        configuration:
          name: file://path/to/some-configuration.yaml
        secret:
          name: file://path/to/some-secret.yaml
        statefulset:
          name: file://path/to/some-statefulset.yaml
      properties:
        configmap:
          $ref: '#/components/schemas/File'
        configuration:
          $ref: '#/components/schemas/File'
        secret:
          $ref: '#/components/schemas/File'
        statefulset:
          $ref: '#/components/schemas/File'
      required:
      - configmap
      - configuration
      - secret
      - statefulset
      title: Managed Alert Manager
      type: object
    ManagedClusterProperties:
      properties:
        aadProfile:
          $ref: '#/components/schemas/Aadprofile'
        addonProfiles:
          additionalProperties:
            type: string
          description: The profile of managed cluster add-on.
          title: Addon Profiles
          type: object
        apiServerAccessProfile:
          $ref: '#/components/schemas/Apiserveraccessprofile'
        autoScalerProfile:
          $ref: '#/components/schemas/Autoscalerprofile'
        autoUpgradeProfile:
          $ref: '#/components/schemas/Autoupgradeprofile'
        disableLocalAccounts:
          description: "If set to true, getting static credentials will be disabled\
            \ for this cluster. This must only be used on Managed Clusters that are\
            \ AAD enabled. For more details see disable local accounts."
          title: Disable Local Accounts
          type: boolean
        diskEncryptionSetID:
          description: "This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}"
          title: Disk Encryption Set ID
          type: string
        dnsPrefix:
          description: This cannot be updated once the Managed Cluster has been created.
          title: dnsPrefix
          type: string
        enablePodSecurityPolicy:
          description: "(DEPRECATING) Whether to enable Kubernetes pod security policy\
            \ (preview). This feature is set for removal on October 15th, 2020. Learn\
            \ more at aka.ms/aks/azpodpolicy."
          title: enablePodSecurityPolicy
          type: boolean
        enableRBAC:
          description: Whether to enable Kubernetes Role-Based Access Control.
          title: Enable RBAC
          type: boolean
        fqdnSubdomain:
          description: This cannot be updated once the Managed Cluster has been created.
          title: FQDN Subdomain
          type: string
        httpProxyConfig:
          $ref: '#/components/schemas/Httpproxyconfig'
        identityProfile:
          additionalProperties:
            type: string
          description: Identities associated with the cluster.
          title: Identity Profile
          type: object
        kubernetesVersion:
          description: "Both patch version (e.g. 1.20.13) and (e.g. 1.20) are supported.\
            \ When is specified, the latest supported GA patch version is chosen automatically.\
            \ Updating the cluster with the same once it has been created (e.g. 1.14.x\
            \ -> 1.14) will not trigger an upgrade, even if a newer patch version\
            \ is available. When you upgrade a supported AKS cluster, Kubernetes minor\
            \ versions cannot be skipped. All upgrades must be performed sequentially\
            \ by major version number. For example, upgrades between 1.14.x -> 1.15.x\
            \ or 1.15.x -> 1.16.x are allowed, however 1.14.x -> 1.16.x is not allowed.\
            \ See upgrading an AKS cluster for more details."
          title: Kubernetes Version
          type: string
        linuxProfile:
          $ref: '#/components/schemas/Linuxprofile'
        networkProfile:
          $ref: '#/components/schemas/Networkprofile'
        nodeResourceGroup:
          description: The name of the resource group containing agent pool nodes.
          title: Node Resource Group
          type: string
        podIdentityProfile:
          $ref: '#/components/schemas/Podidentityprofile'
        privateLinkResources:
          description: Private link resources associated with the cluster.
          items:
            $ref: '#/components/schemas/Privatelinkresources'
          title: Private Link Resources
          type: array
        publicNetworkAccess:
          description: "Allow or deny public network access for AKS. Valid values\
            \ are Enabled, Disabled."
          title: Public Network Access
          type: string
        securityProfile:
          $ref: '#/components/schemas/Securityprofile'
        servicePrincipalProfile:
          $ref: '#/components/schemas/Serviceprincipalprofile'
        storageProfile:
          $ref: '#/components/schemas/Storageprofile'
        windowsProfile:
          $ref: '#/components/schemas/Windowsprofile'
      type: object
    Managedcluster:
      properties:
        additionalMetadata:
          $ref: '#/components/schemas/Additionalmetadata'
        apiVersion:
          type: string
        extendedLocation:
          $ref: '#/components/schemas/Extendedlocation'
        identity:
          $ref: '#/components/schemas/Identity'
        location:
          description: The geo-location where the resource lives
          title: Location
          type: string
        properties:
          $ref: '#/components/schemas/ManagedClusterProperties'
        sku:
          $ref: '#/components/schemas/Sku'
        tags:
          additionalProperties:
            type: string
          description: Resource tags.
          title: Tags
          type: object
        type:
          default: Microsoft.ContainerService/managedClusters
          description: Azure Resource Type
          title: Type
          type: string
      type: object
    Managedoutboundipprofile:
      properties:
        count:
          description: The desired number of outbound IPs created/managed by Azure.
            Allowed values must be in the range of 1 to 16 (inclusive). The default
            value is 1.
          format: int32
          title: Count
          type: integer
      type: object
    Managedoutboundips:
      properties:
        count:
          description: The desired number of IPv4 outbound IPs created/managed by
            Azure for the cluster load balancer. Allowed values must be in the range
            of 1 to 100 (inclusive). The default value is 1.
          format: int32
          title: Count
          type: integer
        countIPv6:
          description: The desired number of IPv6 outbound IPs created/managed by
            Azure for the cluster load balancer. Allowed values must be in the range
            of 1 to 100 (inclusive). The default value is 0 for single-stack and 1
            for dual-stack.
          format: int32
          title: Count IPv6
          type: integer
      type: object
    MeshProfile:
      description: Profile definition
      example:
        apiVersion: servicemesh.k8smgmt.io/v3
        kind: MeshProfile
        metadata:
          name: some-name
          project: defaultproject
        spec:
          installationParams:
            certType: SelfSigned
            enableIngress: true
            enableNamespacesByDefault: false
            resourceQuota:
              cpuLimits: 1000m
              cpuRequests: 500m
              memoryLimits: 4096Mi
              memoryRequests: 2048Mi
          sharing:
            enabled: true
            projects:
            - name: some-project
          version: v1
      properties:
        apiVersion:
          default: servicemesh.k8smgmt.io/v3
          description: API Version of the profile resource
          title: API Version
          type: string
        kind:
          default: MeshProfile
          description: Kind of the profile resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/MeshProfileSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: MeshProfile
      type: object
    MeshProfileList:
      description: Profile list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: servicemesh.k8smgmt.io/v3
          kind: MeshProfile
          metadata:
            name: some-name
            project: defaultproject
          spec:
            installationParams:
              certType: SelfSigned
              enableIngress: true
              enableNamespacesByDefault: false
              resourceQuota:
                cpuLimits: 1000m
                cpuRequests: 500m
                memoryLimits: 4096Mi
                memoryRequests: 2048Mi
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: v1
        - apiVersion: servicemesh.k8smgmt.io/v3
          kind: MeshProfile
          metadata:
            name: some-name
            project: defaultproject
          spec:
            installationParams:
              certType: SelfSigned
              enableIngress: true
              enableNamespacesByDefault: false
              resourceQuota:
                cpuLimits: 1000m
                cpuRequests: 500m
                memoryLimits: 4096Mi
                memoryRequests: 2048Mi
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: v1
      properties:
        apiVersion:
          description: API Version of the mesh profile list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the mesh profile resources
          items:
            $ref: '#/components/schemas/MeshProfile'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the mesh profile list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: MeshProfileList
      type: object
    MeshProfileSpec:
      description: profile specification
      example:
        installationParams:
          certType: SelfSigned
          enableIngress: true
          enableNamespacesByDefault: false
          resourceQuota:
            cpuLimits: 1000m
            cpuRequests: 500m
            memoryLimits: 4096Mi
            memoryRequests: 2048Mi
        sharing:
          enabled: true
          projects:
          - name: some-project
        version: v1
      properties:
        installationParams:
          $ref: '#/components/schemas/InstallationParams'
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        version:
          description: version of the profile
          title: Version
          type: string
      title: Profile Specification
      type: object
    MeshResourceQuotas:
      description: resource quotas for service mesh control plane
      example:
        cpuLimits: 1000m
        cpuRequests: 500m
        memoryLimits: 4096Mi
        memoryRequests: 2048Mi
      properties:
        cpuLimits:
          description: The maximum amount of CPU (in millicores) allocated to the
            service mesh control plane
          title: CPU Limits
          type: string
        cpuRequests:
          description: The minimum amount of CPU (in millicores) guaranteed to the
            service mesh control plane
          title: CPU Requests
          type: string
        memoryLimits:
          description: The maximum amount of memory (in MiB) allocated to the service
            mesh control plane
          title: Memory Limits
          type: string
        memoryRequests:
          description: The minimum amount of memory (in MiB) allocated to the service
            mesh control plane
          title: Memory Requests
          type: string
      title: Service Mesh Control Plane Resource Quotas
      type: object
    Metadata:
      description: metadata of the resource
      example:
        name: example-cluster
        annotations:
          key: annotations
        description: description
        project: defaultproject
        labels:
          key: labels
      properties:
        annotations:
          additionalProperties:
            type: string
          description: annotations of the resource
          title: Annotations
          type: object
        description:
          description: description of the resource
          title: Description
          type: string
        labels:
          additionalProperties:
            type: string
          description: labels of the resource
          title: Lables
          type: object
        name:
          default: example-cluster
          description: name of the resource
          title: Name
          type: string
        project:
          default: defaultproject
          description: Project of the resource
          title: Project
          type: string
      required:
      - name
      - project
      title: Metadata
      type: object
    MonitoringComponent:
      description: monitoring component configuration
      example:
        discovery:
          labels:
            label-key-1: label-value-1
            label-key-2: label-value-2
          namespace: some-namespace
          resource: some-resource
        enabled: true
      properties:
        discovery:
          $ref: '#/components/schemas/MonitoringDiscoveryConfig'
        enabled:
          description: flag to specify if monitoring component is enabled
          title: Enabled
          type: boolean
      required:
      - enabled
      title: Monitoring Component
      type: object
    MonitoringConfig:
      description: default monitoring configuration
      example:
        helmExporter:
          enabled: false
        kubeStateMetrics:
          discovery:
            labels:
              label-key-1: label-value-1
              label-key-2: label-value-2
            namespace: some-namespace
            resource: some-resource
          enabled: true
        metricsServer:
          discovery:
            labels:
              label-key-1: label-value-1
              label-key-2: label-value-2
            namespace: some-namespace
            resource: some-resource
          enabled: true
        nodeExporter:
          discovery:
            labels:
              label-key-1: label-value-1
              label-key-2: label-value-2
            namespace: some-namespace
            resource: some-resource
          enabled: true
        prometheusAdapter:
          discovery:
            labels:
              label-key-1: label-value-1
              label-key-2: label-value-2
            namespace: some-namespace
            resource: some-resource
          enabled: true
        resources:
          limits:
            cpu: "1.5"
            memory: "128"
      properties:
        helmExporter:
          $ref: '#/components/schemas/MonitoringComponent'
        kubeStateMetrics:
          $ref: '#/components/schemas/MonitoringComponent'
        metricsServer:
          $ref: '#/components/schemas/MonitoringComponent'
        nodeExporter:
          $ref: '#/components/schemas/MonitoringComponent'
        prometheusAdapter:
          $ref: '#/components/schemas/MonitoringComponent'
        resources:
          $ref: '#/components/schemas/ResourceRequirements'
      required:
      - helmExporter
      - kubeStateMetrics
      - metricsServer
      - nodeExporter
      - prometheusAdapter
      title: Monitoring Config
      type: object
    MonitoringDiscoveryConfig:
      description: discovery configuration for the monitoring component
      example:
        labels:
          label-key-1: label-value-1
          label-key-2: label-value-2
        namespace: some-namespace
        resource: some-resource
      properties:
        labels:
          additionalProperties:
            type: string
          description: labels of the monitoring component
          title: Labels
          type: object
        namespace:
          description: namespace of the monitoring component
          title: Namespace
          type: string
        resource:
          description: resource name of the monitoring component
          title: Resource
          type: string
      required:
      - namespace
      - resource
      title: Monitoring Discovery Config
      type: object
    Namespace:
      description: Namespace definition
      example:
        apiVersion: infra.k8smgmt.io/v3
        kind: Namespace
        metadata:
          name: some-name
          project: defaultproject
        spec:
          drift:
            action: Deny
            enabled: true
          namespaceMeshPolicyParams:
            meshEnabled: true
            policies:
            - name: example-policy
              version: v1
          networkPolicyParams:
            networkPolicyEnabled: true
            policies:
            - name: example-policy
              version: v1
          placement:
            labels:
            - key: some-key
            - key: some-key
          psp:
            name: some-psp
      properties:
        apiVersion:
          default: infra.k8smgmt.io/v3
          description: API Version of the namespace resource
          title: API Version
          type: string
        kind:
          default: Namespace
          description: Kind of the namespace resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/NamespaceSpec'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: Namespace
      type: object
    NamespaceLimitRange:
      description: namespace limit range
      example:
        pod:
          max:
            cpu: "4"
            memory: 2Gi
          min:
            cpu: "1"
            memory: 128Mi
      properties:
        container:
          $ref: '#/components/schemas/NamespaceLimitRangeConfig'
        pod:
          $ref: '#/components/schemas/NamespaceLimitRangeConfig'
      title: Namespace Limt Range
      type: object
    NamespaceLimitRangeConfig:
      description: limit range configuration for namesapce
      example:
        default:
          cpu: "2"
          memory: 512Mi
        defaultRequest:
          cpu: "2"
          memory: 512Mi
        max:
          cpu: "4"
          memory: 2Gi
        min:
          cpu: "1"
          memory: 128Mi
        ratio:
          cpu: 0.5
          memory: 0.5
      properties:
        default:
          $ref: '#/components/schemas/ResourceQuantity'
        defaultRequest:
          $ref: '#/components/schemas/ResourceQuantity'
        max:
          $ref: '#/components/schemas/ResourceQuantity'
        min:
          $ref: '#/components/schemas/ResourceQuantity'
        ratio:
          $ref: '#/components/schemas/ResourceRatio'
      title: Namespace Limt Range Configuration
      type: object
    NamespaceList:
      description: Namespace list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: infra.k8smgmt.io/v3
          kind: Namespace
          metadata:
            name: some-name
            project: defaultproject
          spec:
            drift:
              action: Deny
              enabled: true
            namespaceMeshPolicyParams:
              meshEnabled: true
              policies:
              - name: example-policy
                version: v1
            networkPolicyParams:
              networkPolicyEnabled: true
              policies:
              - name: example-policy
                version: v1
            placement:
              labels:
              - key: some-key
              - key: some-key
            psp:
              name: some-psp
        - apiVersion: infra.k8smgmt.io/v3
          kind: Namespace
          metadata:
            name: some-name
            project: defaultproject
          spec:
            drift:
              action: Deny
              enabled: true
            namespaceMeshPolicyParams:
              meshEnabled: true
              policies:
              - name: example-policy
                version: v1
            networkPolicyParams:
              networkPolicyEnabled: true
              policies:
              - name: example-policy
                version: v1
            placement:
              labels:
              - key: some-key
              - key: some-key
            psp:
              name: some-psp
      properties:
        apiVersion:
          description: API Version of the namespace list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the namespace resources
          items:
            $ref: '#/components/schemas/Namespace'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the namespace list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: NamespaceList
      type: object
    NamespaceMeshPolicy:
      description: Namespace policy definition
      example:
        apiVersion: servicemesh.k8smgmt.io/v3
        kind: NamespaceMeshPolicy
        metadata:
          name: some-name
          project: defaultproject
        spec:
          rules:
          - name: test
            version: v1
          sharing:
            enabled: true
            projects:
            - name: some-project
          version: v1
      properties:
        apiVersion:
          default: servicemesh.k8smgmt.io/v3
          description: API Version of the namespace policy resource
          title: API Version
          type: string
        kind:
          default: NamespaceMeshPolicy
          description: Kind of the namespace policy resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/NamespaceMeshPolicySpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: NamespaceMeshPolicy
      type: object
    NamespaceMeshPolicyList:
      description: Namespace policy list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: servicemesh.k8smgmt.io/v3
          kind: NamespaceMeshPolicy
          metadata:
            name: some-name
            project: defaultproject
          spec:
            rules:
            - name: test
              version: v1
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: v1
        - apiVersion: servicemesh.k8smgmt.io/v3
          kind: NamespaceMeshPolicy
          metadata:
            name: some-name
            project: defaultproject
          spec:
            rules:
            - name: test
              version: v1
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: v1
      properties:
        apiVersion:
          description: API Version of the policy list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the namespace policy resources
          items:
            $ref: '#/components/schemas/NamespaceMeshPolicy'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the policy list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: NamespaceMeshPolicyList
      type: object
    NamespaceMeshPolicyParams:
      description: metadata of the namespace mesh policies assigned to namespace
      example:
        meshEnabled: true
        policies:
        - name: example-policy
          version: v1
      properties:
        meshEnabled:
          description: Service Mesh enabled flag
          title: MeshEnabled
          type: boolean
        policies:
          description: name and version of namespace mesh policy
          items:
            $ref: '#/components/schemas/ResourceNameAndVersionRef'
          title: Policies
          type: array
      title: Namespace Mesh Policy Params
      type: object
    NamespaceMeshPolicySpec:
      description: namespace policy specification
      example:
        rules:
        - name: test
          version: v1
        sharing:
          enabled: true
          projects:
          - name: some-project
        version: v1
      properties:
        rules:
          description: Group of namespace mesh rules
          items:
            $ref: '#/components/schemas/ResourceNameAndVersionRef'
          title: Rules
          type: array
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        version:
          description: version of the namespace policy
          title: Version
          type: string
      title: Namespace policy Specification
      type: object
    NamespaceMeshRule:
      description: NamespaceMeshRule  definition
      example:
        apiVersion: servicemesh.k8smgmt.io/v3
        kind: NamespaceMeshRule
        metadata:
          name: some-name
          project: defaultproject
        spec:
          artifact:
            artifact:
              paths:
              - name: relative/path/to/some/file.yaml
              repository: some-repo
              revision: master
            type: Yaml
          sharing:
            enabled: true
            projects:
            - name: some-project
          version: example-version
      properties:
        apiVersion:
          default: servicemesh.k8smgmt.io/v3
          description: API Version of the namespace mesh rule resource
          title: API Version
          type: string
        kind:
          default: NamespaceMeshRule
          description: Kind of the namespace mesh rule resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/NamespaceMeshRuleSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: NamespaceMeshRule
      type: object
    NamespaceMeshRuleList:
      description: NamespaceMeshRule  list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: servicemesh.k8smgmt.io/v3
          kind: NamespaceMeshRule
          metadata:
            name: some-name
            project: defaultproject
          spec:
            artifact:
              artifact:
                paths:
                - name: relative/path/to/some/file.yaml
                repository: some-repo
                revision: master
              type: Yaml
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: example-version
        - apiVersion: servicemesh.k8smgmt.io/v3
          kind: NamespaceMeshRule
          metadata:
            name: some-name
            project: defaultproject
          spec:
            artifact:
              artifact:
                paths:
                - name: relative/path/to/some/file.yaml
                repository: some-repo
                revision: master
              type: Yaml
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: example-version
      properties:
        apiVersion:
          description: API Version of the mesh rule list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the mesh rule resources
          items:
            $ref: '#/components/schemas/NamespaceMeshRule'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the mesh rule list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: NamespaceMeshRuleList
      type: object
    NamespaceMeshRuleSpec:
      description: namespace mesh rule  specification
      example:
        artifact:
          artifact:
            paths:
            - name: relative/path/to/some/file.yaml
            repository: some-repo
            revision: master
          type: Yaml
        sharing:
          enabled: true
          projects:
          - name: some-project
        version: example-version
      properties:
        artifact:
          $ref: '#/components/schemas/ArtifactSpec'
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        version:
          description: version of the namespace mesh rule
          title: Version
          type: string
      title: Namespace Mesh Rule Specification
      type: object
    NamespaceNetworkPolicy:
      description: Namespace policy definition
      example:
        apiVersion: security.k8smgmt.io/v3
        kind: NamespaceNetworkPolicy
        metadata:
          name: some-name
          project: defaultproject
        spec:
          rules:
          - name: test
            version: v1
          sharing:
            enabled: true
            projects:
            - name: some-project
          version: v1
      properties:
        apiVersion:
          default: security.k8smgmt.io/v3
          description: API Version of the namespace policy resource
          title: API Version
          type: string
        kind:
          default: NamespaceNetworkPolicy
          description: Kind of the namespace policy resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/NamespaceNetworkPolicySpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: NamespaceNetworkPolicy
      type: object
    NamespaceNetworkPolicyList:
      description: Namespace policy list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: security.k8smgmt.io/v3
          kind: NamespaceNetworkPolicy
          metadata:
            name: some-name
            project: defaultproject
          spec:
            rules:
            - name: test
              version: v1
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: v1
        - apiVersion: security.k8smgmt.io/v3
          kind: NamespaceNetworkPolicy
          metadata:
            name: some-name
            project: defaultproject
          spec:
            rules:
            - name: test
              version: v1
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: v1
      properties:
        apiVersion:
          description: API Version of the policy list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the namespace policy resources
          items:
            $ref: '#/components/schemas/NamespaceNetworkPolicy'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the policy list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: NamespaceNetworkPolicyList
      type: object
    NamespaceNetworkPolicyRule:
      description: NamespaceNetworkPolicyRule  definition
      example:
        apiVersion: security.k8smgmt.io/v3
        kind: NamespaceNetworkPolicyRule
        metadata:
          name: some-name
          project: defaultproject
        spec:
          artifact:
            paths:
            - name: relative/path/to/some/file.yaml
            repository: some-repo
            revision: master
          sharing:
            enabled: true
            projects:
            - name: some-project
          version: example-version
      properties:
        apiVersion:
          default: security.k8smgmt.io/v3
          description: API Version of the namespace network policy rule resource
          title: API Version
          type: string
        kind:
          default: NamespaceNetworkPolicyRule
          description: Kind of the namespace network policy rule resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/NamespaceNetworkPolicyRuleSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: NamespaceNetworkPolicyRule
      type: object
    NamespaceNetworkPolicyRuleList:
      description: NamespaceNetworkPolicyRule  list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: security.k8smgmt.io/v3
          kind: NamespaceNetworkPolicyRule
          metadata:
            name: some-name
            project: defaultproject
          spec:
            artifact:
              paths:
              - name: relative/path/to/some/file.yaml
              repository: some-repo
              revision: master
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: example-version
        - apiVersion: security.k8smgmt.io/v3
          kind: NamespaceNetworkPolicyRule
          metadata:
            name: some-name
            project: defaultproject
          spec:
            artifact:
              paths:
              - name: relative/path/to/some/file.yaml
              repository: some-repo
              revision: master
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: example-version
      properties:
        apiVersion:
          description: API Version of the network rule list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the network rule resources
          items:
            $ref: '#/components/schemas/NamespaceNetworkPolicyRule'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the network rule list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: NamespaceNetworkPolicyRuleList
      type: object
    NamespaceNetworkPolicyRuleSpec:
      description: namespace network policy rule  specification
      example:
        artifact:
          artifact:
            paths:
            - name: relative/path/to/some/file.yaml
            repository: some-repo
            revision: master
          type: Yaml
        sharing:
          enabled: true
          projects:
          - name: some-project
        version: example-version
      properties:
        artifact:
          $ref: '#/components/schemas/ArtifactSpec'
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        version:
          description: version of the namespace policy rule
          title: Version
          type: string
      title: Namespace Network Policy Rule Specification
      type: object
    NamespaceNetworkPolicySpec:
      description: namespace policy specification
      example:
        rules:
        - name: test
          version: v1
        sharing:
          enabled: true
          projects:
          - name: some-project
        version: v1
      properties:
        rules:
          description: Group of namespace policy rules
          items:
            $ref: '#/components/schemas/ResourceNameAndVersionRef'
          title: Rules
          type: array
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        version:
          description: version of the namespace policy
          title: Version
          type: string
      title: Namespace policy Specification
      type: object
    NamespacePSP:
      description: metadata of the PSP assigned to namespace
      example:
        name: some-name
      properties:
        name:
          description: name of the PSP
          title: Name
          type: string
      required:
      - name
      title: Namespec PSP
      type: object
    NamespaceResourceQuotas:
      description: resource quotas for the namespace
      example:
        limits:
          cpu: "2"
          memory: 512Mi
        requests:
          cpu: "1"
          memory: 128Mi
      properties:
        configMaps:
          description: The maximum number of ConfigMaps that can exist in the project/namespace
          example: "5"
          title: Config Maps
          type: string
        cpuLimits:
          description: The maximum amount of CPU (in millicores) allocated to the
            project/namespace
          title: CPU Limits
          type: string
        cpuRequests:
          description: The minimum amount of CPU (in millicores) guaranteed to the
            project/namespace
          title: CPU Requests
          type: string
        memoryLimits:
          description: The maximum amount of memory (in bytes) allocated to the project/namespace
          title: Memory Limits
          type: string
        memoryRequests:
          description: The minimum amount of memory (in bytes) allocated to the project/namespace
          title: Memory Requests
          type: string
        persistentVolumeClaims:
          description: The maximum number of persistent volume claims that can exist
            in the project/namespace
          example: "10"
          title: Persistent Volume Claims
          type: string
        pods:
          description: "The maximum number of pods that can exist in the project/namespace\
            \ in a non-terminal state(i.e., pods with a state of .status.phase in\
            \ (Failed, Succeeded) equal to true)"
          example: "10"
          title: Pods
          type: string
        replicationControllers:
          description: The maximum number of replication controllers that can exist
            in the project/namespace
          example: "10"
          title: Replication Controllers
          type: string
        secrets:
          description: The maximum number of secrets that can exist in the project/namespace
          example: "10"
          title: Secrets
          type: string
        services:
          description: The maximum number of services that can exist in the project/namespace
          example: "10"
          title: Services
          type: string
        servicesLoadBalancers:
          description: The maximum number of load balancers services that can exist
            in the project/namespace
          example: "10"
          title: Service Load Balancers
          type: string
        servicesNodePorts:
          description: The maximum number of node port services that can exist in
            the project/namespace
          example: "10"
          title: Service Node Ports
          type: string
        storageRequests:
          description: The minimum amount of storage (in gigabytes) guaranteed to
            the project/namespace
          example: "10"
          title: Storage Requests
          type: string
      title: Namespace Resource Quotas
      type: object
    NamespaceSpec:
      description: namespace specification
      example:
        drift:
          action: Deny
          enabled: true
        namespaceMeshPolicyParams:
          meshEnabled: true
          policies:
          - name: example-policy
            version: v1
        networkPolicyParams:
          networkPolicyEnabled: true
          policies:
          - name: example-policy
            version: v1
        placement:
          labels:
          - key: some-key
          - key: some-key
        psp:
          name: some-psp
      properties:
        artifact:
          $ref: '#/components/schemas/NamespaceSpec_artifact'
        drift:
          $ref: '#/components/schemas/DriftSpec'
        limitRange:
          $ref: '#/components/schemas/NamespaceLimitRange'
        namespaceMeshPolicyParams:
          $ref: '#/components/schemas/NamespaceMeshPolicyParams'
        networkPolicyParams:
          $ref: '#/components/schemas/NetworkPolicyParams'
        placement:
          $ref: '#/components/schemas/PlacementSpec'
        psp:
          $ref: '#/components/schemas/NamespacePSP'
        resourceQuotas:
          $ref: '#/components/schemas/NamespaceResourceQuotas'
      required:
      - drift
      - placement
      - psp
      title: Namespace Specification
      type: object
    Natgatewayprofile:
      properties:
        effectiveOutboundIPs:
          description: The effective outbound IP resources of the cluster NAT gateway.
          items:
            $ref: '#/components/schemas/Effectiveoutboundips'
          title: Effective Outbound IPs
          type: array
        idleTimeoutInMinutes:
          description: Desired outbound flow idle timeout in minutes. Allowed values
            are in the range of 4 to 120 (inclusive). The default value is 4 minutes.
          format: int32
          title: Idle Timeout In Minutes
          type: integer
        managedOutboundIPProfile:
          $ref: '#/components/schemas/Managedoutboundipprofile'
      type: object
    NetworkPolicy:
      description: Network policy
      example:
        policies:
        - name: example-policy
          version: v1
        profile:
          name: example-profile
          version: v1
      properties:
        enabled:
          description: flag to specify if network policy is enabled for blueprint
          title: Enabled
          type: boolean
        policies:
          description: name and version of cluster network policy
          items:
            $ref: '#/components/schemas/ResourceNameAndVersionRef'
          title: Policies
          type: array
        profile:
          $ref: '#/components/schemas/ResourceNameAndVersionRef'
      title: Network Policy
      type: object
    NetworkPolicyParams:
      description: metadata of the network policy assigned to namespace
      example:
        networkPolicyEnabled: true
        policies:
        - name: example-policy
          version: v1
      properties:
        networkPolicyEnabled:
          description: Network policy enabled flag
          title: NetworkPolicyEnabled
          type: boolean
        policies:
          description: name and version of namespace network policy
          items:
            $ref: '#/components/schemas/ResourceNameAndVersionRef'
          title: Policies
          type: array
      title: NetworkPolicyParams
      type: object
    NetworkPolicyProfile:
      description: Profile definition
      example:
        apiVersion: security.k8smgmt.io/v3
        kind: NetworkPolicyProfile
        metadata:
          name: some-name
          project: defaultproject
        spec:
          installationParams:
            policyEnforcementMode: default
          sharing:
            enabled: true
            projects:
            - name: some-project
          version: v1
      properties:
        apiVersion:
          default: security.k8smgmt.io/v3
          description: API Version of the profile resource
          title: API Version
          type: string
        kind:
          default: NetworkPolicyProfile
          description: Kind of the profile resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/NetworkPolicyProfileSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: NetworkPolicyProfile
      type: object
    NetworkPolicyProfileList:
      description: Profile list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: security.k8smgmt.io/v3
          kind: NetworkPolicyProfile
          metadata:
            name: some-name
            project: defaultproject
          spec:
            installationParams:
              policyEnforcementMode: default
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: v1
        - apiVersion: security.k8smgmt.io/v3
          kind: NetworkPolicyProfile
          metadata:
            name: some-name
            project: defaultproject
          spec:
            installationParams:
              policyEnforcementMode: default
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: v1
      properties:
        apiVersion:
          description: API Version of the policy list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the profile resources
          items:
            $ref: '#/components/schemas/NetworkPolicyProfile'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the policy list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: NetworkPolicyProfileList
      type: object
    NetworkPolicyProfileSpec:
      description: profile specification
      example:
        installationParams:
          policyEnforcementMode: default
        sharing:
          enabled: true
          projects:
          - name: some-project
        version: v1
      properties:
        installationParams:
          $ref: '#/components/schemas/InstallationParams'
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        version:
          description: version of the profile
          title: Version
          type: string
      title: Profile Specification
      type: object
    Networkprofile:
      properties:
        dnsServiceIP:
          description: An IP address assigned to the Kubernetes DNS service. It must
            be within the Kubernetes service address range specified in serviceCidr.
          title: DNS Service IP
          type: string
        dockerBridgeCidr:
          description: A CIDR notation IP range assigned to the Docker bridge network.
            It must not overlap with any Subnet IP ranges or the Kubernetes service
            address range.
          title: Docker Bridge CIDR
          type: string
        ipFamilies:
          description: "IP families are used to determine single-stack or dual-stack\
            \ clusters. For single-stack, the expected value is IPv4. For dual-stack,\
            \ the expected values are IPv4 and IPv6."
          items:
            type: string
          title: IP Families
          type: array
        loadBalancerProfile:
          $ref: '#/components/schemas/Loadbalancerprofile'
        loadBalancerSku:
          description: "The default is standard. See Azure Load Balancer SKUs for\
            \ more information about the differences between load balancer SKUs. Valid\
            \ values are standard, basic."
          title: Loadbalancer Sku
          type: string
        natGatewayProfile:
          $ref: '#/components/schemas/Natgatewayprofile'
        networkMode:
          description: "This cannot be specified if networkPlugin is anything other\
            \ than azure. Valid values are transparent, bridge."
          title: Network Mode
          type: string
        networkPlugin:
          description: "This cannot be specified if networkPlugin is anything other\
            \ than azure. Valid values are transparent, bridge."
          title: Network Plugin
          type: string
        networkPolicy:
          description: "Network policy used for building the Kubernetes network. Valid\
            \ values are calico, azure."
          title: Network Policy
          type: string
        outboundType:
          description: "This can only be set at cluster creation time and cannot be\
            \ changed later. For more information see egress outbound type. Valid\
            \ values are loadBalancer, userDefinedRouting, managedNATGateway, userAssignedNATGateway."
          title: outboundType
          type: string
        podCidr:
          description: A CIDR notation IP range from which to assign pod IPs when
            kubenet is used.
          title: Pod CIDR
          type: string
        podCidrs:
          description: "One IPv4 CIDR is expected for single-stack networking. Two\
            \ CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack\
            \ networking."
          items:
            type: string
          title: Pod Cidrs
          type: array
        serviceCidr:
          description: A CIDR notation IP range from which to assign service cluster
            IPs. It must not overlap with any Subnet IP ranges.
          title: Service CIDR
          type: string
        serviceCidrs:
          description: "One IPv4 CIDR is expected for single-stack networking. Two\
            \ CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack\
            \ networking. They must not overlap with any Subnet IP ranges."
          items:
            type: string
          title: Service CIDRs
          type: array
      type: object
    NextStage:
      description: next stage
      example:
        name: some-stage
        weight: 100
      properties:
        name:
          description: name of the next stage
          title: Name
          type: string
        weight:
          description: weight of the next stage
          format: int32
          title: Weight
          type: integer
      required:
      - name
      title: Next Stage
      type: object
    NodePoolProperties:
      properties:
        availabilityZones:
          description: The list of Availability zones to use for nodes. This can only
            be specified if the AgentPoolType property is VirtualMachineScaleSets.
          items:
            type: string
          title: Availability Zones
          type: array
        count:
          description: Number of agents (VMs) to host docker containers. Allowed values
            must be in the range of 0 to 1000 (inclusive) for user pools and in the
            range of 1 to 1000 (inclusive) for system pools. The default value is
            1.
          format: int32
          title: Count
          type: integer
        creationData:
          $ref: '#/components/schemas/CreationData'
        enableAutoScaling:
          description: Whether to enable auto-scaler
          title: Enable Auto Scaling
          type: boolean
        enableEncryptionAtHost:
          description: "This is only supported on certain VM sizes and in certain\
            \ Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption"
          title: Enable Encryption At Host
          type: boolean
        enableFIPS:
          description: See Add a FIPS-enabled node pool for more details.
          title: Enable FIPS
          type: boolean
        enableNodePublicIP:
          description: "Some scenarios may require nodes in a node pool to receive\
            \ their own dedicated public IP addresses. A common scenario is for gaming\
            \ workloads, where a console needs to make a direct connection to a cloud\
            \ virtual machine to minimize hops. For more information see assigning\
            \ a public IP per node. The default is false."
          title: Enable Node Public IP
          type: boolean
        enableUltraSSD:
          description: Whether to enable UltraSSD
          title: Enable Ultra SSD
          type: boolean
        gpuInstanceProfile:
          description: "GPUInstanceProfile to be used to specify GPU MIG instance\
            \ profile for supported GPU VM SKU. Valid values are MIG1g, MIG2g, MIG3g,\
            \ MIG4g, MIG7g."
          title: GPU Instance Profile
          type: string
        hostGroupID:
          description: "This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.\
            \ For more information see Azure dedicated hosts."
          title: Host Group ID
          type: string
        kubeletConfig:
          $ref: '#/components/schemas/Kubeletconfig'
        kubeletDiskType:
          description: "Valid values are OS, Temporary."
          title: Kubelet Disk Type
          type: string
        linuxOSConfig:
          $ref: '#/components/schemas/Linuxosconfig'
        maxCount:
          description: The maximum number of nodes for auto-scaling
          format: int32
          title: Max Count
          type: integer
        maxPods:
          description: ' The maximum number of pods that can run on a node.'
          format: int32
          title: Max Pods
          type: integer
        minCount:
          description: The minimum number of nodes for auto-scaling
          format: int32
          title: Min Count
          type: integer
        mode:
          description: "Valid values are System, User."
          title: Mode
          type: string
        nodeLabels:
          additionalProperties:
            type: string
          description: The node labels to be persisted across all nodes in agent pool.
          title: Node Labels
          type: object
        nodePublicIPPrefixID:
          description: "This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}"
          title: Node Public IP Prefix ID
          type: string
        nodeTaints:
          description: "The taints added to new nodes during node pool create and\
            \ scale. For example, key=value:NoSchedule."
          items:
            type: string
          title: Node Taints
          type: array
        orchestratorVersion:
          description: "Both patch version (e.g. 1.20.13) and (e.g. 1.20) are supported.\
            \ When is specified, the latest supported GA patch version is chosen automatically.\
            \ Updating the cluster with the same once it has been created (e.g. 1.14.x\
            \ -> 1.14) will not trigger an upgrade, even if a newer patch version\
            \ is available. As a best practice, you should upgrade all node pools\
            \ in an AKS cluster to the same Kubernetes version. The node pool version\
            \ must have the same major version as the control plane. The node pool\
            \ minor version must be within two minor versions of the control plane\
            \ version. The node pool version cannot be greater than the control plane\
            \ version. For more information see upgrading a node pool."
          title: Orchestrator Version
          type: string
        osDiskSizeGB:
          description: "OS Disk Size in GB to be used to specify the disk size for\
            \ every machine in the master/agent pool. If you specify 0, it will apply\
            \ the default osDisk size according to the vmSize specified."
          format: int32
          title: OS Disk Size GB
          type: integer
        osDiskType:
          description: "Valid values are Managed, Ephemeral."
          title: OS Disk Type
          type: string
        osSKU:
          description: "Valid values are Ubuntu, CBLMariner, Windows2019, Windows2022."
          title: OS SKU
          type: string
        osType:
          description: "Valid values are Linux, Windows."
          title: OS Type
          type: string
        podSubnetID:
          description: "If omitted, pod IPs are statically assigned on the node subnet\
            \ (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}"
          title: POD Subnet ID
          type: string
        powerState:
          $ref: '#/components/schemas/Powerstate'
        proximityPlacementGroupID:
          description: The ID for Proximity Placement Group.
          title: Proximity Placement GroupID
          type: string
        scaleDownMode:
          description: "This also effects the cluster autoscaler behavior. If not\
            \ specified, it defaults to Delete. Valid values are Delete, Deallocate."
          title: Scale Down Mode
          type: string
        scaleSetEvictionPolicy:
          description: "This cannot be specified unless the scaleSetPriority is Spot.\
            \ If not specified, the default is Delete. Valid values are Delete, Deallocate."
          title: Scale Set Eviction Policy
          type: string
        scaleSetPriority:
          description: "The Virtual Machine Scale Set priority. If not specified,\
            \ the default is Regular. Valid values are Spot, Regular."
          title: Scale Set Priority
          type: string
        spotMaxPrice:
          description: "Possible values are any decimal value greater than zero or\
            \ -1 which indicates the willingness to pay any on-demand price. For more\
            \ details on spot pricing, see spot VMs pricing"
          format: int32
          title: Spot Max Price
          type: integer
        tags:
          additionalProperties:
            type: string
          description: The tags to be persisted on the agent pool virtual machine
            scale set.
          title: Tags
          type: object
        type:
          description: "Valid values are VirtualMachineScaleSets, AvailabilitySet."
          title: Type
          type: string
        upgradeSettings:
          $ref: '#/components/schemas/Upgradesettings'
        vmSize:
          description: "VM size availability varies by region. If a node contains\
            \ insufficient compute resources (memory, cpu, etc) pods might fail to\
            \ run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions"
          title: VM Size
          type: string
        vnetSubnetID:
          description: "If this is not specified, a VNET and subnet will be generated\
            \ and used. If no podSubnetID is specified, this applies to nodes and\
            \ pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}"
          title: VNET Subnet ID
          type: string
        workloadRuntime:
          description: "Valid values are OCIContainer, WasmWasi."
          title: Workload Runtime
          type: string
      type: object
    Nodepool:
      properties:
        apiVersion:
          description: Azure Api Version
          title: Api Version
          type: string
        location:
          description: The geo-location where the resource lives
          title: Location
          type: string
        name:
          description: The name of the agent pool.
          title: Name
          type: string
        properties:
          $ref: '#/components/schemas/NodePoolProperties'
        type:
          default: Microsoft.ContainerService/managedClusters/agentPools
          description: Nodepool azure resource type
          title: Type
          type: string
      type: object
    NodepoolStatus:
      properties:
        createdAt:
          $ref: '#/components/schemas/StatusTime'
        id:
          type: string
        kubeVersion:
          type: string
        name:
          type: string
        nodeImageVersion:
          type: string
        provisionStatus:
          type: string
      type: object
    NotificationOptions:
      type: object
    NsConfig:
      description: Namespace Config details
      example:
        denyOutOfBandCreation: "true"
        enableSync: "true"
      properties:
        enableSync:
          description: flag to enable namespace sync
          title: EnableSync
          type: boolean
      title: Namespace Config
      type: object
    OPAConstraint:
      description: OPAConstraint  definition
      example:
        apiVersion: opa.k8smgmt.io/v3
        kind: OPAConstraint
        metadata:
          name: some-name
          project: defaultproject
        spec:
          artifact:
            paths:
            - name: relative/path/to/some/file.yaml
            repository: some-repo
            revision: master
          templateName: opa-constraint-template-1
          version: v1
      properties:
        apiVersion:
          default: opa.k8smgmt.io/v3
          description: API Version of the constraint  resource
          title: API Version
          type: string
        kind:
          default: OPAConstraint
          description: Kind of the constraint  resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/OPAConstraintSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: OPAConstraint
      type: object
    OPAConstraintList:
      description: OPAConstraint  list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: opa.k8smgmt.io/v3
          kind: OPAConstraint
          metadata:
            name: some-name
            project: defaultproject
          spec:
            artifact:
              paths:
              - name: relative/path/to/some/file.yaml
              repository: some-repo
              revision: master
            templateName: opa-constraint-template-1
            version: v1
        - apiVersion: opa.k8smgmt.io/v3
          kind: OPAConstraint
          metadata:
            name: some-name
            project: defaultproject
          spec:
            artifact:
              paths:
              - name: relative/path/to/some/file.yaml
              repository: some-repo
              revision: master
            templateName: opa-constraint-template-1
            version: v1
      properties:
        apiVersion:
          description: API Version of the constraint list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the constraint resources
          items:
            $ref: '#/components/schemas/OPAConstraint'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the constraint list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: OPAConstraintList
      type: object
    OPAConstraintSpec:
      description: opa constraint specification
      example:
        artifact:
          artifact:
            paths:
            - name: relative/path/to/some/file.yaml
            repository: some-repo
            revision: master
          type: Yaml
        templateName: opa-constraint-template-1
        version: v1
      properties:
        artifact:
          $ref: '#/components/schemas/ArtifactSpec'
        published:
          description: publish status of the constraint
          title: Publish
          type: boolean
        templateName:
          description: Name of the opa constraint template
          title: OPA Constraint Template Name
          type: string
        version:
          description: version of the constraint
          title: Version
          type: string
      title: OPA Constraint Specification
      type: object
    OPAConstraintTemplate:
      description: Constraint template definition
      example:
        apiVersion: opa.k8smgmt.io/v3
        kind: OPAConstraintTemplate
        metadata:
          name: some-name
          project: defaultproject
        spec:
          artifact:
            paths:
            - name: relative/path/to/some/file.yaml
            repository: some-repo
            revision: master
      properties:
        apiVersion:
          default: opa.k8smgmt.io/v3
          description: API Version of the constraint template resource
          title: API Version
          type: string
        kind:
          default: OPAConstraintTemplate
          description: Kind of the constraint template resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/OPAConstraintTemplateSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: OPAConstraintTemplate
      type: object
    OPAConstraintTemplateList:
      description: Constraint Template list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: opa.k8smgmt.io/v3
          kind: OPAConstraintTemplate
          metadata:
            name: some-name
            project: defaultproject
          spec:
            artifact:
              paths:
              - name: relative/path/to/some/file.yaml
              repository: some-repo
              revision: master
        - apiVersion: opa.k8smgmt.io/v3
          kind: OPAConstraintTemplate
          metadata:
            name: some-name
            project: defaultproject
          spec:
            artifact:
              paths:
              - name: relative/path/to/some/file.yaml
              repository: some-repo
              revision: master
      properties:
        apiVersion:
          description: API Version of the constraint template list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the constraint template resources
          items:
            $ref: '#/components/schemas/OPAConstraintTemplate'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the constraint template list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: OPAConstraintTemplateList
      type: object
    OPAConstraintTemplateSpec:
      description: constraint template specification
      example:
        artifact:
          paths:
          - name: relative/path/to/some/file.yaml
          repository: some-repo
          revision: master
        type: Yaml
      properties:
        artifact:
          $ref: '#/components/schemas/ArtifactSpec'
      title: OPAConstraint Template Specification
      type: object
    OPAPolicy:
      description: Policy definition
      example:
        apiVersion: opa.k8smgmt.io/v3
        kind: OPAPolicy
        metadata:
          name: some-name
          project: defaultproject
        spec:
          constraintList:
          - name: test-constraint1
          - name: test-constraint2
          sharing:
            enabled: true
            projects:
            - name: some-project
          version: v1
      properties:
        apiVersion:
          default: opa.k8smgmt.io/v3
          description: API Version of the policy resource
          title: API Version
          type: string
        kind:
          default: OPAPolicy
          description: Kind of the policy resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/OPAPolicySpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: OPAPolicy
      type: object
    OPAPolicyConstraint:
      description: K8s objects to be synced to gatekeeper
      example:
        name: ""
        version: v1
      properties:
        name:
          description: Name of constraint object
          title: Name
          type: string
        version:
          description: version of constraint object
          title: Version
          type: string
      title: OPA POlicy Constraint
      type: object
    OPAPolicyList:
      description: Policy list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: opa.k8smgmt.io/v3
          kind: OPAPolicy
          metadata:
            name: some-name
            project: defaultproject
          spec:
            constraintList:
            - name: test-constraint1
            - name: test-constraint2
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: v1
        - apiVersion: opa.k8smgmt.io/v3
          kind: OPAPolicy
          metadata:
            name: some-name
            project: defaultproject
          spec:
            constraintList:
            - name: test-constraint1
            - name: test-constraint2
            sharing:
              enabled: true
              projects:
              - name: some-project
            version: v1
      properties:
        apiVersion:
          description: API Version of the policy list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the policy resources
          items:
            $ref: '#/components/schemas/OPAPolicy'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the policy list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: OPAPolicyList
      type: object
    OPAPolicySpec:
      description: policy specification
      example:
        constraintList:
        - name: test-constraint1
          version: v1
        - name: test-constraint2
        sharing:
          enabled: true
          projects:
          - name: some-project
        version: v1
      properties:
        constraintList:
          description: version of the policy
          items:
            $ref: '#/components/schemas/OPAPolicyConstraint'
          title: Version
          type: array
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        version:
          description: version of the policy
          title: Version
          type: string
      title: Policy Specification
      type: object
    OPAProfile:
      description: OPAProfile definition
      example:
        apiVersion: opa.k8smgmt.io/v3
        kind: OPAProfile
        metadata:
          name: some-name
          project: defaultproject
        spec:
          excludedNamespaces:
          - namespaces:
            - name: test-namespace-1
            - name: test-namespace-2
            processes:
            - audit
            - sync
          installationParams:
            auditFromCache: false
            auditInterval: 60
            auditMatchKindOnly: false
            constraintViolationsLimit: 20
            enableDeleteOperations: false
          opaVersion: 3.7.1
          sharing:
            enabled: true
            projects:
            - name: some-project
          syncObjects:
          - group: ""
            kind: Namespace
            version: v1
          version: v1
      properties:
        apiVersion:
          default: opa.k8smgmt.io/v3
          description: API Version of the profile resource
          title: API Version
          type: string
        kind:
          default: OPAProfile
          description: Kind of the profile resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/OPAProfileSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: OPAProfile
      type: object
    OPAProfileList:
      description: OPAProfile  list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: opa.k8smgmt.io/v3
          kind: OPAProfile
          metadata:
            name: some-name
            project: defaultproject
          spec:
            excludedNamespaces:
            - namespaces:
              - name: test-namespace-1
              - name: test-namespace-2
              processes:
              - audit
              - sync
            installationParams:
              auditFromCache: false
              auditInterval: 60
              auditMatchKindOnly: false
              constraintViolationsLimit: 20
              enableDeleteOperations: false
            opaVersion: 3.7.1
            sharing:
              enabled: true
              projects:
              - name: some-project
            syncObjects:
            - group: ""
              kind: Namespace
              version: v1
            version: v1
        - apiVersion: opa.k8smgmt.io/v3
          kind: OPAProfile
          metadata:
            name: some-name
            project: defaultproject
          spec:
            excludedNamespaces:
            - namespaces:
              - name: test-namespace-1
              - name: test-namespace-2
              processes:
              - audit
              - sync
            installationParams:
              auditFromCache: false
              auditInterval: 60
              auditMatchKindOnly: false
              constraintViolationsLimit: 20
              enableDeleteOperations: false
            opaVersion: 3.7.1
            sharing:
              enabled: true
              projects:
              - name: some-project
            syncObjects:
            - group: ""
              kind: Namespace
              version: v1
            version: v1
      properties:
        apiVersion:
          description: API Version of the OPAProfile list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the OPAProfile resources
          items:
            $ref: '#/components/schemas/OPAProfile'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the OPAProfile list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: OPAProfileList
      type: object
    OPAProfileSpec:
      description: profile specification
      example:
        excludedNamespaces:
        - namespaces:
          - name: test-namespace-1
          - name: test-namespace-2
          processes:
          - audit
          - sync
        installationParams:
          auditFromCache: false
          auditInterval: 60
          auditMatchKindOnly: false
          constraintViolationsLimit: 20
          enableDeleteOperations: false
        opaVersion: 3.7.1
        sharing:
          enabled: true
          projects:
          - name: some-project
        syncObjects:
        - group: ""
          kind: Namespace
          version: v1
        version: v1
      properties:
        excludedNamespaces:
          description: list of namespaces excluded from gatekeeper processing
          items:
            $ref: '#/components/schemas/ExcludedNamespaces'
          title: Excluded Namespaces
          type: array
        installationParams:
          $ref: '#/components/schemas/InstallationParams'
        opaVersion:
          description: version of the OPA
          title: OPAVersion
          type: string
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        syncObjects:
          description: list of k8s objects to be synced
          items:
            $ref: '#/components/schemas/SyncObject'
          title: Sync Object
          type: array
        version:
          description: version of the profile
          title: Version
          type: string
      title: Profile Specification
      type: object
    Organization:
      example:
        metadata:
          name: example-cluster
          annotations:
            key: annotations
          description: description
          project: defaultproject
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          country: country
          city: city
          active: true
          isPrivate: true
          type: type
          zipcode: zipcode
          approved: true
          phone: phone
          areClustersShared: true
          addressLine1: addressLine1
          addressLine2: addressLine2
          billingAddress: billingAddress
          isTotpEnabled: true
          state: state
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/OrganizationSpec'
      type: object
    OrganizationList:
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            name: example-cluster
            annotations:
              key: annotations
            description: description
            project: defaultproject
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            country: country
            city: city
            active: true
            isPrivate: true
            type: type
            zipcode: zipcode
            approved: true
            phone: phone
            areClustersShared: true
            addressLine1: addressLine1
            addressLine2: addressLine2
            billingAddress: billingAddress
            isTotpEnabled: true
            state: state
        - metadata:
            name: example-cluster
            annotations:
              key: annotations
            description: description
            project: defaultproject
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            country: country
            city: city
            active: true
            isPrivate: true
            type: type
            zipcode: zipcode
            approved: true
            phone: phone
            areClustersShared: true
            addressLine1: addressLine1
            addressLine2: addressLine2
            billingAddress: billingAddress
            isTotpEnabled: true
            state: state
      properties:
        apiVersion:
          type: string
        items:
          items:
            $ref: '#/components/schemas/Organization'
          type: array
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      type: object
    OrganizationSpec:
      example:
        country: country
        city: city
        active: true
        isPrivate: true
        type: type
        zipcode: zipcode
        approved: true
        phone: phone
        areClustersShared: true
        addressLine1: addressLine1
        addressLine2: addressLine2
        billingAddress: billingAddress
        isTotpEnabled: true
        state: state
      properties:
        active:
          type: boolean
        addressLine1:
          type: string
        addressLine2:
          type: string
        approved:
          type: boolean
        areClustersShared:
          type: boolean
        billingAddress:
          type: string
        city:
          type: string
        country:
          type: string
        isPrivate:
          type: boolean
        isTotpEnabled:
          type: boolean
        phone:
          type: string
        state:
          type: string
        type:
          type: string
        zipcode:
          type: string
      type: object
    OtherCostProfile:
      description: Other provider custom cost profile params
      example:
        cpu: "0.031611"
        gpu: "0.95"
        ram: "0.004237"
        spotCpu: "0.006655"
        spotRam: "0.000892"
      properties:
        cpu:
          description: 'The cost of cpu per hour '
          title: cpu Hourly Price
          type: string
        gpu:
          description: 'The cost of gpu per hour '
          title: gpu Hourly Price
          type: string
        memory:
          description: 'The cost of memory per hour '
          title: memory Hourly Price
          type: string
      title: Other provider CostProfile params
      type: object
    Outboundipprefixes:
      properties:
        publicIPPrefixes:
          description: A list of public IP prefix resources.
          items:
            $ref: '#/components/schemas/Publicipprefixes'
          title: Public Ip Prefixes
          type: array
      type: object
    Outboundips:
      properties:
        publicIPs:
          description: A list of public IP resources.
          items:
            $ref: '#/components/schemas/Publicips'
          title: Public IPs
          type: array
      type: object
    Override:
      description: Override definition
      example:
        apiVersion: apps.k8smgmt.io/v3
        kind: Override
        metadata:
          labels:
            rafay.dev/overrideScope: clusterLabels
            rafay.dev/overrideType: valuesFile
          name: some-name
          project: some-name
        spec:
          placement:
            some-name: some-name
          resource:
            selector:
              name: some-name
            type: Addon
          type: Helm
          valuesPath:
            name: file://artifacts/test/test.yaml
      properties:
        apiVersion:
          default: apps.k8smgmt.io/v3
          description: API Version of the override resource
          title: API Version
          type: string
        kind:
          default: Workload
          description: Kind of the override resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/OverrideSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: Override
      type: object
    OverrideList:
      description: Workload list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apps.k8smgmt.io/v3
        kind: Workload
        items:
        - apiVersion: apps.k8smgmt.io/v3
          kind: Override
          metadata:
            labels:
              rafay.dev/overrideScope: clusterLabels
              rafay.dev/overrideType: valuesFile
            name: some-name
            project: some-name
          spec:
            placement:
              some-name: some-name
            resource:
              selector:
                name: some-name
              type: Addon
            type: Helm
            valuesPath:
              name: file://artifacts/test/test.yaml
        - apiVersion: apps.k8smgmt.io/v3
          kind: Override
          metadata:
            labels:
              rafay.dev/overrideScope: clusterLabels
              rafay.dev/overrideType: valuesFile
            name: some-name
            project: some-name
          spec:
            placement:
              some-name: some-name
            resource:
              selector:
                name: some-name
              type: Addon
            type: Helm
            valuesPath:
              name: file://artifacts/test/test.yaml
      properties:
        apiVersion:
          default: apps.k8smgmt.io/v3
          description: API Version of the override list resource
          title: API Version
          type: string
        items:
          description: List of the override resources
          items:
            $ref: '#/components/schemas/Override'
          readOnly: true
          title: Items
          type: array
        kind:
          default: Workload
          description: Kind of the override list resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: WorkloadList
      type: object
    OverrideRepoReference:
      description: represents Helm files in a Helm repo override reference
      example:
        repository: abc-repo
        revision: master
        valuesPath:
          name: relative-path/to/some/values.yaml
      properties:
        repository:
          description: name of the git repository
          title: Repository
          type: string
        revision:
          description: branch or tag in the git repository
          title: Revision
          type: string
        valuesPaths:
          description: relative path to value file in the git repository
          items:
            $ref: '#/components/schemas/File'
          title: Values Path
          type: array
      required:
      - repository
      - revision
      - valuesPath
      title: Helm in Helm Repo override Artifact
      type: object
    OverrideResource:
      description: resource this override is applicable to
      example:
        resource:
          selector:
            key: some-key
          type: Addon
      properties:
        selector:
          $ref: '#/components/schemas/OverrideResourceSelector'
        type:
          description: type of the resource
          enum:
          - Worload
          - Addon
          title: Type
          type: string
      required:
      - selector
      - type
      title: Override Resource
      type: object
    OverrideResourceSelector:
      description: override resource selector
      example:
        name: some-name
      properties:
        labels:
          additionalProperties:
            type: string
          description: map of key value labels
          title: Labels
          type: object
        name:
          description: select resource by name
          title: Name
          type: string
        selector:
          description: kubernetes style resource selector
          title: Selector
          type: string
      title: Override Resource Selector
      type: object
    OverrideSpec:
      description: workload specification
      example:
        spec:
          placement:
            key: some-key
          resource:
            selector:
              key: some-key
            type: Addon/Workload
          type: Helm
          valuespath:
            action: Deny
      properties:
        placement:
          $ref: '#/components/schemas/PlacementSpec'
        repo:
          $ref: '#/components/schemas/RepoOverride'
        resource:
          $ref: '#/components/schemas/OverrideResource'
        type:
          description: 'Override Type '
          title: Type of the override
          type: string
        valuesPath:
          $ref: '#/components/schemas/File'
      title: Override Specification
      type: object
    OverrideTemplate:
      description: repo based override template definition
      example:
        paths:
        - name: /path/to/some/file.yaml
        repository: some-repo
        revision: master
      properties:
        template:
          $ref: '#/components/schemas/OverrideTemplate_template'
        type:
          description: type of override template
          enum:
          - HelmValues
          - HelmSetString
          title: Override Type
          type: string
        weight:
          description: "weight of the override, overrides are applied low to high\
            \ weight"
          enum:
          - null
          - null
          format: int32
          title: Override Weight
          type: integer
      required:
      - paths
      - repository
      - revision
      title: Override Template
      type: object
    Partner:
      example:
        metadata:
          name: example-cluster
          annotations:
            key: annotations
          description: description
          project: defaultproject
          labels:
            key: labels
        apiVersion: apiVersion
        kind: kind
        spec:
          helpdeskEmail: helpdeskEmail
          settings:
            fields:
              key: ""
          logoLink: logoLink
          opsHost: opsHost
          domain: domain
          favIconLink: favIconLink
          tosLink: tosLink
          host: host
          isTOTPEnabled: true
          supportTeamName: supportTeamName
          notificationEmail: notificationEmail
          productName: productName
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/PartnerSpec'
      type: object
    PartnerList:
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            name: example-cluster
            annotations:
              key: annotations
            description: description
            project: defaultproject
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            helpdeskEmail: helpdeskEmail
            settings:
              fields:
                key: ""
            logoLink: logoLink
            opsHost: opsHost
            domain: domain
            favIconLink: favIconLink
            tosLink: tosLink
            host: host
            isTOTPEnabled: true
            supportTeamName: supportTeamName
            notificationEmail: notificationEmail
            productName: productName
        - metadata:
            name: example-cluster
            annotations:
              key: annotations
            description: description
            project: defaultproject
            labels:
              key: labels
          apiVersion: apiVersion
          kind: kind
          spec:
            helpdeskEmail: helpdeskEmail
            settings:
              fields:
                key: ""
            logoLink: logoLink
            opsHost: opsHost
            domain: domain
            favIconLink: favIconLink
            tosLink: tosLink
            host: host
            isTOTPEnabled: true
            supportTeamName: supportTeamName
            notificationEmail: notificationEmail
            productName: productName
      properties:
        apiVersion:
          type: string
        items:
          items:
            $ref: '#/components/schemas/Partner'
          type: array
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      type: object
    PartnerSpec:
      example:
        helpdeskEmail: helpdeskEmail
        settings:
          fields:
            key: ""
        logoLink: logoLink
        opsHost: opsHost
        domain: domain
        favIconLink: favIconLink
        tosLink: tosLink
        host: host
        isTOTPEnabled: true
        supportTeamName: supportTeamName
        notificationEmail: notificationEmail
        productName: productName
      properties:
        domain:
          type: string
        favIconLink:
          type: string
        helpdeskEmail:
          type: string
        host:
          type: string
        isTOTPEnabled:
          type: boolean
        logoLink:
          type: string
        notificationEmail:
          type: string
        opsHost:
          type: string
        productName:
          type: string
        settings:
          $ref: '#/components/schemas/Extra_data'
        supportTeamName:
          type: string
        tosLink:
          type: string
      type: object
    Pipeline:
      description: Pipeline definition
      example:
        apiVersion: gitops.k8smgmt.io/v3
        kind: Pipeline
        metadata:
          name: some-name
          project: defaultproject
        spec:
          stages:
          - config:
              approvers:
              - ssoUser: true
                userName: some-user@test.com
              timeout: 120s
              type: Email
            name: approval-stage
            next:
            - name: deploy-stage
              weight: 100
            type: Approval
          - config:
              workload: some-workload
            name: deploy-stage
            type: DeployWorkload
          triggers:
          - config:
              cron:
                cronExpression: '*/5 * * * *'
                repo:
                  git:
                    paths:
                    - name: some/relative/path
                    provider: Github
                    repository: some-repo
                    revision: master
            name: some-trigger
            type: Cron
          variables:
          - name: some-variable
            type: String
            value: some-value
      properties:
        apiVersion:
          default: gitops.k8smgmt.io/v3
          description: API Version of the pipeline resource
          title: API Version
          type: string
        kind:
          default: Pipeline
          description: Kind of the pipeline resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/PipelineSpec'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: Pipeline
      type: object
    PipelineList:
      description: Pipeline list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: gitops.k8smgmt.io/v3
          kind: Pipeline
          metadata:
            name: some-name
            project: defaultproject
          spec:
            stages:
            - config:
                approvers:
                - ssoUser: true
                  userName: some-user@test.com
                timeout: 120s
                type: Email
              name: approval-stage
              next:
              - name: deploy-stage
                weight: 100
              type: Approval
            - config:
                workload: some-workload
              name: deploy-stage
              type: DeployWorkload
            triggers:
            - config:
                cron:
                  cronExpression: '*/5 * * * *'
                  repo:
                    git:
                      paths:
                      - name: some/relative/path
                      provider: Github
                      repository: some-repo
                      revision: master
              name: some-trigger
              type: Cron
            variables:
            - name: some-variable
              type: String
              value: some-value
        - apiVersion: gitops.k8smgmt.io/v3
          kind: Pipeline
          metadata:
            name: some-name
            project: defaultproject
          spec:
            stages:
            - config:
                approvers:
                - ssoUser: true
                  userName: some-user@test.com
                timeout: 120s
                type: Email
              name: approval-stage
              next:
              - name: deploy-stage
                weight: 100
              type: Approval
            - config:
                workload: some-workload
              name: deploy-stage
              type: DeployWorkload
            triggers:
            - config:
                cron:
                  cronExpression: '*/5 * * * *'
                  repo:
                    git:
                      paths:
                      - name: some/relative/path
                      provider: Github
                      repository: some-repo
                      revision: master
              name: some-trigger
              type: Cron
            variables:
            - name: some-variable
              type: String
              value: some-value
      properties:
        apiVersion:
          description: API Version of the pipeline list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the pipeline resources
          items:
            $ref: '#/components/schemas/Pipeline'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the pipeline list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: PipelineList
      type: object
    PipelineSpec:
      description: pipeline specification
      example:
        stages:
        - config:
            approvers:
            - ssoUser: true
              userName: some-user@test.com
            timeout: 120s
            type: Email
          name: approval-stage
          next:
          - name: deploy-stage
            weight: 100
          type: Approval
        - config:
            workload: some-workload
          name: deploy-stage
          type: DeployWorkload
        triggers:
        - config:
            cron:
              cronExpression: '*/5 * * * *'
              repo:
                git:
                  paths:
                  - name: some/relative/path
                  provider: Github
                  repository: some-repo
                  revision: master
          name: some-trigger
          type: Cron
        variables:
        - name: some-variable
          type: String
          value: some-value
      properties:
        active:
          description: flag to indicate if pipeline is active
          title: Active
          type: boolean
        secret:
          $ref: '#/components/schemas/File'
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        stages:
          description: stages in the pipeline
          items:
            $ref: '#/components/schemas/StageSpec'
          title: Pipeline Stages
          type: array
        triggers:
          description: triggers for the pipeline
          items:
            $ref: '#/components/schemas/TriggerSpec'
          title: Pipeline Triggers
          type: array
        variables:
          description: pipeline scoped variables
          items:
            $ref: '#/components/schemas/VariableSpec'
          title: Pipeline Variables
          type: array
      required:
      - stages
      title: Pipeline Specification
      type: object
    PlacementLabel:
      description: labels for placement of resource
      example:
        key: some-key
        value: some-value
      properties:
        key:
          description: Key of the placement label
          title: Key
          type: string
        value:
          description: Value of the placement label
          title: Value
          type: string
      required:
      - key
      - value
      title: PlacementLabel
      type: object
    PlacementSpec:
      description: placement specification for a resource
      example:
        labels:
        - key: some-key
        - key: some-key
      properties:
        labels:
          description: list of labels for placement
          items:
            $ref: '#/components/schemas/PlacementLabel'
          title: Labels
          type: array
        selector:
          description: Kubernetes style label selector
          title: Selector
          type: string
      title: PlacementSpec
      type: object
    Podidentityprofile:
      properties:
        allowNetworkPluginKubenet:
          description: Running in Kubenet is disabled by default due to the security
            related nature of AAD Pod Identity and the risks of IP spoofing. See https://learn.microsoft.com/en-us/azure/aks/use-azure-ad-pod-identity#using-kubenet-network-plugin-with-azure-active-directory-pod-managed-identities
            for more information.
          title: Allow Network Plugin Kubenet
          type: boolean
        enabled:
          description: Whether the pod identity addon is enabled.
          title: Enabled
          type: boolean
        userAssignedIdentities:
          description: The pod identities to use in the cluster.
          items:
            $ref: '#/components/schemas/Userassignedidentities'
          title: User Assigned Identities
          type: array
        userAssignedIdentityExceptions:
          description: The pod identity exceptions to allow.
          items:
            $ref: '#/components/schemas/Userassignedidentityexceptions'
          title: User Assigned Identity Exceptions
          type: array
      type: object
    Policy:
      description: opa policy
      example:
        enabled: "true"
        name: example-policy
        version: v1
      properties:
        enabled:
          description: flag to specify if PSP is enabled for blueprint
          title: Enabled
          type: boolean
        name:
          description: name of the opa policy
          title: Name
          type: string
        version:
          description: version of the opa policy
          title: Version
          type: string
      title: OPA Policy
      type: object
    Powerstate:
      properties:
        code:
          description: Tells whether the cluster is Running or Stopped.
          title: Code
          type: string
      type: object
    PreConditionSpec:
      description: specification of a stage pre condition
      example:
        config:
          expression: trigger.name == 'test-trigger'
        type: Expression
      properties:
        config:
          $ref: '#/components/schemas/PreConditionSpec_config'
        type:
          description: type of the stage precondiiton
          enum:
          - Expression
          title: Type
          type: string
      required:
      - config
      - type
      title: Stage Precondition Specification
      type: object
    Privatelinkresources:
      properties:
        groupId:
          description: The group ID of the resource.
          title: Group Id
          type: string
        id:
          description: The ID of the private link resource.
          title: ID
          type: string
        name:
          description: The name of the private link resource.
          title: Name
          type: string
        requiredMembers:
          description: The RequiredMembers of the resource
          items:
            type: string
          title: Required Members
          type: array
        type:
          description: The resource type.
          title: Type
          type: string
      type: object
    Project:
      description: Project
      example:
        metadata:
          name: example-cluster
          annotations:
            key: annotations
          description: description
          project: defaultproject
          labels:
            key: labels
        apiVersion: system.k8smgmt.io/v3
        kind: Project
        spec:
          default: true
          clusterResourceQuota:
            memoryRequests: 1024Mi
            servicesNodePorts: "10"
            storageRequests: "10"
            replicationControllers: "10"
            servicesLoadBalancers: "10"
            memoryLimits: 1024Mi
            services: "10"
            secrets: "10"
            cpuRequests: 1000m
            configMaps: "5"
            persistentVolumeClaims: "10"
            pods: "10"
            cpuLimits: 2000m
          defaultClusterNamespaceQuota:
            memoryRequests: 1024Mi
            servicesNodePorts: "10"
            storageRequests: "10"
            replicationControllers: "10"
            servicesLoadBalancers: "10"
            memoryLimits: 1024Mi
            services: "10"
            secrets: "10"
            cpuRequests: 1000m
            configMaps: "5"
            persistentVolumeClaims: "10"
            pods: "10"
            cpuLimits: 2000m
        status:
          lastUpdated:
            values: 2000-01-23T04:56:07.000+00:00
          reason: reason
          conditionStatus: StatusNotSet
          extra:
            data:
              fields:
                key: ""
            files:
            - name: some-name
              project: defaultproject
            - name: some-name
              project: defaultproject
          conditionType: conditionType
      properties:
        apiVersion:
          default: system.k8smgmt.io/v3
          description: API Version of the project resource
          title: API Version
          type: string
        kind:
          default: Project
          description: Kind of the project resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/ProjectSpec'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: Project
      type: object
    ProjectList:
      description: Project list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            name: example-cluster
            annotations:
              key: annotations
            description: description
            project: defaultproject
            labels:
              key: labels
          apiVersion: system.k8smgmt.io/v3
          kind: Project
          spec:
            default: true
            clusterResourceQuota:
              memoryRequests: 1024Mi
              servicesNodePorts: "10"
              storageRequests: "10"
              replicationControllers: "10"
              servicesLoadBalancers: "10"
              memoryLimits: 1024Mi
              services: "10"
              secrets: "10"
              cpuRequests: 1000m
              configMaps: "5"
              persistentVolumeClaims: "10"
              pods: "10"
              cpuLimits: 2000m
            defaultClusterNamespaceQuota:
              memoryRequests: 1024Mi
              servicesNodePorts: "10"
              storageRequests: "10"
              replicationControllers: "10"
              servicesLoadBalancers: "10"
              memoryLimits: 1024Mi
              services: "10"
              secrets: "10"
              cpuRequests: 1000m
              configMaps: "5"
              persistentVolumeClaims: "10"
              pods: "10"
              cpuLimits: 2000m
          status:
            lastUpdated:
              values: 2000-01-23T04:56:07.000+00:00
            reason: reason
            conditionStatus: StatusNotSet
            extra:
              data:
                fields:
                  key: ""
              files:
              - name: some-name
                project: defaultproject
              - name: some-name
                project: defaultproject
            conditionType: conditionType
        - metadata:
            name: example-cluster
            annotations:
              key: annotations
            description: description
            project: defaultproject
            labels:
              key: labels
          apiVersion: system.k8smgmt.io/v3
          kind: Project
          spec:
            default: true
            clusterResourceQuota:
              memoryRequests: 1024Mi
              servicesNodePorts: "10"
              storageRequests: "10"
              replicationControllers: "10"
              servicesLoadBalancers: "10"
              memoryLimits: 1024Mi
              services: "10"
              secrets: "10"
              cpuRequests: 1000m
              configMaps: "5"
              persistentVolumeClaims: "10"
              pods: "10"
              cpuLimits: 2000m
            defaultClusterNamespaceQuota:
              memoryRequests: 1024Mi
              servicesNodePorts: "10"
              storageRequests: "10"
              replicationControllers: "10"
              servicesLoadBalancers: "10"
              memoryLimits: 1024Mi
              services: "10"
              secrets: "10"
              cpuRequests: 1000m
              configMaps: "5"
              persistentVolumeClaims: "10"
              pods: "10"
              cpuLimits: 2000m
          status:
            lastUpdated:
              values: 2000-01-23T04:56:07.000+00:00
            reason: reason
            conditionStatus: StatusNotSet
            extra:
              data:
                fields:
                  key: ""
              files:
              - name: some-name
                project: defaultproject
              - name: some-name
                project: defaultproject
            conditionType: conditionType
      properties:
        apiVersion:
          description: API Version of the project list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the project resources
          items:
            $ref: '#/components/schemas/Project'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the project list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: ProjectList
      type: object
    ProjectMeta:
      description: metadata of the project
      example:
        name: defaultproject
      properties:
        name:
          description: name of the project
          title: Name
          type: string
      required:
      - name
      title: ProjectMeta
      type: object
    ProjectResourceQuota:
      description: Resource quota definition for a cluster/ namespace in a project
      example:
        memoryRequests: 1024Mi
        servicesNodePorts: "10"
        storageRequests: "10"
        replicationControllers: "10"
        servicesLoadBalancers: "10"
        memoryLimits: 1024Mi
        services: "10"
        secrets: "10"
        cpuRequests: 1000m
        configMaps: "5"
        persistentVolumeClaims: "10"
        pods: "10"
        cpuLimits: 2000m
      properties:
        configMaps:
          description: The maximum number of ConfigMaps that can exist in the project/namespace
          example: "5"
          title: Config Maps
          type: string
        cpuLimits:
          description: The maximum amount of CPU (in millicores) allocated to the
            project/namespace
          example: 2000m
          title: CPU Limits
          type: string
        cpuRequests:
          description: The minimum amount of CPU (in millicores) guaranteed to the
            project/namespace
          example: 1000m
          title: CPU Requests
          type: string
        memoryLimits:
          description: The maximum amount of memory (in bytes) allocated to the project/namespace
          example: 1024Mi
          title: Memory Limits
          type: string
        memoryRequests:
          description: The minimum amount of memory (in bytes) guaranteed to the project/namespace
          example: 1024Mi
          title: Memory Requests
          type: string
        persistentVolumeClaims:
          description: The maximum number of persistent volume claims that can exist
            in the project/namespace
          example: "10"
          title: Persistent Volume Claims
          type: string
        pods:
          description: "The maximum number of pods that can exist in the project/namespace\
            \ in a non-terminal state(i.e., pods with a state of .status.phase in\
            \ (Failed, Succeeded) equal to true)"
          example: "10"
          title: Pods
          type: string
        replicationControllers:
          description: The maximum number of replication controllers that can exist
            in the project/namespace
          example: "10"
          title: Replication Controllers
          type: string
        secrets:
          description: The maximum number of secrets that can exist in the project/namespace
          example: "10"
          title: Secrets
          type: string
        services:
          description: The maximum number of services that can exist in the project/namespace
          example: "10"
          title: Services
          type: string
        servicesLoadBalancers:
          description: The maximum number of load balancers services that can exist
            in the project/namespace
          example: "10"
          title: Service Load Balancers
          type: string
        servicesNodePorts:
          description: The maximum number of node port services that can exist in
            the project/namespace
          example: "10"
          title: Service Node Ports
          type: string
        storageRequests:
          description: The minimum amount of storage (in gigabytes) guaranteed to
            the project/namespace
          example: "10"
          title: Storage Requests
          type: string
      title: Project resource quota
      type: object
    ProjectSpec:
      description: project specification
      example:
        default: true
        clusterResourceQuota:
          memoryRequests: 1024Mi
          servicesNodePorts: "10"
          storageRequests: "10"
          replicationControllers: "10"
          servicesLoadBalancers: "10"
          memoryLimits: 1024Mi
          services: "10"
          secrets: "10"
          cpuRequests: 1000m
          configMaps: "5"
          persistentVolumeClaims: "10"
          pods: "10"
          cpuLimits: 2000m
        defaultClusterNamespaceQuota:
          memoryRequests: 1024Mi
          servicesNodePorts: "10"
          storageRequests: "10"
          replicationControllers: "10"
          servicesLoadBalancers: "10"
          memoryLimits: 1024Mi
          services: "10"
          secrets: "10"
          cpuRequests: 1000m
          configMaps: "5"
          persistentVolumeClaims: "10"
          pods: "10"
          cpuLimits: 2000m
      properties:
        clusterResourceQuota:
          $ref: '#/components/schemas/ProjectResourceQuota'
        default:
          description: flag to indicate if this is the default project in the organization
          title: Default
          type: boolean
        defaultClusterNamespaceQuota:
          $ref: '#/components/schemas/ProjectResourceQuota'
      title: Project Specification
      type: object
    Projects:
      properties:
        name:
          type: string
      type: object
    ProxyConfig:
      properties:
        allowInsecureBootstrap:
          type: boolean
        bootstrapCA:
          type: string
        enabled:
          type: boolean
        httpProxy:
          type: string
        httpsProxy:
          type: string
        noProxy:
          type: string
        proxyAuth:
          type: string
      type: object
    Publicipprefixes:
      properties:
        id:
          description: The fully qualified Azure resource id.
          title: ID
          type: string
      type: object
    Publicips:
      properties:
        id:
          description: The fully qualified Azure resource id.
          title: ID
          type: string
      type: object
    Publickeys:
      properties:
        keyData:
          description: Certificate public key used to authenticate with VMs through
            SSH. The certificate must be in PEM format with or without headers.
          title: Key Data
          type: string
      type: object
    PulumiDeployHooks:
      properties:
        login:
          $ref: '#/components/schemas/LifecycleEventHooks'
        output:
          $ref: '#/components/schemas/LifecycleEventHooks'
        preview:
          $ref: '#/components/schemas/LifecycleEventHooks'
        storeState:
          $ref: '#/components/schemas/LifecycleEventHooks'
        up:
          $ref: '#/components/schemas/LifecycleEventHooks'
      type: object
    PulumiDestroyHooks:
      properties:
        destroy:
          $ref: '#/components/schemas/LifecycleEventHooks'
        login:
          $ref: '#/components/schemas/LifecycleEventHooks'
        preview:
          $ref: '#/components/schemas/LifecycleEventHooks'
      type: object
    PulumiProviderHooks:
      properties:
        deploy:
          $ref: '#/components/schemas/PulumiDeployHooks'
        destroy:
          $ref: '#/components/schemas/PulumiDestroyHooks'
      type: object
    PulumiProviderOptions:
      type: object
    RegistryAWSCredentials:
      properties:
        accessKeyID:
          type: string
        accessSecretKey:
          type: string
        region:
          type: string
      type: object
    RegistryAzureCredentials:
      properties:
        servicePrincipalID:
          type: string
        servicePrincipalPassword:
          type: string
      type: object
    RegistryGCPCredentials:
      properties:
        jsonKeyData:
          type: string
      type: object
    RegistryUserPassCredentials:
      properties:
        password:
          type: string
        username:
          type: string
      type: object
    RepoNamespace:
      description: namespace from git repository
      example:
        path:
          name: relative/path/to/some/file.yaml
        repository: some-repo
        revision: master
      properties:
        path:
          $ref: '#/components/schemas/File'
        repository:
          description: name of the git repository
          title: Repository
          type: string
        revision:
          description: branch or tag in the git repository
          title: Revision
          type: string
      title: Namespace From Repostiroy
      type: object
    RepoOverride:
      description: override values from git repository
      example:
        path:
          name: relative/path/to/some/file.yaml
        repository: some-repo
        revision: master
      properties:
        path:
          $ref: '#/components/schemas/File'
        repository:
          description: name of the git repository
          title: Repository
          type: string
        revision:
          description: branch or tag in the git repository
          title: Revision
          type: string
      title: Override Values From Repostiroy
      type: object
    RepoOverrideTemplate:
      description: repo based override template definition
      example:
        paths:
        - name: /path/to/some/file.yaml
        repository: some-repo
        revision: master
      properties:
        paths:
          description: paths in the repository containing the override template
          items:
            $ref: '#/components/schemas/File'
          title: Paths
          type: array
        repository:
          description: git repository containing the override template
          title: Repository
          type: string
        revision:
          description: branch or tag in the repository
          title: Revision
          type: string
      required:
      - paths
      - repository
      - revision
      title: Repo Override Template
      type: object
    RepoSSHCredentials:
      properties:
        privateKey:
          type: string
      type: object
    RepoUserPassCredentials:
      properties:
        password:
          type: string
        username:
          type: string
      type: object
    Repository:
      description: Secret Sealer definition
      example:
        apiVersion: integrations.k8smgmt.io/v3
        kind: SecretSealer
        metadata:
          name: some-name
          project: defaultproject
        spec:
          type: KubeSeal
          version: v1
      properties:
        apiVersion:
          default: integrations.k8smgmt.io/v3
          description: API Version of the secret sealer resource
          title: API Version
          type: string
        kind:
          default: SecretSealer
          description: Kind of the secret sealer resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/RepositorySpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: Secret Sealer
      type: object
    RepositoryList:
      description: repository list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: integrations.k8smgmt.io/v3
          kind: SecretSealer
          metadata:
            name: some-name
            project: defaultproject
          spec:
            type: KubeSeal
            version: v1
        - apiVersion: integrations.k8smgmt.io/v3
          kind: SecretSealer
          metadata:
            name: some-name
            project: defaultproject
          spec:
            type: KubeSeal
            version: v1
      properties:
        apiVersion:
          description: API Version of the repository list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the repository resources
          items:
            $ref: '#/components/schemas/Repository'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the repository list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: RepositoryList
      type: object
    RepositoryOptions:
      description: repository options
      example:
        enableLFS: false
        enableSubmodules: false
        insecure: true
        maxRetires: 3
      properties:
        caCert:
          $ref: '#/components/schemas/File'
        enableLFS:
          description: enable git large file support
          title: Enable Git Large File Support
          type: boolean
        enableSubmodules:
          description: enable git submodules
          title: Enable Git Submodules
          type: boolean
        insecure:
          description: insecure
          title: Insecure
          type: boolean
        maxRetires:
          description: max retries
          format: int32
          title: Max Retries
          type: integer
      title: Respository Options
      type: object
    RepositorySpec:
      description: repository specification
      example:
        type: Git
        version: v1
      properties:
        agents:
          description: repository agents
          items:
            $ref: '#/components/schemas/AgentMeta'
          title: Repository Agents
          type: array
        credentials:
          $ref: '#/components/schemas/RepositorySpec_credentials'
        endpoint:
          description: repository endpoint
          title: Repository Endpoint
          type: string
        options:
          $ref: '#/components/schemas/RepositoryOptions'
        secret:
          $ref: '#/components/schemas/File'
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        type:
          description: repository type
          enum:
          - Git
          - Helm
          title: Repository Type
          type: string
      title: Repository Specification
      type: object
    Resource:
      description: Resource represents a cloud agnostic resource
      example:
        apiVersion: gitops.k8smgmt.io/v3
        kind: Resource
        metadata:
          name: some-name
          project: defaultproject
        spec:
          variables:
          - name: var1
            options:
              description: used for computation
              sensitive: false
            value: val1
            value_type: "4"
      properties:
        apiVersion:
          default: gitops.k8smgmt.io/v3
          description: API Version of resource
          title: API Version
          type: string
        kind:
          default: Resource
          description: Kind of resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/ResourceSpec'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: Resource
      type: object
    ResourceHooks:
      properties:
        on_completion:
          description: Configure the on completion lifecycle hook
          items:
            $ref: '#/components/schemas/Hook'
          title: On Completion
          type: array
        on_failure:
          description: Configure the on failure lifecycle hook
          items:
            $ref: '#/components/schemas/Hook'
          title: On Failure
          type: array
        on_init:
          description: Configure the on initialize lifecycle hook
          items:
            $ref: '#/components/schemas/Hook'
          title: On Init
          type: array
        on_success:
          description: Configure the on success lifecycle hook
          items:
            $ref: '#/components/schemas/Hook'
          title: On Success
          type: array
        provider:
          $ref: '#/components/schemas/ResourceTemplateProviderHooks'
      type: object
    ResourceList:
      description: List of resources
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: gitops.k8smgmt.io/v3
          kind: Resource
          metadata:
            name: some-name
            project: defaultproject
          spec:
            variables:
            - name: var1
              options:
                description: used for computation
                sensitive: false
              value: val1
              value_type: "4"
        - apiVersion: gitops.k8smgmt.io/v3
          kind: Resource
          metadata:
            name: some-name
            project: defaultproject
          spec:
            variables:
            - name: var1
              options:
                description: used for computation
                sensitive: false
              value: val1
              value_type: "4"
      properties:
        apiVersion:
          description: API Version of the list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the resources
          items:
            $ref: '#/components/schemas/Resource'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: ResourceList
      type: object
    ResourceNameAndVersionRef:
      description: Reference to resource
      example:
        name: example_name
        version: version_name
      properties:
        name:
          description: name of the resource
          title: Name
          type: string
        version:
          description: version of the resource
          title: Version
          type: string
      required:
      - name
      - version
      title: ResourceNameAndVersionRef
      type: object
    ResourceOptions:
      properties:
        api_version:
          type: string
        kind:
          type: string
      type: object
    ResourceQuantity:
      description: resource quantity
      example:
        cpu: "1.5"
        memory: 128Mi
      properties:
        cpu:
          description: quantity of CPU in cores
          title: CPU Quantity
          type: string
        memory:
          description: quantity of memory in MB
          title: Memory Quantity
          type: string
      required:
      - cpu
      - memory
      title: Resource Quantity
      type: object
    ResourceRatio:
      description: resource requests to limites ratio
      example:
        cpu: 0.5
        memory: 0.5
      properties:
        cpu:
          description: ratio of cpu requests to limits
          title: CPU Ratio
          type: number
        memory:
          description: ratio of memory requests to limits
          title: Memory Ratio
          type: number
      required:
      - cpu
      - memory
      title: Resource Ratio
      type: object
    ResourceRef:
      description: Reference to resource
      example:
        name: example_name
      properties:
        name:
          description: name of the resource
          title: Name
          type: string
      required:
      - name
      title: ResourceRef
      type: object
    ResourceRequirements:
      description: resource requirements
      example:
        limits:
          cpu: "1.5"
          memory: 128Mi
      properties:
        limits:
          $ref: '#/components/schemas/ResourceQuantity'
      required:
      - limits
      title: Resource Requirements
      type: object
    ResourceSpec:
      description: details of the resource
      example:
        variables:
        - name: var1
          options:
            description: used for computation
            sensitive: false
          value: val1
          value_type: "4"
      properties:
        variables:
          description: Variables data for resource
          items:
            $ref: '#/components/schemas/Variable'
          title: Variables
          type: array
      required:
      - variables
      title: Resource Specification
      type: object
    ResourceTemplate:
      description: Resource template contains information about the resource repo
        and its provider driver with execution configuration
      example:
        apiVersion: gitops.k8smgmt.io/v3
        kind: ResourceTemplate
        metadata:
          name: my-resource-template
          project: defaultproject
        spec:
          contexts:
          - name: example_name
            version: version_name
          provider: 1
          provider_options:
            terraform:
              use_system_state_store: true
              version: 1.10.2
          repository_options:
            branch: main
            directory_path: path-to-dir
            name: my-repo
          variables:
          - name: var1
            options:
              description: used for computation
              override:
                restrictedValues:
                - val1
                - val2
                type: allowed
              sensitive: false
            value: val1
            value_type: "4"
          version: 0.0.1
      properties:
        apiVersion:
          default: eaas.k8smgmt.io/v1
          description: API Version of the resource template
          title: API Version
          type: string
        kind:
          default: ResourceTemplate
          description: Kind of the config context resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/ResourceTemplateSpec'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: ResourceTemplate
      type: object
    ResourceTemplateList:
      description: List of resource templates
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: gitops.k8smgmt.io/v3
          kind: ResourceTemplate
          metadata:
            name: my-resource-template
            project: defaultproject
          spec:
            contexts:
            - name: example_name
              version: version_name
            provider: 1
            provider_options:
              terraform:
                use_system_state_store: true
                version: 1.10.2
            repository_options:
              branch: main
              directory_path: path-to-dir
              name: my-repo
            variables:
            - name: var1
              options:
                description: used for computation
                override:
                  restrictedValues:
                  - val1
                  - val2
                  type: allowed
                sensitive: false
              value: val1
              value_type: "4"
            version: 0.0.1
        - apiVersion: gitops.k8smgmt.io/v3
          kind: ResourceTemplate
          metadata:
            name: my-resource-template
            project: defaultproject
          spec:
            contexts:
            - name: example_name
              version: version_name
            provider: 1
            provider_options:
              terraform:
                use_system_state_store: true
                version: 1.10.2
            repository_options:
              branch: main
              directory_path: path-to-dir
              name: my-repo
            variables:
            - name: var1
              options:
                description: used for computation
                override:
                  restrictedValues:
                  - val1
                  - val2
                  type: allowed
                sensitive: false
              value: val1
              value_type: "4"
            version: 0.0.1
      properties:
        apiVersion:
          description: API Version of the resource templates list
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the resource templates
          items:
            $ref: '#/components/schemas/ResourceTemplate'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the resource template list
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: ResourceTemplateList
      type: object
    ResourceTemplateProviderHooks:
      properties:
        pulumi:
          $ref: '#/components/schemas/PulumiProviderHooks'
        terraform:
          $ref: '#/components/schemas/TerraformProviderHooks'
      type: object
    ResourceTemplateProviderOptions:
      properties:
        pulumi:
          type: object
        retry_options:
          $ref: '#/components/schemas/RetryOptions'
        system:
          type: object
        terraform:
          $ref: '#/components/schemas/TerraformProviderOptions'
        terragrunt:
          type: object
      type: object
    ResourceTemplateRepositoryOptions:
      properties:
        branch:
          description: Specify the branch
          title: Branch
          type: string
        directory_path:
          description: Specify the directory path
          title: Directory Path
          type: string
        name:
          description: Specify the name of the repository
          title: Name
          type: string
      type: object
    ResourceTemplateSpec:
      description: Resource template specification
      properties:
        agents:
          description: Reference to agents to process resource template
          items:
            $ref: '#/components/schemas/ResourceNameAndVersionRef'
          title: Agents
          type: array
        contexts:
          description: Reference to config context data associated with resource templates
          items:
            $ref: '#/components/schemas/ResourceNameAndVersionRef'
          title: Config Context Reference
          type: array
        hooks:
          $ref: '#/components/schemas/ResourceHooks'
        provider:
          description: Specify the resource template provider
          title: Provider
          type: string
        providerOptions:
          $ref: '#/components/schemas/ResourceTemplateProviderOptions'
        repositoryOptions:
          $ref: '#/components/schemas/ResourceTemplateRepositoryOptions'
        sharingOptions:
          $ref: '#/components/schemas/SharingSpec'
        variables:
          description: Variables associated with resource template
          items:
            $ref: '#/components/schemas/Variable'
          title: Variables
          type: array
        version:
          description: Version of the resource template
          title: Version
          type: string
      required:
      - data
      title: Resource Template Specification
      type: object
    RetryOptions:
      properties:
        enabled:
          description: "Determines whether to retry or not, by default it is set to\
            \ false"
          title: RetryOptions
          type: boolean
        maxCount:
          description: Maximun number of retries
          format: int32
          title: MaxCount
          type: integer
      type: object
    Role:
      description: Role definition
      example:
        apiVersion: auth.k8smgmt.io/v3
        kind: Role
        metadata:
          name: some-name
          project: defaultproject
        spec: {}
      properties:
        apiVersion:
          default: auth.k8smgmt.io/v3
          description: API Version of the role resource
          title: API Version
          type: string
        kind:
          default: Role
          description: Kind of the role resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/RoleSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: Role
      type: object
    RoleList:
      description: Role list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: auth.k8smgmt.io/v3
          kind: Role
          metadata:
            name: some-name
            project: defaultproject
          spec: {}
        - apiVersion: auth.k8smgmt.io/v3
          kind: Role
          metadata:
            name: some-name
            project: defaultproject
          spec: {}
      properties:
        apiVersion:
          description: API Version of the role list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the role resources
          items:
            $ref: '#/components/schemas/Role'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the role list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: RoleList
      type: object
    RoleSpec:
      description: role specification
      example: {}
      properties:
        permissions:
          description: List of permissions associated with this role
          items:
            type: string
          title: permissions
          type: array
      title: Role Specification
      type: object
    Secret:
      description: specification of Secret
      example:
        filePath: aws/credentials
        secret: some-secret
      properties:
        filePath:
          description: File path where secret will be written
          title: File path
          type: string
        secret:
          description: Secret
          title: Secret
          type: string
      required:
      - filePath
      - secret
      title: Secret Specification
      type: object
    SecretGroup:
      description: Secret Group definition
      example:
        apiVersion: gitops.k8smgmt.io/v3
        kind: SecretGroup
        metadata:
          name: some-name
          project: defaultproject
        spec:
          secrets:
          - filePath: aws/credentials
            secret: some-secret
      properties:
        apiVersion:
          default: gitops.k8smgmt.io/v3
          description: API Version of the SecretGroup resource
          title: API Version
          type: string
        kind:
          default: SecretGroup
          description: Kind of the SecretGroup resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/SecretGroupSpec'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: Secret Group
      type: object
    SecretGroupList:
      description: SecretGroup list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: gitops.k8smgmt.io/v3
          kind: SecretGroup
          metadata:
            name: some-name
            project: defaultproject
          spec:
            secrets:
            - filePath: aws/credentials
              secret: some-secret
        - apiVersion: gitops.k8smgmt.io/v3
          kind: SecretGroup
          metadata:
            name: some-name
            project: defaultproject
          spec:
            secrets:
            - filePath: aws/credentials
              secret: some-secret
      properties:
        apiVersion:
          description: API Version of the SecretGroup list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the SecretGroup resources
          items:
            $ref: '#/components/schemas/SecretGroup'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the SecretGroup list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: SecretGroupList
      type: object
    SecretGroupSpec:
      description: specification of SecretGroup
      example:
        secrets:
        - filePath: aws/credentials
          secret: some-secret
      properties:
        secret:
          $ref: '#/components/schemas/File'
        secrets:
          items:
            $ref: '#/components/schemas/Secret'
          title: List of secrets
          type: array
      required:
      - secrets
      title: SecretGroup Specification
      type: object
    SecretObject:
      properties:
        annotations:
          additionalProperties:
            type: string
          type: object
        data:
          items:
            $ref: '#/components/schemas/SecretObjectData'
          type: array
        labels:
          additionalProperties:
            type: string
          type: object
        secretName:
          type: string
        type:
          type: string
      type: object
    SecretObjectData:
      properties:
        key:
          type: string
        objectName:
          type: string
      type: object
    SecretProviderClass:
      description: SecretProviderClass  definition
      example:
        apiVersion: integrations.k8smgmt.io/v3
        kind: SecretProviderClass
        metadata:
          name: some-name
          project: defaultproject
        spec:
          artifact:
            paths:
            - name: relative/path/to/some/file.yaml
            repository: some-repo
            revision: master
          provider: secret-provider-class-1
      properties:
        apiVersion:
          default: integrations.k8smgmt.io/v3
          description: API Version of the provider class  resource
          title: API Version
          type: string
        kind:
          default: SecretProviderClass
          description: Kind of the provider class resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/SecretProviderClassSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: SecretProviderClass
      type: object
    SecretProviderClassList:
      description: SecretProviderClass list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: integrations.k8smgmt.io/v3
          kind: SecretProviderClass
          metadata:
            name: some-name
            project: defaultproject
          spec:
            artifact:
              paths:
              - name: relative/path/to/some/file.yaml
              repository: some-repo
              revision: master
            provider: secret-provider-class-1
        - apiVersion: integrations.k8smgmt.io/v3
          kind: SecretProviderClass
          metadata:
            name: some-name
            project: defaultproject
          spec:
            artifact:
              paths:
              - name: relative/path/to/some/file.yaml
              repository: some-repo
              revision: master
            provider: secret-provider-class-1
      properties:
        apiVersion:
          description: API Version of the provider class list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the provider class resources
          items:
            $ref: '#/components/schemas/SecretProviderClass'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the provider class list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: SecretProviderClassList
      type: object
    SecretProviderClassMeta:
      properties:
        name:
          type: string
        namespace:
          type: string
      type: object
    SecretProviderClassSpec:
      description: secret provider class specification
      example:
        artifact:
          artifact:
            paths:
            - name: relative/path/to/some/file.yaml
            repository: some-repo
            revision: master
          type: Yaml
        provider: secret-provider-class-1
      properties:
        artifact:
          $ref: '#/components/schemas/ArtifactSpec'
        parameters:
          additionalProperties:
            type: string
          description: secret provider class parameters
          title: Secret Provider Class parameters
          type: object
        provider:
          description: Name of the secret provider class
          enum:
          - AWS
          title: Secret Provider Class Template Name
          type: string
        secretObject:
          items:
            $ref: '#/components/schemas/SecretObject'
          type: array
        sharing:
          $ref: '#/components/schemas/SharingSpec'
      title: Secret Provider Class Specification
      type: object
    SecretSealer:
      description: Secret Sealer definition
      example:
        apiVersion: integrations.k8smgmt.io/v3
        kind: SecretSealer
        metadata:
          name: some-name
          project: defaultproject
        spec:
          type: KubeSeal
          version: v1
      properties:
        apiVersion:
          default: integrations.k8smgmt.io/v3
          description: API Version of the secret sealer resource
          title: API Version
          type: string
        kind:
          default: SecretSealer
          description: Kind of the secret sealer resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/SecretSealerSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: Secret Sealer
      type: object
    SecretSealerList:
      description: Secret Sealer list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: integrations.k8smgmt.io/v3
          kind: SecretSealer
          metadata:
            name: some-name
            project: defaultproject
          spec:
            type: KubeSeal
            version: v1
        - apiVersion: integrations.k8smgmt.io/v3
          kind: SecretSealer
          metadata:
            name: some-name
            project: defaultproject
          spec:
            type: KubeSeal
            version: v1
      properties:
        apiVersion:
          description: API Version of the secret sealer list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the secret sealer resources
          items:
            $ref: '#/components/schemas/SecretSealer'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the secret sealer list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: SecretSealerList
      type: object
    SecretSealerRevision:
      properties:
        cert:
          type: string
        key:
          type: string
        name:
          type: string
        status:
          type: string
      type: object
    SecretSealerSpec:
      description: secret sealer specification
      example:
        type: KubeSeal
        version: v1
      properties:
        sharing:
          $ref: '#/components/schemas/SharingSpec'
        type:
          description: secret sealer type
          enum:
          - KubeSeal
          title: Secret Sealer Type
          type: string
        version:
          description: secret sealer sharing configuration
          title: Secret Sealer Sharing
          type: string
      title: Secret Sealer Specification
      type: object
    SecretStore:
      description: secret store specification
      example:
        apiVersion: integrations.k8smgmt.io/v3
        kind: SecretStore
        metadata:
          description: test repo description
          name: test-repo
          project: test-project
        spec:
          config:
            csiAws:
              clusters:
              - clusterName: cluster1
                irsa:
                - roleArn: sa-1
                  serviceAccountName: sa-1
                  serviceAccountNamespace: sa-1
                - roleArn: sa-1
                  serviceAccountName: sa-1
                  serviceAccountNamespace: sa-1
                secretProviderClasses:
                - name: spc1
                  namespace: ns1
            vault:
              authMethod: Kubernetes
              clusters:
              - authPath: auth path 1
                clusterName: cluster name 1
                vaultNamespace: vault namespace 1
              host: host
          provider: Vault
      properties:
        apiVersion:
          default: integrations.k8smgmt.io/v3
          description: API Version of the secret store resource
          title: API Version
          type: string
        kind:
          default: SecretStore
          description: Kind of the secret store resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/SecretStoreSpec'
        status:
          $ref: '#/components/schemas/Status'
      title: Secret Store Specification
      type: object
    SecretStoreList:
      description: Secret Store list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: integrations.k8smgmt.io/v3
          kind: SecretStore
          metadata:
            description: test repo description
            name: test-repo
            project: test-project
          spec:
            config:
              csiAws:
                clusters:
                - clusterName: cluster1
                  irsa:
                  - roleArn: sa-1
                    serviceAccountName: sa-1
                    serviceAccountNamespace: sa-1
                  - roleArn: sa-1
                    serviceAccountName: sa-1
                    serviceAccountNamespace: sa-1
                  secretProviderClasses:
                  - name: spc1
                    namespace: ns1
              vault:
                authMethod: Kubernetes
                clusters:
                - authPath: auth path 1
                  clusterName: cluster name 1
                  vaultNamespace: vault namespace 1
                host: host
            provider: Vault
        - apiVersion: integrations.k8smgmt.io/v3
          kind: SecretStore
          metadata:
            description: test repo description
            name: test-repo
            project: test-project
          spec:
            config:
              csiAws:
                clusters:
                - clusterName: cluster1
                  irsa:
                  - roleArn: sa-1
                    serviceAccountName: sa-1
                    serviceAccountNamespace: sa-1
                  - roleArn: sa-1
                    serviceAccountName: sa-1
                    serviceAccountNamespace: sa-1
                  secretProviderClasses:
                  - name: spc1
                    namespace: ns1
              vault:
                authMethod: Kubernetes
                clusters:
                - authPath: auth path 1
                  clusterName: cluster name 1
                  vaultNamespace: vault namespace 1
                host: host
            provider: Vault
      properties:
        apiVersion:
          description: API Version of the secret store list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the secret store resources
          items:
            $ref: '#/components/schemas/SecretStore'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the secret store list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: SecretStoreList
      type: object
    SecretStoreProvider:
      properties:
        aws:
          type: boolean
        vault:
          type: boolean
      type: object
    SecretStoreSpec:
      description: secret store specification
      example:
        config:
          csiAws:
            clusters:
            - clusterName: cluster1
              irsa:
              - roleArn: sa-1
                serviceAccountName: sa-1
                serviceAccountNamespace: sa-1
              - roleArn: sa-1
                serviceAccountName: sa-1
                serviceAccountNamespace: sa-1
              secretProviderClasses:
              - name: spc1
                namespace: ns1
          vault:
            authMethod: Kubernetes
            clusters:
            - authPath: auth path 1
              clusterName: cluster name 1
              vaultNamespace: vault namespace 1
            host: host
        provider: Vault
      properties:
        config:
          $ref: '#/components/schemas/SecretStoreSpecConfig'
        provider:
          description: repository type
          enum:
          - Vault
          - System
          - CsiAws
          title: Repository Type
          type: string
      title: Secret Store Specification
      type: object
    SecretStoreSpecConfig:
      description: secret store specification
      example:
        csiAws:
          clusters:
          - clusterName: cluster1
            irsa:
            - roleArn: sa-1
              serviceAccountName: sa-1
              serviceAccountNamespace: sa-1
            - roleArn: sa-1
              serviceAccountName: sa-1
              serviceAccountNamespace: sa-1
            secretProviderClasses:
            - name: spc1
              namespace: ns1
        vault:
          authMethod: Kubernetes
          clusters:
          - authPath: auth path 1
            clusterName: cluster name 1
            vaultNamespace: vault namespace 1
          host: host
      properties:
        csiAws:
          $ref: '#/components/schemas/SecretStoreSpecConfigCsiAws'
        vault:
          $ref: '#/components/schemas/SecretStoreSpecConfigVault'
      title: Secret Store Specification
      type: object
    SecretStoreSpecConfigCsiAws:
      description: secret store specification
      example:
        clusters:
        - clusterName: cluster1
          irsa:
          - roleArn: sa-1
            serviceAccountName: sa-1
            serviceAccountNamespace: sa-1
          - roleArn: sa-1
            serviceAccountName: sa-1
            serviceAccountNamespace: sa-1
          secretProviderClasses:
          - name: spc1
            namespace: ns1
      properties:
        clusters:
          description: Cluster details for csi aws resource
          items:
            $ref: '#/components/schemas/SecretStoreSpecConfigCsiAwsCluster'
          title: Clusters
          type: array
      title: Secret Store Specification
      type: object
    SecretStoreSpecConfigCsiAwsCluster:
      description: secret store specification
      example:
        clusterName: cluster1
        irsa:
        - roleArn: sa-1
          serviceAccountName: sa-1
          serviceAccountNamespace: sa-1
        - roleArn: sa-1
          serviceAccountName: sa-1
          serviceAccountNamespace: sa-1
        secretProviderClasses:
        - name: spc1
          namespace: ns1
      properties:
        clusterName:
          description: Cluster name for cluster linked to secret store resource
          title: Cluster Name
          type: string
        irsa:
          description: List of service account with role to be created
          items:
            $ref: '#/components/schemas/Irsa'
          title: IRSA
          type: array
        secretProviderClasses:
          description: List of service provider class to be created in cluster
          items:
            $ref: '#/components/schemas/SecretProviderClassMeta'
          title: Service Provider Class
          type: array
      title: Secret Store Specification
      type: object
    SecretStoreSpecConfigVault:
      description: secret store specification
      example:
        authMethod: Kubernetes
        clusters:
        - authPath: auth path 1
          clusterName: cluster name 1
          vaultNamespace: vault namespace 1
        host: host
      properties:
        authMethod:
          description: Authentication method for secret store resource
          title: Auth Method
          type: string
        clusters:
          description: Vault details of the secret store resource
          items:
            $ref: '#/components/schemas/SecretStoreSpecConfigVaultCluster'
          title: Vault
          type: array
        host:
          description: Host details
          title: Host
          type: string
      title: Secret Store Specification
      type: object
    SecretStoreSpecConfigVaultCluster:
      description: secret store specification
      example:
        authPath: auth path 1
        clusterName: cluster name 1
        vaultNamespace: vault namespace 1
      properties:
        authPath:
          description: Authentication path for cluster linked to secret store resource
          title: Authentication path
          type: string
        clusterName:
          description: Cluster name for cluster linked to secret store resource
          title: Cluster Name
          type: string
        vaultNamespace:
          description: Namespace for cluster linked to secret store resource
          title: Namespace
          type: string
      title: Secret Store Specification
      type: object
    Securitymonitoring:
      properties:
        enabled:
          description: Whether to enable Defender threat detection
          title: Enabled
          type: boolean
      type: object
    Securityprofile:
      properties:
        azureKeyVaultKms:
          $ref: '#/components/schemas/Azurekeyvaultkms'
        defender:
          $ref: '#/components/schemas/Defender'
      type: object
    ServiceMesh:
      description: Service Mesh Profile and Policies details
      example:
        policies:
        - name: example-policy
          version: v1
        profile:
          name: example-profile
          version: v1
      properties:
        enabled:
          description: flag to specify if service mesh is enabled for blueprint
          title: Enabled
          type: boolean
        policies:
          description: name and version of cluster mesh policy
          items:
            $ref: '#/components/schemas/ResourceNameAndVersionRef'
          title: Policies
          type: array
        profile:
          $ref: '#/components/schemas/ResourceNameAndVersionRef'
      title: Service Mesh
      type: object
    Serviceprincipalprofile:
      properties:
        clientId:
          description: "The ID for the service principal. If specified, must be set\
            \ to [parameters('servicePrincipalClientId')]. This would be set to the\
            \ cloud credential's client ID during cluster deployment."
          title: Client ID
          type: string
        secret:
          description: "The secret password associated with the service principal.\
            \ If specified, must be set to [parameters('servicePrincipalClientSecret')].\
            \ This would be set to the cloud credential's client secret during cluster\
            \ deployment."
          title: Secret
          type: string
      type: object
    Sharing:
      properties:
        enabled:
          type: boolean
        projects:
          items:
            $ref: '#/components/schemas/Projects'
          type: array
      type: object
    SharingSpec:
      description: sharing specification for a resource
      example:
        enabled: true
        projects:
        - name: some-project
      properties:
        enabled:
          description: flag to specify if sharing is enabled for resource
          title: Enabled
          type: boolean
        projects:
          description: list of projects this resource is shared to
          items:
            $ref: '#/components/schemas/ProjectMeta'
          title: Projects
          type: array
      required:
      - enabled
      title: SharingSpec
      type: object
    ShellScriptOptions:
      properties:
        cpuLimitMilli:
          description: Specify the cpu limit in milli
          title: CpuLimitMilli
          type: string
        envvars:
          additionalProperties:
            type: string
          description: "Specify the environment variables to be set in key,value pair"
          title: EnvVars
          type: object
        memoryLimitMB:
          description: Specify the memory limit to be allocated in MB
          title: MemoryLimitMb
          type: string
        script:
          description: Specify the script to be executed
          title: Script
          type: string
        successCondition:
          description: Specify the success condition of the script
          title: SuccessCondition
          type: string
      type: object
    Sku:
      properties:
        name:
          default: Basic
          description: The name of a managed cluster SKU.
          title: Sku Name
          type: string
        tier:
          default: Free
          description: "If not specified, the default is Free. See uptime SLA for\
            \ more details. Valid values are Paid, Free."
          title: Sku Tier
          type: string
      type: object
    Snapshotcontroller:
      properties:
        enabled:
          description: Whether to enable Snapshot Controller. The default value is
            true.
          title: Enabled
          type: boolean
      type: object
    SpotInstance:
      description: spot cost profile params
      example:
        spotLabel: type
        spotLabelValue: spot
      properties:
        spotLabel:
          description: 'spot Lable '
          title: spot Label
          type: string
        spotLabelValue:
          description: spot Label Value
          title: spot Label Value
          type: string
      title: Spot CostProfile params
      type: object
    Ssh:
      properties:
        publicKeys:
          description: The list of SSH public keys used to authenticate with Linux-based
            VMs. A maximum of 1 key may be specified.
          items:
            $ref: '#/components/schemas/Publickeys'
          title: Public Keys
          type: array
      type: object
    StageSpec:
      description: pipeline stage specification
      example:
        config:
          approvers:
          - ssoUser: true
            userName: some-user@test.com
          timeout: 120s
          type: Email
        name: approval-stage
        next:
        - name: deploy-stage
          weight: 100
        type: Approval
      properties:
        config:
          $ref: '#/components/schemas/StageSpec_config'
        name:
          description: name of the pipeline stage
          title: Name
          type: string
        next:
          description: list of stages to be executed after this
          items:
            $ref: '#/components/schemas/NextStage'
          title: Next
          type: array
        preConditions:
          description: conditions to be evaluated before executing current stage
          items:
            $ref: '#/components/schemas/PreConditionSpec'
          title: Pre Conditions
          type: array
        type:
          description: type of pipeline stage
          enum:
          - Approval
          - DeployWorkload
          - DeployWorkloadTemplate
          - InfraProvisioner
          - SystemSync
          title: Type
          type: string
        variables:
          description: stage scoped variables
          items:
            $ref: '#/components/schemas/VariableSpec'
          title: Variables
          type: array
      required:
      - config
      - name
      - type
      title: Pipeline Stage Specification
      type: object
    Status:
      description: status of a resource
      example:
        lastUpdated:
          values: 2000-01-23T04:56:07.000+00:00
        reason: reason
        conditionStatus: StatusNotSet
        extra:
          data:
            fields:
              key: ""
          files:
          - name: some-name
            project: defaultproject
          - name: some-name
            project: defaultproject
        conditionType: conditionType
      properties:
        conditionStatus:
          description: status of the condition
          enum:
          - StatusNotSet
          - StatusSubmitted
          - StatusOK
          - StatusFailed
          readOnly: true
          title: Condition Status
          type: string
        conditionType:
          description: type of the status condition
          readOnly: true
          title: Condition Type
          type: string
        extra:
          $ref: '#/components/schemas/Extra'
        lastUpdated:
          $ref: '#/components/schemas/Last_Updated'
        reason:
          description: reason of the last condition status
          readOnly: true
          title: Reason
          type: string
      readOnly: true
      title: Status
      type: object
    StatusTime:
      properties:
        value:
          $ref: '#/components/schemas/StatusTime_value'
      type: object
    Storageprofile:
      properties:
        diskCSIDriver:
          $ref: '#/components/schemas/Diskcsidriver'
        fileCSIDriver:
          $ref: '#/components/schemas/Filecsidriver'
        snapshotController:
          $ref: '#/components/schemas/Snapshotcontroller'
      type: object
    SyncObject:
      description: K8s objects to be synced to gatekeeper
      example:
        group: ""
        kind: Namespace
        version: v1
      properties:
        group:
          description: group of k8s object
          title: Group
          type: string
        kind:
          description: kind of k8s object
          title: Kind
          type: string
        version:
          description: version of k8s object
          title: Version
          type: string
      required:
      - group
      - kind
      - version
      title: Sync Object
      type: object
    Sysctls:
      properties:
        fsAioMaxNr:
          description: Sysctl setting fs.aio-max-nr.
          format: int32
          title: FsAioMaxNr
          type: integer
        fsFileMax:
          description: Sysctl setting fs.file-max.
          format: int32
          title: FsFileMax
          type: integer
        fsInotifyMaxUserWatches:
          description: Sysctl setting fs.inotify.max_user_watches.
          format: int32
          title: FsInotifyMaxUserWatches
          type: integer
        fsNrOpen:
          description: Sysctl setting fs.nr_open.
          format: int32
          title: FsNrOpen
          type: integer
        kernelThreadsMax:
          description: Sysctl setting kernel.threads-max.
          format: int32
          title: kernelThreadsMax
          type: integer
        netCoreNetdevMaxBacklog:
          description: Sysctl setting net.core.netdev_max_backlog.
          format: int32
          title: NetCoreNetdevMaxBacklog
          type: integer
        netCoreOptmemMax:
          description: Sysctl setting net.core.optmem_max.
          format: int32
          title: NetCoreOptmemMax
          type: integer
        netCoreRmemDefault:
          description: Sysctl setting net.core.rmem_default.
          format: int32
          title: NetCoreRmemDefault
          type: integer
        netCoreRmemMax:
          description: Sysctl setting net.core.rmem_max.
          format: int32
          title: netCoreRmemMax
          type: integer
        netCoreSomaxconn:
          description: Sysctl setting net.core.somaxconn.
          format: int32
          title: NetCoreSomaxconn
          type: integer
        netCoreWmemDefault:
          description: Sysctl setting net.core.wmem_default.
          format: int32
          title: NetCoreWmemDefault
          type: integer
        netCoreWmemMax:
          description: Sysctl setting net.core.wmem_max.
          format: int32
          title: NetCoreWmemMax
          type: integer
        netIpv4IpLocalPortRange:
          description: Sysctl setting net.ipv4.ip_local_port_range.
          title: NetIpv4IpLocalPortRange
          type: string
        netIpv4NeighDefaultGcThresh1:
          description: Sysctl setting net.ipv4.neigh.default.gc_thresh1.
          format: int32
          title: netIpv4NeighDefaultGcThresh1
          type: integer
        netIpv4NeighDefaultGcThresh2:
          description: Sysctl setting net.ipv4.neigh.default.gc_thresh2.
          format: int32
          title: NetIpv4NeighDefaultGcThresh2
          type: integer
        netIpv4NeighDefaultGcThresh3:
          description: Sysctl setting net.ipv4.neigh.default.gc_thresh3.
          format: int32
          title: NetIpv4NeighDefaultGcThresh3
          type: integer
        netIpv4TcpFinTimeout:
          description: Sysctl setting net.ipv4.tcp_fin_timeout.
          format: int32
          title: NetIpv4TcpFinTimeout
          type: integer
        netIpv4TcpKeepaliveProbes:
          description: Sysctl setting net.ipv4.tcp_keepalive_probes.
          format: int32
          title: NetIpv4TcpKeepaliveProbes
          type: integer
        netIpv4TcpKeepaliveTime:
          description: Sysctl setting net.ipv4.tcp_keepalive_time.
          format: int32
          title: netIpv4TcpKeepaliveTime
          type: integer
        netIpv4TcpMaxSynBacklog:
          description: Sysctl setting net.ipv4.tcp_max_syn_backlog.
          format: int32
          title: NetIpv4TcpMaxSynBacklog
          type: integer
        netIpv4TcpMaxTwBuckets:
          description: Sysctl setting net.ipv4.tcp_max_tw_buckets.
          format: int32
          title: NetIpv4TcpMaxTwBuckets
          type: integer
        netIpv4TcpTwReuse:
          description: Sysctl setting net.ipv4.tcp_tw_reuse.
          title: netIpv4TcpTwReuse
          type: boolean
        netIpv4TcpkeepaliveIntvl:
          description: Sysctl setting net.ipv4.tcp_keepalive_intvl.
          format: int32
          title: NetIpv4TcpkeepaliveIntvl
          type: integer
        netNetfilterNfConntrackBuckets:
          description: Sysctl setting net.netfilter.nf_conntrack_buckets.
          format: int32
          title: netNetfilterNfConntrackBuckets
          type: integer
        netNetfilterNfConntrackMax:
          description: Sysctl setting net.netfilter.nf_conntrack_max.
          format: int32
          title: netNetfilterNfConntrackMax
          type: integer
        vmMaxMapCount:
          description: Sysctl setting vm.max_map_count.
          format: int32
          title: VmMaxMapCount
          type: integer
        vmSwappiness:
          description: Sysctl setting vm.swappiness.
          format: int32
          title: VmSwappiness
          type: integer
        vmVfsCachePressure:
          description: Sysctl setting vm.vfs_cache_pressure.
          format: int32
          title: vmVfsCachePressure
          type: integer
      type: object
    SystemComponentsPlacement:
      properties:
        daemonSetOverride:
          $ref: '#/components/schemas/DaemonSetOverride'
        nodeSelector:
          additionalProperties:
            type: string
          type: object
        tolerations:
          items:
            $ref: '#/components/schemas/DaemonSetOverride_tolerations_inner'
          type: array
      type: object
    SystemProviderOptions:
      type: object
    SystemSyncConfig:
      description: system sync configuration
      example:
        excludedResources:
        - name: Cluster
        gitToSystemSync: true
        includedResources:
        - name: '*'
        sourceAsDestination: true
        sourceRepo:
          path:
            name: some/relative/path
          repository: some-repo
          revision: master
        systemToGitSync: true
      properties:
        committerEmail:
          description: value to use as committer email when committing to destination
            git repository.
          title: committerEmail
          type: string
        destinationRepo:
          $ref: '#/components/schemas/SystemSyncRepo'
        excludedResources:
          description: resources to exclude from syncing
          items:
            $ref: '#/components/schemas/SystemSyncResource'
          title: Exluded Resources
          type: array
        gitToSystemSync:
          description: flag to indicate if git to system sync should be enabled
          title: Enable Git To System Sync
          type: boolean
        includedResources:
          description: resources to include for syncing
          items:
            $ref: '#/components/schemas/SystemSyncResource'
          title: Included Resources
          type: array
        sourceAsDestination:
          description: flag to indicate if source repository should be used as destination
            repository
          title: Use Source As Destination
          type: boolean
        sourceRepo:
          $ref: '#/components/schemas/SystemSyncRepo'
        systemToGitSync:
          description: flat to indicate if system to git sync should be enabled
          title: Enable System To Git Sysnc
          type: boolean
      required:
      - name
      title: System Sync Config
      type: object
    SystemSyncRepo:
      description: git repository configuration for system sync
      example:
        path:
          name: some/relative/path
        repository: some-repo
        revision: master
      properties:
        path:
          $ref: '#/components/schemas/File'
        repository:
          description: name of the git repository
          title: repository
          type: string
        revision:
          description: branch or tag in the git repository
          title: Revision
          type: string
      required:
      - path
      - repository
      - revision
      title: System Sync Repository
      type: object
    SystemSyncResource:
      description: name of the system sync resource
      example:
        name: Workload
      properties:
        name:
          description: name of the system sync resource
          enum:
          - Addon
          - Workload
          - WorkloadTemplate
          - Pipeline
          - Agent
          - Blueprint
          - Project
          - '*'
          title: Name
          type: string
      required:
      - name
      title: System Sync Resource
      type: object
    TerraformConfig:
      description: terraform configuration
      properties:
        backendFilePath:
          $ref: '#/components/schemas/File'
        backendVars:
          description: terraform state store backend variables
          items:
            $ref: '#/components/schemas/KeyValue'
          title: Backend Variables
          type: array
        envVars:
          description: environment variables
          items:
            $ref: '#/components/schemas/KeyValue'
          title: Environment Variables
          type: array
        inputVars:
          description: terraform input variables
          items:
            $ref: '#/components/schemas/KeyValue'
          title: Input Variables
          type: array
        secretGroups:
          description: Pipeline secrets groups
          items:
            type: string
          title: List of secret groups
          type: array
        tfVarsFilePath:
          $ref: '#/components/schemas/File'
        version:
          description: terraform version
          title: Terraform Version
          type: string
      required:
      - version
      title: Terrafrom Config
      type: object
    TerraformDeployHooks:
      properties:
        apply:
          $ref: '#/components/schemas/LifecycleEventHooks'
        init:
          $ref: '#/components/schemas/LifecycleEventHooks'
        output:
          $ref: '#/components/schemas/LifecycleEventHooks'
        plan:
          $ref: '#/components/schemas/LifecycleEventHooks'
        storeState:
          $ref: '#/components/schemas/LifecycleEventHooks'
      type: object
    TerraformDestroyHooks:
      properties:
        destroy:
          $ref: '#/components/schemas/LifecycleEventHooks'
        init:
          $ref: '#/components/schemas/LifecycleEventHooks'
        plan:
          $ref: '#/components/schemas/LifecycleEventHooks'
      type: object
    TerraformInfraAction:
      description: configuration for terraform infra action
      properties:
        action:
          description: terraform action
          enum:
          - Apply
          - Plan
          - Destroy
          title: Terraform Action
          type: string
        backendFilePath:
          $ref: '#/components/schemas/File'
        backendVars:
          description: backend variables
          items:
            $ref: '#/components/schemas/KeyValue'
          title: Backend Variables
          type: array
        destroy:
          description: destroy
          title: Destroy
          type: boolean
        envVars:
          description: environment variables
          items:
            $ref: '#/components/schemas/KeyValue'
          title: Environment Variables
          type: array
        inputVars:
          description: input variables for terrafrom
          items:
            $ref: '#/components/schemas/KeyValue'
          title: Input Variables
          type: array
        refresh:
          description: refresh
          title: Refresh
          type: boolean
        secretGroups:
          description: Pipeline secrets groups
          items:
            type: string
          title: List of secret groups
          type: array
        targets:
          description: terraform targets
          items:
            $ref: '#/components/schemas/TerraformTarget'
          title: Targets
          type: array
        tfVarsFilePath:
          $ref: '#/components/schemas/File'
        version:
          description: terraform version
          title: Terraform Version
          type: string
      required:
      - action
      - version
      title: Terraform Infra Action Configuration
      type: object
    TerraformProviderHooks:
      properties:
        deploy:
          $ref: '#/components/schemas/TerraformDeployHooks'
        destroy:
          $ref: '#/components/schemas/TerraformDestroyHooks'
      type: object
    TerraformProviderOptions:
      properties:
        backendConfigs:
          description: This can be either a path to an HCL file with key/value assignments
            (same format as terraform.tfvars) or a 'key=value' format. This is merged
            with what is in the configuration file
          items:
            type: string
          title: Backend Config
          type: array
        lock:
          description: Don't hold a state lock during the operation. This is dangerous
            if others might concurrently run commands against the same workspace.
          title: Lock
          type: boolean
        lockTimeout:
          description: Duration to retry a state lock.
          title: Lock Timeout
          type: string
        pluginDirs:
          description: "Directory containing plugin binaries. This overrides all default\
            \ search paths for plugins, and prevents the automatic installation of\
            \ plugins. This flag can be used multiple times"
          items:
            type: string
          title: Plugin Dir
          type: array
        refresh:
          description: "Skip checking for external changes to remote objects while\
            \ creating the plan. This can potentially make planning faster, but at\
            \ the expense of possibly planning against a stale record of the remote\
            \ system state."
          title: Refresh
          type: boolean
        refreshOnly:
          description: "Select the refresh only planning mode, which checks whether\
            \ remote objects still match the outcome of the most recent Terraform\
            \ apply but does not propose any actions to undo any changes made outside\
            \ of Terraform."
          title: Refresh Only
          type: boolean
        targetResources:
          description: "Limit the planning operation to only the given module, resource,\
            \ or resource instance and all of its dependencies"
          items:
            type: string
          title: Target Resources
          type: array
        useSystemStateStore:
          description: "Use system state store, by default it is false"
          title: Use System State Store
          type: boolean
        varFiles:
          description: "Load variable values from the given file, in addition to the\
            \ default files terraform.tfvars and *.auto.tfvars. Use this option more\
            \ than once to include more than one variables files"
          items:
            type: string
          title: Var Files
          type: array
        version:
          description: Terraform version
          title: Version
          type: string
      type: object
    TerraformTarget:
      description: name of terraform target
      example:
        name: some-target
      properties:
        name:
          description: name of terraform target
          title: Name
          type: string
      required:
      - name
      title: Terraform Target
      type: object
    TerragruntProviderOptions:
      type: object
    TriggerSpec:
      description: trigger specification
      example:
        config:
          cron:
            cronExpression: '*/5 * * * *'
            repo:
              git:
                paths:
                - name: some/relative/path
                provider: Github
                repository: some-repo
                revision: master
        name: some-trigger
        type: Cron
      properties:
        config:
          $ref: '#/components/schemas/TriggerSpec_config'
        name:
          description: name of the trigger
          title: Trigger Name
          type: string
        type:
          description: trigger type
          enum:
          - Webhook
          - Cron
          title: Trigger type
          type: string
        variables:
          description: trigger scoped variables
          items:
            $ref: '#/components/schemas/VariableSpec'
          title: Trigger Variables
          type: array
      required:
      - config
      - name
      - type
      title: Trigger Specification
      type: object
    Upgradesettings:
      properties:
        maxSurge:
          description: "This can either be set to an integer (e.g. 5) or a percentage\
            \ (e.g. 50%). If a percentage is specified, it is the percentage of the\
            \ total agent pool size at the time of the upgrade. For percentages, fractional\
            \ nodes are rounded up. If not specified, the default is 1. For more information,\
            \ including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade"
          title: Max Surge
          type: string
      type: object
    UploadedHelmArtifact:
      description: represents an Helm chart and zero or more values files
      example:
        chartPath:
        - name: file://relative/path/to/some/chart.tgz
      properties:
        chartPath:
          $ref: '#/components/schemas/File'
        valuesPaths:
          description: represents a Helm Values by their relative path
          items:
            $ref: '#/components/schemas/File'
          title: ValuesPaths
          type: array
      required:
      - chartPath
      title: Uploaded Helm Artifact
      type: object
    UploadedNamespace:
      description: uploaded namespace
      example:
        path:
          name: some/path/namespace.yaml
      properties:
        path:
          $ref: '#/components/schemas/File'
      title: Uploaded Namespace
      type: object
    UploadedYAMLArtifact:
      description: represents a list of YAML files
      example:
        paths:
        - name: file://relative/path/to/some/file.yaml
      properties:
        paths:
          description: list of YAML files represented by their relative path
          items:
            $ref: '#/components/schemas/File'
          title: Paths
          type: array
      required:
      - paths
      title: Uploaded YAML Artifact
      type: object
    Userassignedidentities:
      properties:
        bindingSelector:
          description: The binding selector to use for the AzureIdentityBinding resource.
          title: Binding Selector
          type: string
        identity:
          $ref: '#/components/schemas/Identity1'
        name:
          description: The name of the pod identity.
          title: Name
          type: string
        namespace:
          description: The namespace of the pod identity.
          title: Namespace
          type: string
      type: object
    Userassignedidentityexceptions:
      properties:
        name:
          description: The name of the pod identity exception.
          title: Name
          type: string
        namespace:
          description: The namespace of the pod identity exception.
          title: Namespace
          type: string
        podLabels:
          additionalProperties:
            type: string
          description: The pod labels to match.
          title: Pod Labels
          type: object
      type: object
    Variable:
      properties:
        name:
          description: Name of the variable
          title: Name
          type: string
        options:
          $ref: '#/components/schemas/VariableOptions'
        value:
          description: Value of the variable in the specified format
          title: Value
          type: string
        valueType:
          description: Specify the variable value type
          title: ValueType
          type: string
      type: object
    VariableOptions:
      properties:
        description:
          description: Description of the variable
          title: Description
          type: string
        override:
          $ref: '#/components/schemas/VariableOverrideOptions'
        readOnly:
          description: "Specify whether variable is read only or not, by default it\
            \ is writable"
          title: ReadOnly
          type: boolean
        required:
          description: "Specify whether this variable is required or optional, by\
            \ default it is optional"
          title: Required
          type: boolean
        sensitive:
          description: "Determines whether the value is sensitive or not, accordingly\
            \ applies encryption on it"
          title: Sensitive
          type: boolean
      type: object
    VariableOverrideOptions:
      properties:
        restrictedValues:
          description: "If the override type is restricted, values it is restricted\
            \ to"
          items:
            type: string
          title: Restricted Values
          type: array
        type:
          description: Specify the type of ovverride this variable supports
          title: Override Type
          type: string
      type: object
    VariableSpec:
      description: specification of variables
      example:
        name: some-variable
        type: String
        value: some-value
      properties:
        name:
          description: name of the variable
          title: Name
          type: string
        type:
          description: type of the variable
          enum:
          - String
          - Number
          - Map
          - List
          - Time
          - Duration
          - Boolean
          title: Type
          type: string
        value:
          description: value of the variable
          title: Value
          type: string
      required:
      - name
      - type
      - value
      title: Variable Specification
      type: object
    VaultClusterStatus:
      properties:
        auxiliaryTask:
          type: string
        enabled:
          type: boolean
        secretStore:
          type: string
      type: object
    WebhookTriggerConfig:
      description: webhook trigger configuration
      example:
        repo:
          git:
            paths:
            - name: some/relative/path
            provider: Github
            repository: some-repo
            revision: master
      properties:
        repo:
          $ref: '#/components/schemas/CronTriggerConfig_repo'
      required:
      - repo
      title: Webhook Triger Configuration
      type: object
    Windowsprofile:
      properties:
        adminUsername:
          description: "Specifies the name of the administrator account, Restriction:\
            \ Cannot end in '.', Minimum-length: 1 character, Max-length: 20 characters"
          title: Admin Username
          type: string
        enableCSIProxy:
          description: "For more details on CSI proxy, see the CSI proxy GitHub repo."
          title: Enable CSI Proxy
          type: boolean
        gmsaProfile:
          $ref: '#/components/schemas/Gmsaprofile'
        licenseType:
          description: "The license type to use for Windows VMs. See Azure Hybrid\
            \ User Benefits for more details. Valid values are None, Windows_Server."
          title: License Type
          type: string
      type: object
    Workload:
      description: Workload definition
      example:
        apiVersion: apps.k8smgmt.io/v3
        kind: Workload
        metadata:
          name: some-name
          project: defaultproject
        spec:
          artifact:
            chartPath:
              name: relative/path/to/some/chart.tgz
            repository: some-repo
            revision: master
          drift:
            action: Deny
            enabled: true
          namespace: some-namespace
          placement:
            labels:
            - key: some-key
            - key: some-key
          version: v1
      properties:
        apiVersion:
          default: apps.k8smgmt.io/v3
          description: API Version of the workload resource
          title: API Version
          type: string
        kind:
          default: Workload
          description: Kind of the workload resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/WorkloadSpec'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: Workload
      type: object
    WorkloadList:
      description: Workload list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: apps.k8smgmt.io/v3
          kind: Workload
          metadata:
            name: some-name
            project: defaultproject
          spec:
            artifact:
              chartPath:
                name: relative/path/to/some/chart.tgz
              repository: some-repo
              revision: master
            drift:
              action: Deny
              enabled: true
            namespace: some-namespace
            placement:
              labels:
              - key: some-key
              - key: some-key
            version: v1
        - apiVersion: apps.k8smgmt.io/v3
          kind: Workload
          metadata:
            name: some-name
            project: defaultproject
          spec:
            artifact:
              chartPath:
                name: relative/path/to/some/chart.tgz
              repository: some-repo
              revision: master
            drift:
              action: Deny
              enabled: true
            namespace: some-namespace
            placement:
              labels:
              - key: some-key
              - key: some-key
            version: v1
      properties:
        apiVersion:
          description: API Version of the workload list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the workload resources
          items:
            $ref: '#/components/schemas/Workload'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the workload list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: WorkloadList
      type: object
    WorkloadSpec:
      description: workload specification
      example:
        artifact:
          chartPath:
            name: relative/path/to/some/chart.tgz
          repository: some-repo
          revision: master
        drift:
          action: Deny
          enabled: true
        namespec: some-namespace
        placement:
          labels:
          - key: some-key
          - key: some-key
        version: v1
      properties:
        artifact:
          $ref: '#/components/schemas/ArtifactSpec'
        drift:
          $ref: '#/components/schemas/DriftSpec'
        namespace:
          description: namespace of the workload resource
          title: Namespace
          type: string
        placement:
          $ref: '#/components/schemas/PlacementSpec'
        version:
          description: version of the workload resource
          title: Version
          type: string
      title: Workload Specification
      type: object
    WorkloadTemplate:
      description: Workload template definition
      example:
        apiVersion: apps.k8smgmt.io/v3
        kind: WorkloadTemplate
        metadata:
          name: some-name
          project: defaultproject
        spec:
          artifact:
            chartPath:
              name: relative/path/to/some/chart.tgz
            repository: some-repo
            revision: master
      properties:
        apiVersion:
          default: apps.k8smgmt.io/v3
          description: API Version of the workload template resource
          title: API Version
          type: string
        kind:
          default: WorkloadTemplate
          description: Kind of the workload template resource
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/WorkloadTemplateSpec'
      required:
      - apiVersion
      - kind
      - metadata
      - spec
      title: WorkloadTemplate
      type: object
    WorkloadTemplateList:
      description: Workload Template list
      example:
        metadata:
          offset: 1
          count: 0
          limit: 6
        apiVersion: apiVersion
        kind: kind
        items:
        - apiVersion: apps.k8smgmt.io/v3
          kind: WorkloadTemplate
          metadata:
            name: some-name
            project: defaultproject
          spec:
            artifact:
              chartPath:
                name: relative/path/to/some/chart.tgz
              repository: some-repo
              revision: master
        - apiVersion: apps.k8smgmt.io/v3
          kind: WorkloadTemplate
          metadata:
            name: some-name
            project: defaultproject
          spec:
            artifact:
              chartPath:
                name: relative/path/to/some/chart.tgz
              repository: some-repo
              revision: master
      properties:
        apiVersion:
          description: API Version of the workload template list resource
          readOnly: true
          title: API Version
          type: string
        items:
          description: List of the workload template resources
          items:
            $ref: '#/components/schemas/WorkloadTemplate'
          readOnly: true
          title: Items
          type: array
        kind:
          description: Kind of the workload template list resource
          readOnly: true
          title: Kind
          type: string
        metadata:
          $ref: '#/components/schemas/ListMetadata'
      readOnly: true
      title: WorkloadTemplateList
      type: object
    WorkloadTemplateSpec:
      description: workload template specification
      example:
        artifact:
          chartPath:
            name: relative/path/to/some/chart.tgz
          repository: some-repo
          revision: master
      properties:
        artifact:
          $ref: '#/components/schemas/ArtifactSpec'
        sharing:
          $ref: '#/components/schemas/SharingSpec'
      title: Workload Template Specification
      type: object
    YAMLInGitRepo:
      description: represents YAML files in a Git repo
      example:
        paths:
        - name: relative/path/to/some/file.yaml
        repository: some-repo
        revision: master
      properties:
        paths:
          description: relative paths to file in the git repository
          items:
            $ref: '#/components/schemas/File'
          title: Paths
          type: array
        repository:
          description: name of the git repository
          title: Repository
          type: string
        revision:
          description: branch or tag in the git repository
          title: Revision
          type: string
      required:
      - paths
      - repository
      - revision
      title: YAML In Git Repo Artifact
      type: object
    YAMLOptions:
      description: options for deploying YAML artifacts
      example:
        disableOpenAPIValidation: true
        force: false
      properties:
        disableOpenAPIValidation:
          description: disable OpenAPI validation while deploying the YAML
          title: Disable OpenAPI Validation
          type: boolean
        force:
          description: deploy YAML artifact with force flag
          title: Force
          type: boolean
      title: YAML Options
      type: object
    addonProfile:
      properties:
        config:
          description: Addon Profile Config
          format: byte
          title: Config
          type: string
        enabled:
          description: Whether the addon profile is enabled
          title: Enabled
          type: boolean
      type: object
    Uploaded_YAML_Artifact:
      description: represents a list of YAML files
      example:
        paths:
        - name: file://relative/path/to/some/file.yaml
      properties:
        paths:
          description: list of YAML files represented by their relative path
          items:
            $ref: '#/components/schemas/File'
          title: Paths
          type: array
      required:
      - paths
      title: Uploaded YAML Artifact
      type: object
    Uploaded_Helm_Artifact:
      description: represents an Helm chart and zero or more values files
      example:
        chartPath:
        - name: file://relative/path/to/some/chart.tgz
      properties:
        chartPath:
          $ref: '#/components/schemas/File'
        valuesPaths:
          description: represents a Helm Values by their relative path
          items:
            $ref: '#/components/schemas/File'
          title: ValuesPaths
          type: array
      required:
      - chartPath
      title: Uploaded Helm Artifact
      type: object
    YAML_In_Git_Repo_Artifact:
      description: represents YAML files in a Git repo
      example:
        paths:
        - name: relative/path/to/some/file.yaml
        repository: some-repo
        revision: master
      properties:
        paths:
          description: relative paths to file in the git repository
          items:
            $ref: '#/components/schemas/File'
          title: Paths
          type: array
        repository:
          description: name of the git repository
          title: Repository
          type: string
        revision:
          description: branch or tag in the git repository
          title: Revision
          type: string
      required:
      - paths
      - repository
      - revision
      title: YAML In Git Repo Artifact
      type: object
    Helm_in_Git_Repo_Artifact:
      description: represents Helm files in a Git repo
      example:
        chartPath:
          name: relative/path/to/some/chart.tgz
        repository: some-repo
        revision: master
      properties:
        chartPath:
          $ref: '#/components/schemas/File'
        repository:
          description: name of the git repository
          title: Repository
          type: string
        revision:
          description: branch or tag in the git repository
          title: Revision
          type: string
        valuesPaths:
          description: relative paths to value file in the git repository
          items:
            $ref: '#/components/schemas/File'
          title: Value Paths
          type: array
        valuesRef:
          $ref: '#/components/schemas/OverrideRepoReference'
      required:
      - chartPath
      - repository
      - revision
      title: Helm in Git Repo Artifact
      type: object
    Helm_in_Helm_Repo:
      description: represents Helm chart in a Helm repo
      example:
        chartName: some-chart
        chartVersion: 1.2.3
        repository: some-repo
      properties:
        chartName:
          description: name of the chart
          title: Chart Name
          type: string
        chartVersion:
          description: version of the chart
          title: Chart Version
          type: string
        repository:
          description: name of the helm repository
          title: Repository
          type: string
        valuesPaths:
          description: relative paths to values files
          items:
            $ref: '#/components/schemas/File'
          title: Values Paths
          type: array
        valuesRef:
          $ref: '#/components/schemas/OverrideRepoReference'
      required:
      - chartName
      - chartVersion
      - repository
      title: Helm in Helm Repo
      type: object
    Managed_Alert_Manager:
      description: represents managed alert manager
      example:
        configmap:
          name: file://path/to/some-configmap.yaml
        configuration:
          name: file://path/to/some-configuration.yaml
        secret:
          name: file://path/to/some-secret.yaml
        statefulset:
          name: file://path/to/some-statefulset.yaml
      properties:
        configmap:
          $ref: '#/components/schemas/File'
        configuration:
          $ref: '#/components/schemas/File'
        secret:
          $ref: '#/components/schemas/File'
        statefulset:
          $ref: '#/components/schemas/File'
      required:
      - configmap
      - configuration
      - secret
      - statefulset
      title: Managed Alert Manager
      type: object
    Helm_in_Catalog:
      description: represents Helm chart in a Catalog
      example:
        catalog: some-catalog
        chartName: some-chart
        chartVersion: 1.2.3
      properties:
        catalog:
          description: name of the helm catalog
          title: Catalog
          type: string
        chartName:
          description: name of the chart
          title: Chart Name
          type: string
        chartVersion:
          description: version of the chart
          title: Chart Version
          type: string
        valuesPaths:
          description: relative paths to values files
          items:
            $ref: '#/components/schemas/File'
          title: Values Paths
          type: array
        valuesRef:
          $ref: '#/components/schemas/OverrideRepoReference'
      required:
      - chartName
      - chartVersion
      - repository
      title: Helm in Catalog
      type: object
    ArtifactSpec_artifact:
      oneOf:
      - $ref: '#/components/schemas/Uploaded_YAML_Artifact'
      - $ref: '#/components/schemas/Uploaded_Helm_Artifact'
      - $ref: '#/components/schemas/YAML_In_Git_Repo_Artifact'
      - $ref: '#/components/schemas/Helm_in_Git_Repo_Artifact'
      - $ref: '#/components/schemas/Helm_in_Helm_Repo'
      - $ref: '#/components/schemas/Managed_Alert_Manager'
      - $ref: '#/components/schemas/Helm_in_Catalog'
    Helm_Options:
      description: options for deploying Helm artifacts
      example:
        atomic: false
        noHooks: true
        setString:
        - key1=val1
        - key2=val2
        skipCRDs: true
      properties:
        atomic:
          description: deploy Helm artifact with atomic flag
          title: Atomic
          type: boolean
        cleanUpOnFail:
          description: cleanup deployed resources when chart fails to deploy
          title: Cleanup on fail
          type: boolean
        description:
          description: custom description for the release
          title: Description
          type: string
        disableOpenAPIValidation:
          description: disable OpenAPI validation while deploying the chart
          title: Disable OpenAPI Validation
          type: boolean
        force:
          description: deploy Helm artifact with force flag
          title: Force
          type: boolean
        keepHistory:
          description: keep release history after uninstalling
          title: Keep History
          type: boolean
        maxHistory:
          description: limit Helm artifact history
          format: int32
          title: Max History
          type: integer
        noHooks:
          description: deploy Helm artifact without hooks
          title: No Hooks
          type: boolean
        renderSubChartNotes:
          description: render sub chart notes
          title: Render Sub Chart Notes
          type: boolean
        resetValues:
          description: reset existing helm values
          title: Reset Values
          type: boolean
        reuseValues:
          description: reuse existing values
          title: Reuse Values
          type: boolean
        setString:
          description: pass custom helm values as key=value
          items:
            type: string
          title: Set String
          type: array
        skipCRDs:
          description: skip deploying crds
          title: Skip CRDs
          type: boolean
        timeout:
          description: timeout for waiting for the resources to become ready
          title: Timeout
          type: string
        wait:
          description: deploy Helm artifact with wait flag
          title: Wait
          type: boolean
      title: Helm Options
      type: object
    YAML_Options:
      description: options for deploying YAML artifacts
      example:
        disableOpenAPIValidation: true
        force: false
      properties:
        disableOpenAPIValidation:
          description: disable OpenAPI validation while deploying the YAML
          title: Disable OpenAPI Validation
          type: boolean
        force:
          description: deploy YAML artifact with force flag
          title: Force
          type: boolean
      title: YAML Options
      type: object
    ArtifactSpec_options:
      oneOf:
      - $ref: '#/components/schemas/Helm_Options'
      - $ref: '#/components/schemas/YAML_Options'
    endDate:
      description: endDate
      properties:
        values:
          format: date-time
          type: string
      title: endDate
    startDate:
      description: startDate
      properties:
        values:
          format: date-time
          type: string
      title: startDate
    ClusterSpec_config_oneOf:
      properties:
        raw:
          format: byte
          type: string
      type: object
    ClusterSpec_config_oneOf_1:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        spec:
          $ref: '#/components/schemas/AksV3Spec'
      type: object
    V3_Imported_Cluster_Specifications:
      description: imported cluster specification
      example:
        kubernetesProvider: AKS
        location: aks/<location>
        provisionEnvironment: CLOUD
      properties:
        kubernetesProvider:
          description: kubernetes provider of the cluster
          enum:
          - AKS
          - EKS
          - GKE
          - OPENSHIFT
          - OTHER
          - RKE
          - EKSANYWHERE
          title: Cluster Kubernetes Provider
          type: string
        location:
          description: location of the cluster
          title: Cluster Location
          type: string
        provisionEnvironment:
          description: provisioning environment for the cluster
          enum:
          - CLOUD
          - ONPREM
          title: Cluster Provision Environment
          type: string
      title: V3 Imported Cluster Specifications
      type: object
    ClusterSpec_config:
      oneOf:
      - $ref: '#/components/schemas/ClusterSpec_config_oneOf'
      - $ref: '#/components/schemas/ClusterSpec_config_oneOf_1'
      - $ref: '#/components/schemas/V3_Imported_Cluster_Specifications'
    ContainerRegistrySpec_credentials_oneOf:
      properties:
        password:
          type: string
        username:
          type: string
      type: object
    ContainerRegistrySpec_credentials_oneOf_1:
      properties:
        accessKeyID:
          type: string
        accessSecretKey:
          type: string
        region:
          type: string
      type: object
    ContainerRegistrySpec_credentials_oneOf_2:
      properties:
        jsonKeyData:
          type: string
      type: object
    ContainerRegistrySpec_credentials_oneOf_3:
      properties:
        servicePrincipalID:
          type: string
        servicePrincipalPassword:
          type: string
      type: object
    ContainerRegistrySpec_credentials:
      oneOf:
      - $ref: '#/components/schemas/ContainerRegistrySpec_credentials_oneOf'
      - $ref: '#/components/schemas/ContainerRegistrySpec_credentials_oneOf_1'
      - $ref: '#/components/schemas/ContainerRegistrySpec_credentials_oneOf_2'
      - $ref: '#/components/schemas/ContainerRegistrySpec_credentials_oneOf_3'
    AWS_Credentials_Role:
      description: AWS Credentials Role definition
      properties:
        accountId:
          title: Account Id
          type: string
        arn:
          title: Arn
          type: string
        externalId:
          title: External Id
          type: string
        type:
          default: Role
          description: Type of AWS Credentials Access
          enum:
          - Role
          - AccessKey
          title: Type
          type: string
      required:
      - accountId
      - arn
      - externalId
      - type
      title: AWS Credentials Role
      type: object
    AWS_Credentials_Access_Key:
      description: AWS Credentials Access Key definition
      properties:
        accessId:
          title: Access ID
          type: string
        secretKey:
          title: Secret Key
          type: string
        sessionToken:
          title: Session Token
          type: string
        type:
          default: AccessKey
          description: Type of AWS Credentials Access
          enum:
          - Role
          - AccessKey
          title: Type
          type: string
      required:
      - accessId
      - secretKey
      - type
      title: AWS Credentials Access Key
      type: object
    GCP_Credentials:
      description: GCP Credentials definition
      properties:
        file:
          description: Blob content of GCP Credentials Access JSON file
          title: File
          type: string
      required:
      - file
      title: GCP Credentials
      type: object
    Azure_Credentials:
      description: Azure Credentials definition
      properties:
        clientId:
          title: Client ID
          type: string
        clientSecret:
          title: Client Secret
          type: string
        subscriptionId:
          title: Subscription ID
          type: string
        tenantId:
          title: Tenant ID
          type: string
      required:
      - clientId
      - clientSecret
      - subscriptionId
      - tenantId
      title: Azure Credentials
      type: object
    VSphere_Credentials:
      description: VSphere Credentials definition
      properties:
        gatewayId:
          title: Gateway ID
          type: string
        password:
          title: Password
          type: string
        username:
          title: Username
          type: string
        vsphereServer:
          title: VSphere Server URI
          type: string
      required:
      - gatewayId
      - password
      - username
      - vsphereServer
      title: VSphere Credentials
      type: object
    Minio_Credentials:
      description: Minio Credentials definition
      properties:
        accessId:
          title: Access ID
          type: string
        secretKey:
          title: Secret Key
          type: string
      required:
      - accessId
      - secretKey
      title: Minio Credentials
      type: object
    CredentialsSpec_credentials:
      oneOf:
      - $ref: '#/components/schemas/AWS_Credentials_Role'
      - $ref: '#/components/schemas/AWS_Credentials_Access_Key'
      - $ref: '#/components/schemas/GCP_Credentials'
      - $ref: '#/components/schemas/Azure_Credentials'
      - $ref: '#/components/schemas/VSphere_Credentials'
      - $ref: '#/components/schemas/Minio_Credentials'
    Trigger_Git_Repo_Configuration:
      description: git repo configuration for pipeline trigger
      example:
        paths:
        - name: some/relative/path
        provider: Github
        repository: some-repo
        revision: master
      properties:
        paths:
          description: paths in the git repo to watch for changes
          items:
            $ref: '#/components/schemas/File'
          title: Paths
          type: array
        provider:
          description: provider for the git repo
          enum:
          - Github
          - Gitlab
          title: Provider
          type: string
        repository:
          description: name of the git repository
          title: Repository
          type: string
        revision:
          description: branch or tag in the git repository to watch for changes
          title: Revision
          type: string
      required:
      - paths
      - provider
      - repository
      - revision
      title: Trigger Git Repo Configuration
      type: object
    Trigger_Helm_Repo_Configuration:
      description: helm repo configuration for pipeline trigger
      example:
        chartName: some-chart
        chartVersion: 1.2.3
        provider: Github
      properties:
        chartName:
          description: name of the chart in repo
          title: Chart Name
          type: string
        chartVersion:
          description: version of the chart in repo
          title: Chart Version
          type: string
        repository:
          description: name of the helm repository
          title: Repository
          type: string
      required:
      - chartName
      - chartVersion
      - repository
      title: Trigger Helm Repo Configuration
      type: object
    CronTriggerConfig_repo:
      oneOf:
      - $ref: '#/components/schemas/Trigger_Git_Repo_Configuration'
      - $ref: '#/components/schemas/Trigger_Helm_Repo_Configuration'
    DaemonSetOverride_tolerations_inner:
      properties:
        effect:
          type: string
        key:
          type: string
        operator:
          type: string
        tolerationSeconds:
          format: int64
          type: integer
        value:
          type: string
      type: object
    Extra_data:
      example:
        fields:
          key: ""
      properties:
        fields:
          additionalProperties: true
          type: object
    Terraform_Infra_Action_Configuration:
      description: configuration for terraform infra action
      properties:
        action:
          description: terraform action
          enum:
          - Apply
          - Plan
          - Destroy
          title: Terraform Action
          type: string
        backendFilePath:
          $ref: '#/components/schemas/File'
        backendVars:
          description: backend variables
          items:
            $ref: '#/components/schemas/KeyValue'
          title: Backend Variables
          type: array
        destroy:
          description: destroy
          title: Destroy
          type: boolean
        envVars:
          description: environment variables
          items:
            $ref: '#/components/schemas/KeyValue'
          title: Environment Variables
          type: array
        inputVars:
          description: input variables for terrafrom
          items:
            $ref: '#/components/schemas/KeyValue'
          title: Input Variables
          type: array
        refresh:
          description: refresh
          title: Refresh
          type: boolean
        secretGroups:
          description: Pipeline secrets groups
          items:
            type: string
          title: List of secret groups
          type: array
        targets:
          description: terraform targets
          items:
            $ref: '#/components/schemas/TerraformTarget'
          title: Targets
          type: array
        tfVarsFilePath:
          $ref: '#/components/schemas/File'
        version:
          description: terraform version
          title: Terraform Version
          type: string
      required:
      - action
      - version
      title: Terraform Infra Action Configuration
      type: object
    InfraProvisionerConfig_action:
      oneOf:
      - $ref: '#/components/schemas/Terraform_Infra_Action_Configuration'
    Terrafrom_Config:
      description: terraform configuration
      properties:
        backendFilePath:
          $ref: '#/components/schemas/File'
        backendVars:
          description: terraform state store backend variables
          items:
            $ref: '#/components/schemas/KeyValue'
          title: Backend Variables
          type: array
        envVars:
          description: environment variables
          items:
            $ref: '#/components/schemas/KeyValue'
          title: Environment Variables
          type: array
        inputVars:
          description: terraform input variables
          items:
            $ref: '#/components/schemas/KeyValue'
          title: Input Variables
          type: array
        secretGroups:
          description: Pipeline secrets groups
          items:
            type: string
          title: List of secret groups
          type: array
        tfVarsFilePath:
          $ref: '#/components/schemas/File'
        version:
          description: terraform version
          title: Terraform Version
          type: string
      required:
      - version
      title: Terrafrom Config
      type: object
    InfraProvisionerSpec_config:
      oneOf:
      - $ref: '#/components/schemas/Terrafrom_Config'
    Uploaded_Namespace:
      description: uploaded namespace
      example:
        path:
          name: some/path/namespace.yaml
      properties:
        path:
          $ref: '#/components/schemas/File'
      title: Uploaded Namespace
      type: object
    Namespace_From_Repostiroy:
      description: namespace from git repository
      example:
        path:
          name: relative/path/to/some/file.yaml
        repository: some-repo
        revision: master
      properties:
        path:
          $ref: '#/components/schemas/File'
        repository:
          description: name of the git repository
          title: Repository
          type: string
        revision:
          description: branch or tag in the git repository
          title: Revision
          type: string
      title: Namespace From Repostiroy
      type: object
    NamespaceSpec_artifact:
      oneOf:
      - $ref: '#/components/schemas/Uploaded_Namespace'
      - $ref: '#/components/schemas/Namespace_From_Repostiroy'
    Inline_Override_Template:
      description: inline override template definition
      example:
        inline: "CustomVar: {{ .previousStage.name }}"
      properties:
        inline:
          description: inline override template
          title: Inline Template
          type: string
      required:
      - inline
      title: Inline Override Template
      type: object
    Repo_Override_Template:
      description: repo based override template definition
      example:
        paths:
        - name: /path/to/some/file.yaml
        repository: some-repo
        revision: master
      properties:
        paths:
          description: paths in the repository containing the override template
          items:
            $ref: '#/components/schemas/File'
          title: Paths
          type: array
        repository:
          description: git repository containing the override template
          title: Repository
          type: string
        revision:
          description: branch or tag in the repository
          title: Revision
          type: string
      required:
      - paths
      - repository
      - revision
      title: Repo Override Template
      type: object
    OverrideTemplate_template:
      oneOf:
      - $ref: '#/components/schemas/Inline_Override_Template'
      - $ref: '#/components/schemas/Repo_Override_Template'
    PreConditionSpec_config:
      oneOf:
      - description: precondition expression
        title: Expression
        type: string
    RepositorySpec_credentials_oneOf:
      properties:
        privateKey:
          type: string
      type: object
    RepositorySpec_credentials:
      oneOf:
      - $ref: '#/components/schemas/ContainerRegistrySpec_credentials_oneOf'
      - $ref: '#/components/schemas/RepositorySpec_credentials_oneOf'
    Approval_Configuration:
      description: approval configuration
      example:
        approvers:
        - ssoUser: true
          userName: some-user@test.com
        timeout: 120s
        type: Email
      properties:
        approvers:
          description: list of approvers
          items:
            $ref: '#/components/schemas/Approver'
          title: Approvers
          type: array
        timeout:
          description: timeout for approval
          title: Approval Timeout
          type: string
        type:
          description: type of approval
          enum:
          - Email
          title: Approval Type
          type: string
      required:
      - approvers
      - types
      title: Approval Configuration
      type: object
    Deploy_Workload_Configuration:
      description: deploy workload configuration
      example:
        workload: some-workload
      properties:
        useRevisionFromWebhookTriggerEvent:
          description: flag to indicate weather to deploy workload using revision
            recieved from webhook trigger
          title: Use Revision From Webhook Trigger To Deploy
          type: boolean
        workload:
          description: name of the workload
          title: Workload
          type: string
      required:
      - workload
      title: Deploy Workload Configuration
      type: object
    Deploy_Workload_Template_Config:
      description: deploy workload template configuration
      example:
        namespace: some-namespace
        overrides:
        - paths:
          - name: /path/to/some/file.yaml
          repository: some-repo
          revision: master
        placement:
          labels:
          - key: some-key
          - key: some-key
        workloadTemplate: some-template
      properties:
        namespace:
          description: namespace workload template should be deployed in
          title: Namespace
          type: string
        overrides:
          description: overrides for workload template
          items:
            $ref: '#/components/schemas/OverrideTemplate'
          title: Overrides
          type: array
        placement:
          $ref: '#/components/schemas/PlacementSpec'
        useRevisionFromWebhookTriggerEvent:
          description: flag to indicate weather to deploy workload using revision
            recieved from webhook trigger
          title: Use Revision From Webhook Trigger To Deploy
          type: boolean
        workloadTemplate:
          description: name of workload template
          title: Workload Template
          type: string
      required:
      - namespace
      - overrides
      - placement
      - workloadTemplate
      title: Deploy Workload Template Config
      type: object
    Infrastructre_Provisioner_Configuration:
      description: infrastructure provisioner configuration
      properties:
        action:
          $ref: '#/components/schemas/InfraProvisionerConfig_action'
        agents:
          description: list of agents to be used for provisioning
          items:
            $ref: '#/components/schemas/AgentMeta'
          title: Agents
          type: array
        persistWorkingDirectory:
          description: flag to indicate if working directory should be persisted
          title: Persist Working Directory
          type: boolean
        provisioner:
          description: name of the infrastructure provisioner
          title: Infrastructure Provisioner
          type: string
        revision:
          description: branch or tag for the git repository used in infrastructure
            provisioner
          title: Revision
          type: string
        type:
          description: type of infraprovisioner
          enum:
          - Terraform
          title: Type
          type: string
        workingDirectory:
          description: working directory for the provisioner
          title: Workload Directory
          type: string
      required:
      - action
      - agents
      - provisioner
      - revision
      - type
      title: Infrastructre Provisioner Configuration
      type: object
    System_Sync_Config:
      description: system sync configuration
      example:
        excludedResources:
        - name: Cluster
        gitToSystemSync: true
        includedResources:
        - name: '*'
        sourceAsDestination: true
        sourceRepo:
          path:
            name: some/relative/path
          repository: some-repo
          revision: master
        systemToGitSync: true
      properties:
        committerEmail:
          description: value to use as committer email when committing to destination
            git repository.
          title: committerEmail
          type: string
        destinationRepo:
          $ref: '#/components/schemas/SystemSyncRepo'
        excludedResources:
          description: resources to exclude from syncing
          items:
            $ref: '#/components/schemas/SystemSyncResource'
          title: Exluded Resources
          type: array
        gitToSystemSync:
          description: flag to indicate if git to system sync should be enabled
          title: Enable Git To System Sync
          type: boolean
        includedResources:
          description: resources to include for syncing
          items:
            $ref: '#/components/schemas/SystemSyncResource'
          title: Included Resources
          type: array
        sourceAsDestination:
          description: flag to indicate if source repository should be used as destination
            repository
          title: Use Source As Destination
          type: boolean
        sourceRepo:
          $ref: '#/components/schemas/SystemSyncRepo'
        systemToGitSync:
          description: flat to indicate if system to git sync should be enabled
          title: Enable System To Git Sysnc
          type: boolean
      required:
      - name
      title: System Sync Config
      type: object
    StageSpec_config:
      oneOf:
      - $ref: '#/components/schemas/Approval_Configuration'
      - $ref: '#/components/schemas/Deploy_Workload_Configuration'
      - $ref: '#/components/schemas/Deploy_Workload_Template_Config'
      - $ref: '#/components/schemas/Infrastructre_Provisioner_Configuration'
      - $ref: '#/components/schemas/System_Sync_Config'
    Last_Updated:
      description: when the condition status is last updated
      example:
        values: 2000-01-23T04:56:07.000+00:00
      properties:
        values:
          format: date-time
          type: string
      readOnly: true
      title: Last Updated
    StatusTime_value:
      properties:
        values:
          format: date-time
          type: string
    Webhook_Triger_Configuration:
      description: webhook trigger configuration
      example:
        repo:
          git:
            paths:
            - name: some/relative/path
            provider: Github
            repository: some-repo
            revision: master
      properties:
        repo:
          $ref: '#/components/schemas/CronTriggerConfig_repo'
      required:
      - repo
      title: Webhook Triger Configuration
      type: object
    Cron_Triger_Configuration:
      description: cron trigger configuration
      example:
        cronExpression: '*/5 * * * *'
        repo:
          git:
            paths:
            - name: some/relative/path
            provider: Github
            repository: some-repo
            revision: master
      properties:
        cronExpression:
          description: cron expression for trigger
          title: Cron Expression
          type: string
        repo:
          $ref: '#/components/schemas/CronTriggerConfig_repo'
      required:
      - cronExpression
      - repo
      title: Cron Triger Configuration
      type: object
    TriggerSpec_config:
      oneOf:
      - $ref: '#/components/schemas/Webhook_Triger_Configuration'
      - $ref: '#/components/schemas/Cron_Triger_Configuration'
  securitySchemes:
    ApiKeyAuth:
      description: API Key
      in: header
      name: X-API-KEY
      type: apiKey
