/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the MonitoringDiscoveryConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonitoringDiscoveryConfig{}

// MonitoringDiscoveryConfig discovery configuration for the monitoring component
type MonitoringDiscoveryConfig struct {
	// labels of the monitoring component
	Labels *map[string]string `json:"labels,omitempty"`
	// namespace of the monitoring component
	Namespace string `json:"namespace"`
	// resource name of the monitoring component
	Resource string `json:"resource"`
}

// NewMonitoringDiscoveryConfig instantiates a new MonitoringDiscoveryConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringDiscoveryConfig(namespace string, resource string) *MonitoringDiscoveryConfig {
	this := MonitoringDiscoveryConfig{}
	this.Namespace = namespace
	this.Resource = resource
	return &this
}

// NewMonitoringDiscoveryConfigWithDefaults instantiates a new MonitoringDiscoveryConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringDiscoveryConfigWithDefaults() *MonitoringDiscoveryConfig {
	this := MonitoringDiscoveryConfig{}
	return &this
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *MonitoringDiscoveryConfig) GetLabels() map[string]string {
	if o == nil || isNil(o.Labels) {
		var ret map[string]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringDiscoveryConfig) GetLabelsOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *MonitoringDiscoveryConfig) HasLabels() bool {
	if o != nil && !isNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *MonitoringDiscoveryConfig) SetLabels(v map[string]string) {
	o.Labels = &v
}

// GetNamespace returns the Namespace field value
func (o *MonitoringDiscoveryConfig) GetNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
func (o *MonitoringDiscoveryConfig) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Namespace, true
}

// SetNamespace sets field value
func (o *MonitoringDiscoveryConfig) SetNamespace(v string) {
	o.Namespace = v
}

// GetResource returns the Resource field value
func (o *MonitoringDiscoveryConfig) GetResource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Resource
}

// GetResourceOk returns a tuple with the Resource field value
// and a boolean to check if the value has been set.
func (o *MonitoringDiscoveryConfig) GetResourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Resource, true
}

// SetResource sets field value
func (o *MonitoringDiscoveryConfig) SetResource(v string) {
	o.Resource = v
}

func (o MonitoringDiscoveryConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonitoringDiscoveryConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	toSerialize["namespace"] = o.Namespace
	toSerialize["resource"] = o.Resource
	return toSerialize, nil
}

type NullableMonitoringDiscoveryConfig struct {
	value *MonitoringDiscoveryConfig
	isSet bool
}

func (v NullableMonitoringDiscoveryConfig) Get() *MonitoringDiscoveryConfig {
	return v.value
}

func (v *NullableMonitoringDiscoveryConfig) Set(val *MonitoringDiscoveryConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringDiscoveryConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringDiscoveryConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringDiscoveryConfig(val *MonitoringDiscoveryConfig) *NullableMonitoringDiscoveryConfig {
	return &NullableMonitoringDiscoveryConfig{value: val, isSet: true}
}

func (v NullableMonitoringDiscoveryConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringDiscoveryConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


