/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ChargebackAggregate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChargebackAggregate{}

// ChargebackAggregate ChargebackAggregate parameters 
type ChargebackAggregate struct {
	// cluster
	Cluster *bool `json:"cluster,omitempty"`
	// label
	Label []string `json:"label,omitempty"`
	// namespace
	Namespace *bool `json:"namespace,omitempty"`
	// project
	Project *bool `json:"project,omitempty"`
}

// NewChargebackAggregate instantiates a new ChargebackAggregate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChargebackAggregate() *ChargebackAggregate {
	this := ChargebackAggregate{}
	return &this
}

// NewChargebackAggregateWithDefaults instantiates a new ChargebackAggregate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChargebackAggregateWithDefaults() *ChargebackAggregate {
	this := ChargebackAggregate{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *ChargebackAggregate) GetCluster() bool {
	if o == nil || isNil(o.Cluster) {
		var ret bool
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargebackAggregate) GetClusterOk() (*bool, bool) {
	if o == nil || isNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *ChargebackAggregate) HasCluster() bool {
	if o != nil && !isNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given bool and assigns it to the Cluster field.
func (o *ChargebackAggregate) SetCluster(v bool) {
	o.Cluster = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *ChargebackAggregate) GetLabel() []string {
	if o == nil || isNil(o.Label) {
		var ret []string
		return ret
	}
	return o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargebackAggregate) GetLabelOk() ([]string, bool) {
	if o == nil || isNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *ChargebackAggregate) HasLabel() bool {
	if o != nil && !isNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given []string and assigns it to the Label field.
func (o *ChargebackAggregate) SetLabel(v []string) {
	o.Label = v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *ChargebackAggregate) GetNamespace() bool {
	if o == nil || isNil(o.Namespace) {
		var ret bool
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargebackAggregate) GetNamespaceOk() (*bool, bool) {
	if o == nil || isNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *ChargebackAggregate) HasNamespace() bool {
	if o != nil && !isNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given bool and assigns it to the Namespace field.
func (o *ChargebackAggregate) SetNamespace(v bool) {
	o.Namespace = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *ChargebackAggregate) GetProject() bool {
	if o == nil || isNil(o.Project) {
		var ret bool
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargebackAggregate) GetProjectOk() (*bool, bool) {
	if o == nil || isNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *ChargebackAggregate) HasProject() bool {
	if o != nil && !isNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given bool and assigns it to the Project field.
func (o *ChargebackAggregate) SetProject(v bool) {
	o.Project = &v
}

func (o ChargebackAggregate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChargebackAggregate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !isNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !isNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !isNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	return toSerialize, nil
}

type NullableChargebackAggregate struct {
	value *ChargebackAggregate
	isSet bool
}

func (v NullableChargebackAggregate) Get() *ChargebackAggregate {
	return v.value
}

func (v *NullableChargebackAggregate) Set(val *ChargebackAggregate) {
	v.value = val
	v.isSet = true
}

func (v NullableChargebackAggregate) IsSet() bool {
	return v.isSet
}

func (v *NullableChargebackAggregate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChargebackAggregate(val *ChargebackAggregate) *NullableChargebackAggregate {
	return &NullableChargebackAggregate{value: val, isSet: true}
}

func (v NullableChargebackAggregate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChargebackAggregate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


