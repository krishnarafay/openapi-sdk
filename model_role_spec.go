/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the RoleSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleSpec{}

// RoleSpec role specification
type RoleSpec struct {
	// List of permissions associated with this role
	Permissions []string `json:"permissions,omitempty"`
}

// NewRoleSpec instantiates a new RoleSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleSpec() *RoleSpec {
	this := RoleSpec{}
	return &this
}

// NewRoleSpecWithDefaults instantiates a new RoleSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleSpecWithDefaults() *RoleSpec {
	this := RoleSpec{}
	return &this
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *RoleSpec) GetPermissions() []string {
	if o == nil || isNil(o.Permissions) {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleSpec) GetPermissionsOk() ([]string, bool) {
	if o == nil || isNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *RoleSpec) HasPermissions() bool {
	if o != nil && !isNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *RoleSpec) SetPermissions(v []string) {
	o.Permissions = v
}

func (o RoleSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	return toSerialize, nil
}

type NullableRoleSpec struct {
	value *RoleSpec
	isSet bool
}

func (v NullableRoleSpec) Get() *RoleSpec {
	return v.value
}

func (v *NullableRoleSpec) Set(val *RoleSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleSpec(val *RoleSpec) *NullableRoleSpec {
	return &NullableRoleSpec{value: val, isSet: true}
}

func (v NullableRoleSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


