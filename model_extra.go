/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the Extra type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Extra{}

// Extra struct for Extra
type Extra struct {
	Data *ExtraData `json:"data,omitempty"`
	Files []File `json:"files,omitempty"`
}

// NewExtra instantiates a new Extra object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtra() *Extra {
	this := Extra{}
	return &this
}

// NewExtraWithDefaults instantiates a new Extra object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtraWithDefaults() *Extra {
	this := Extra{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *Extra) GetData() ExtraData {
	if o == nil || isNil(o.Data) {
		var ret ExtraData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Extra) GetDataOk() (*ExtraData, bool) {
	if o == nil || isNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *Extra) HasData() bool {
	if o != nil && !isNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given ExtraData and assigns it to the Data field.
func (o *Extra) SetData(v ExtraData) {
	o.Data = &v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *Extra) GetFiles() []File {
	if o == nil || isNil(o.Files) {
		var ret []File
		return ret
	}
	return o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Extra) GetFilesOk() ([]File, bool) {
	if o == nil || isNil(o.Files) {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *Extra) HasFiles() bool {
	if o != nil && !isNil(o.Files) {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []File and assigns it to the Files field.
func (o *Extra) SetFiles(v []File) {
	o.Files = v
}

func (o Extra) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Extra) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !isNil(o.Files) {
		toSerialize["files"] = o.Files
	}
	return toSerialize, nil
}

type NullableExtra struct {
	value *Extra
	isSet bool
}

func (v NullableExtra) Get() *Extra {
	return v.value
}

func (v *NullableExtra) Set(val *Extra) {
	v.value = val
	v.isSet = true
}

func (v NullableExtra) IsSet() bool {
	return v.isSet
}

func (v *NullableExtra) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtra(val *Extra) *NullableExtra {
	return &NullableExtra{value: val, isSet: true}
}

func (v NullableExtra) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtra) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


