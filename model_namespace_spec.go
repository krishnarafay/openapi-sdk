/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the NamespaceSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NamespaceSpec{}

// NamespaceSpec namespace specification
type NamespaceSpec struct {
	Artifact *NamespaceSpecArtifact `json:"artifact,omitempty"`
	Drift DriftSpec `json:"drift"`
	LimitRange *NamespaceLimitRange `json:"limitRange,omitempty"`
	NamespaceMeshPolicyParams *NamespaceMeshPolicyParams `json:"namespaceMeshPolicyParams,omitempty"`
	NetworkPolicyParams *NetworkPolicyParams `json:"networkPolicyParams,omitempty"`
	Placement PlacementSpec `json:"placement"`
	Psp NamespacePSP `json:"psp"`
	ResourceQuotas *NamespaceResourceQuotas `json:"resourceQuotas,omitempty"`
}

// NewNamespaceSpec instantiates a new NamespaceSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNamespaceSpec(drift DriftSpec, placement PlacementSpec, psp NamespacePSP) *NamespaceSpec {
	this := NamespaceSpec{}
	this.Drift = drift
	this.Placement = placement
	this.Psp = psp
	return &this
}

// NewNamespaceSpecWithDefaults instantiates a new NamespaceSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNamespaceSpecWithDefaults() *NamespaceSpec {
	this := NamespaceSpec{}
	return &this
}

// GetArtifact returns the Artifact field value if set, zero value otherwise.
func (o *NamespaceSpec) GetArtifact() NamespaceSpecArtifact {
	if o == nil || isNil(o.Artifact) {
		var ret NamespaceSpecArtifact
		return ret
	}
	return *o.Artifact
}

// GetArtifactOk returns a tuple with the Artifact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NamespaceSpec) GetArtifactOk() (*NamespaceSpecArtifact, bool) {
	if o == nil || isNil(o.Artifact) {
		return nil, false
	}
	return o.Artifact, true
}

// HasArtifact returns a boolean if a field has been set.
func (o *NamespaceSpec) HasArtifact() bool {
	if o != nil && !isNil(o.Artifact) {
		return true
	}

	return false
}

// SetArtifact gets a reference to the given NamespaceSpecArtifact and assigns it to the Artifact field.
func (o *NamespaceSpec) SetArtifact(v NamespaceSpecArtifact) {
	o.Artifact = &v
}

// GetDrift returns the Drift field value
func (o *NamespaceSpec) GetDrift() DriftSpec {
	if o == nil {
		var ret DriftSpec
		return ret
	}

	return o.Drift
}

// GetDriftOk returns a tuple with the Drift field value
// and a boolean to check if the value has been set.
func (o *NamespaceSpec) GetDriftOk() (*DriftSpec, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Drift, true
}

// SetDrift sets field value
func (o *NamespaceSpec) SetDrift(v DriftSpec) {
	o.Drift = v
}

// GetLimitRange returns the LimitRange field value if set, zero value otherwise.
func (o *NamespaceSpec) GetLimitRange() NamespaceLimitRange {
	if o == nil || isNil(o.LimitRange) {
		var ret NamespaceLimitRange
		return ret
	}
	return *o.LimitRange
}

// GetLimitRangeOk returns a tuple with the LimitRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NamespaceSpec) GetLimitRangeOk() (*NamespaceLimitRange, bool) {
	if o == nil || isNil(o.LimitRange) {
		return nil, false
	}
	return o.LimitRange, true
}

// HasLimitRange returns a boolean if a field has been set.
func (o *NamespaceSpec) HasLimitRange() bool {
	if o != nil && !isNil(o.LimitRange) {
		return true
	}

	return false
}

// SetLimitRange gets a reference to the given NamespaceLimitRange and assigns it to the LimitRange field.
func (o *NamespaceSpec) SetLimitRange(v NamespaceLimitRange) {
	o.LimitRange = &v
}

// GetNamespaceMeshPolicyParams returns the NamespaceMeshPolicyParams field value if set, zero value otherwise.
func (o *NamespaceSpec) GetNamespaceMeshPolicyParams() NamespaceMeshPolicyParams {
	if o == nil || isNil(o.NamespaceMeshPolicyParams) {
		var ret NamespaceMeshPolicyParams
		return ret
	}
	return *o.NamespaceMeshPolicyParams
}

// GetNamespaceMeshPolicyParamsOk returns a tuple with the NamespaceMeshPolicyParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NamespaceSpec) GetNamespaceMeshPolicyParamsOk() (*NamespaceMeshPolicyParams, bool) {
	if o == nil || isNil(o.NamespaceMeshPolicyParams) {
		return nil, false
	}
	return o.NamespaceMeshPolicyParams, true
}

// HasNamespaceMeshPolicyParams returns a boolean if a field has been set.
func (o *NamespaceSpec) HasNamespaceMeshPolicyParams() bool {
	if o != nil && !isNil(o.NamespaceMeshPolicyParams) {
		return true
	}

	return false
}

// SetNamespaceMeshPolicyParams gets a reference to the given NamespaceMeshPolicyParams and assigns it to the NamespaceMeshPolicyParams field.
func (o *NamespaceSpec) SetNamespaceMeshPolicyParams(v NamespaceMeshPolicyParams) {
	o.NamespaceMeshPolicyParams = &v
}

// GetNetworkPolicyParams returns the NetworkPolicyParams field value if set, zero value otherwise.
func (o *NamespaceSpec) GetNetworkPolicyParams() NetworkPolicyParams {
	if o == nil || isNil(o.NetworkPolicyParams) {
		var ret NetworkPolicyParams
		return ret
	}
	return *o.NetworkPolicyParams
}

// GetNetworkPolicyParamsOk returns a tuple with the NetworkPolicyParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NamespaceSpec) GetNetworkPolicyParamsOk() (*NetworkPolicyParams, bool) {
	if o == nil || isNil(o.NetworkPolicyParams) {
		return nil, false
	}
	return o.NetworkPolicyParams, true
}

// HasNetworkPolicyParams returns a boolean if a field has been set.
func (o *NamespaceSpec) HasNetworkPolicyParams() bool {
	if o != nil && !isNil(o.NetworkPolicyParams) {
		return true
	}

	return false
}

// SetNetworkPolicyParams gets a reference to the given NetworkPolicyParams and assigns it to the NetworkPolicyParams field.
func (o *NamespaceSpec) SetNetworkPolicyParams(v NetworkPolicyParams) {
	o.NetworkPolicyParams = &v
}

// GetPlacement returns the Placement field value
func (o *NamespaceSpec) GetPlacement() PlacementSpec {
	if o == nil {
		var ret PlacementSpec
		return ret
	}

	return o.Placement
}

// GetPlacementOk returns a tuple with the Placement field value
// and a boolean to check if the value has been set.
func (o *NamespaceSpec) GetPlacementOk() (*PlacementSpec, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Placement, true
}

// SetPlacement sets field value
func (o *NamespaceSpec) SetPlacement(v PlacementSpec) {
	o.Placement = v
}

// GetPsp returns the Psp field value
func (o *NamespaceSpec) GetPsp() NamespacePSP {
	if o == nil {
		var ret NamespacePSP
		return ret
	}

	return o.Psp
}

// GetPspOk returns a tuple with the Psp field value
// and a boolean to check if the value has been set.
func (o *NamespaceSpec) GetPspOk() (*NamespacePSP, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Psp, true
}

// SetPsp sets field value
func (o *NamespaceSpec) SetPsp(v NamespacePSP) {
	o.Psp = v
}

// GetResourceQuotas returns the ResourceQuotas field value if set, zero value otherwise.
func (o *NamespaceSpec) GetResourceQuotas() NamespaceResourceQuotas {
	if o == nil || isNil(o.ResourceQuotas) {
		var ret NamespaceResourceQuotas
		return ret
	}
	return *o.ResourceQuotas
}

// GetResourceQuotasOk returns a tuple with the ResourceQuotas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NamespaceSpec) GetResourceQuotasOk() (*NamespaceResourceQuotas, bool) {
	if o == nil || isNil(o.ResourceQuotas) {
		return nil, false
	}
	return o.ResourceQuotas, true
}

// HasResourceQuotas returns a boolean if a field has been set.
func (o *NamespaceSpec) HasResourceQuotas() bool {
	if o != nil && !isNil(o.ResourceQuotas) {
		return true
	}

	return false
}

// SetResourceQuotas gets a reference to the given NamespaceResourceQuotas and assigns it to the ResourceQuotas field.
func (o *NamespaceSpec) SetResourceQuotas(v NamespaceResourceQuotas) {
	o.ResourceQuotas = &v
}

func (o NamespaceSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NamespaceSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Artifact) {
		toSerialize["artifact"] = o.Artifact
	}
	toSerialize["drift"] = o.Drift
	if !isNil(o.LimitRange) {
		toSerialize["limitRange"] = o.LimitRange
	}
	if !isNil(o.NamespaceMeshPolicyParams) {
		toSerialize["namespaceMeshPolicyParams"] = o.NamespaceMeshPolicyParams
	}
	if !isNil(o.NetworkPolicyParams) {
		toSerialize["networkPolicyParams"] = o.NetworkPolicyParams
	}
	toSerialize["placement"] = o.Placement
	toSerialize["psp"] = o.Psp
	if !isNil(o.ResourceQuotas) {
		toSerialize["resourceQuotas"] = o.ResourceQuotas
	}
	return toSerialize, nil
}

type NullableNamespaceSpec struct {
	value *NamespaceSpec
	isSet bool
}

func (v NullableNamespaceSpec) Get() *NamespaceSpec {
	return v.value
}

func (v *NullableNamespaceSpec) Set(val *NamespaceSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableNamespaceSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableNamespaceSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNamespaceSpec(val *NamespaceSpec) *NullableNamespaceSpec {
	return &NullableNamespaceSpec{value: val, isSet: true}
}

func (v NullableNamespaceSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNamespaceSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


