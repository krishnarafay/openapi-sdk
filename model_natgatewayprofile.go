/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the Natgatewayprofile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Natgatewayprofile{}

// Natgatewayprofile struct for Natgatewayprofile
type Natgatewayprofile struct {
	// The effective outbound IP resources of the cluster NAT gateway.
	EffectiveOutboundIPs []Effectiveoutboundips `json:"effectiveOutboundIPs,omitempty"`
	// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 4 minutes.
	IdleTimeoutInMinutes *int32 `json:"idleTimeoutInMinutes,omitempty"`
	ManagedOutboundIPProfile *Managedoutboundipprofile `json:"managedOutboundIPProfile,omitempty"`
}

// NewNatgatewayprofile instantiates a new Natgatewayprofile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNatgatewayprofile() *Natgatewayprofile {
	this := Natgatewayprofile{}
	return &this
}

// NewNatgatewayprofileWithDefaults instantiates a new Natgatewayprofile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNatgatewayprofileWithDefaults() *Natgatewayprofile {
	this := Natgatewayprofile{}
	return &this
}

// GetEffectiveOutboundIPs returns the EffectiveOutboundIPs field value if set, zero value otherwise.
func (o *Natgatewayprofile) GetEffectiveOutboundIPs() []Effectiveoutboundips {
	if o == nil || isNil(o.EffectiveOutboundIPs) {
		var ret []Effectiveoutboundips
		return ret
	}
	return o.EffectiveOutboundIPs
}

// GetEffectiveOutboundIPsOk returns a tuple with the EffectiveOutboundIPs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Natgatewayprofile) GetEffectiveOutboundIPsOk() ([]Effectiveoutboundips, bool) {
	if o == nil || isNil(o.EffectiveOutboundIPs) {
		return nil, false
	}
	return o.EffectiveOutboundIPs, true
}

// HasEffectiveOutboundIPs returns a boolean if a field has been set.
func (o *Natgatewayprofile) HasEffectiveOutboundIPs() bool {
	if o != nil && !isNil(o.EffectiveOutboundIPs) {
		return true
	}

	return false
}

// SetEffectiveOutboundIPs gets a reference to the given []Effectiveoutboundips and assigns it to the EffectiveOutboundIPs field.
func (o *Natgatewayprofile) SetEffectiveOutboundIPs(v []Effectiveoutboundips) {
	o.EffectiveOutboundIPs = v
}

// GetIdleTimeoutInMinutes returns the IdleTimeoutInMinutes field value if set, zero value otherwise.
func (o *Natgatewayprofile) GetIdleTimeoutInMinutes() int32 {
	if o == nil || isNil(o.IdleTimeoutInMinutes) {
		var ret int32
		return ret
	}
	return *o.IdleTimeoutInMinutes
}

// GetIdleTimeoutInMinutesOk returns a tuple with the IdleTimeoutInMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Natgatewayprofile) GetIdleTimeoutInMinutesOk() (*int32, bool) {
	if o == nil || isNil(o.IdleTimeoutInMinutes) {
		return nil, false
	}
	return o.IdleTimeoutInMinutes, true
}

// HasIdleTimeoutInMinutes returns a boolean if a field has been set.
func (o *Natgatewayprofile) HasIdleTimeoutInMinutes() bool {
	if o != nil && !isNil(o.IdleTimeoutInMinutes) {
		return true
	}

	return false
}

// SetIdleTimeoutInMinutes gets a reference to the given int32 and assigns it to the IdleTimeoutInMinutes field.
func (o *Natgatewayprofile) SetIdleTimeoutInMinutes(v int32) {
	o.IdleTimeoutInMinutes = &v
}

// GetManagedOutboundIPProfile returns the ManagedOutboundIPProfile field value if set, zero value otherwise.
func (o *Natgatewayprofile) GetManagedOutboundIPProfile() Managedoutboundipprofile {
	if o == nil || isNil(o.ManagedOutboundIPProfile) {
		var ret Managedoutboundipprofile
		return ret
	}
	return *o.ManagedOutboundIPProfile
}

// GetManagedOutboundIPProfileOk returns a tuple with the ManagedOutboundIPProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Natgatewayprofile) GetManagedOutboundIPProfileOk() (*Managedoutboundipprofile, bool) {
	if o == nil || isNil(o.ManagedOutboundIPProfile) {
		return nil, false
	}
	return o.ManagedOutboundIPProfile, true
}

// HasManagedOutboundIPProfile returns a boolean if a field has been set.
func (o *Natgatewayprofile) HasManagedOutboundIPProfile() bool {
	if o != nil && !isNil(o.ManagedOutboundIPProfile) {
		return true
	}

	return false
}

// SetManagedOutboundIPProfile gets a reference to the given Managedoutboundipprofile and assigns it to the ManagedOutboundIPProfile field.
func (o *Natgatewayprofile) SetManagedOutboundIPProfile(v Managedoutboundipprofile) {
	o.ManagedOutboundIPProfile = &v
}

func (o Natgatewayprofile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Natgatewayprofile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.EffectiveOutboundIPs) {
		toSerialize["effectiveOutboundIPs"] = o.EffectiveOutboundIPs
	}
	if !isNil(o.IdleTimeoutInMinutes) {
		toSerialize["idleTimeoutInMinutes"] = o.IdleTimeoutInMinutes
	}
	if !isNil(o.ManagedOutboundIPProfile) {
		toSerialize["managedOutboundIPProfile"] = o.ManagedOutboundIPProfile
	}
	return toSerialize, nil
}

type NullableNatgatewayprofile struct {
	value *Natgatewayprofile
	isSet bool
}

func (v NullableNatgatewayprofile) Get() *Natgatewayprofile {
	return v.value
}

func (v *NullableNatgatewayprofile) Set(val *Natgatewayprofile) {
	v.value = val
	v.isSet = true
}

func (v NullableNatgatewayprofile) IsSet() bool {
	return v.isSet
}

func (v *NullableNatgatewayprofile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNatgatewayprofile(val *Natgatewayprofile) *NullableNatgatewayprofile {
	return &NullableNatgatewayprofile{value: val, isSet: true}
}

func (v NullableNatgatewayprofile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNatgatewayprofile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


