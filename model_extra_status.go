/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ExtraStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtraStatus{}

// ExtraStatus struct for ExtraStatus
type ExtraStatus struct {
	VaultIntegration *VaultClusterStatus `json:"vaultIntegration,omitempty"`
}

// NewExtraStatus instantiates a new ExtraStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtraStatus() *ExtraStatus {
	this := ExtraStatus{}
	return &this
}

// NewExtraStatusWithDefaults instantiates a new ExtraStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtraStatusWithDefaults() *ExtraStatus {
	this := ExtraStatus{}
	return &this
}

// GetVaultIntegration returns the VaultIntegration field value if set, zero value otherwise.
func (o *ExtraStatus) GetVaultIntegration() VaultClusterStatus {
	if o == nil || isNil(o.VaultIntegration) {
		var ret VaultClusterStatus
		return ret
	}
	return *o.VaultIntegration
}

// GetVaultIntegrationOk returns a tuple with the VaultIntegration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtraStatus) GetVaultIntegrationOk() (*VaultClusterStatus, bool) {
	if o == nil || isNil(o.VaultIntegration) {
		return nil, false
	}
	return o.VaultIntegration, true
}

// HasVaultIntegration returns a boolean if a field has been set.
func (o *ExtraStatus) HasVaultIntegration() bool {
	if o != nil && !isNil(o.VaultIntegration) {
		return true
	}

	return false
}

// SetVaultIntegration gets a reference to the given VaultClusterStatus and assigns it to the VaultIntegration field.
func (o *ExtraStatus) SetVaultIntegration(v VaultClusterStatus) {
	o.VaultIntegration = &v
}

func (o ExtraStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtraStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.VaultIntegration) {
		toSerialize["vaultIntegration"] = o.VaultIntegration
	}
	return toSerialize, nil
}

type NullableExtraStatus struct {
	value *ExtraStatus
	isSet bool
}

func (v NullableExtraStatus) Get() *ExtraStatus {
	return v.value
}

func (v *NullableExtraStatus) Set(val *ExtraStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableExtraStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableExtraStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtraStatus(val *ExtraStatus) *NullableExtraStatus {
	return &NullableExtraStatus{value: val, isSet: true}
}

func (v NullableExtraStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtraStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


