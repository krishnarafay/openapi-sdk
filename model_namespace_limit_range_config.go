/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the NamespaceLimitRangeConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NamespaceLimitRangeConfig{}

// NamespaceLimitRangeConfig limit range configuration for namesapce
type NamespaceLimitRangeConfig struct {
	Default *ResourceQuantity `json:"default,omitempty"`
	DefaultRequest *ResourceQuantity `json:"defaultRequest,omitempty"`
	Max *ResourceQuantity `json:"max,omitempty"`
	Min *ResourceQuantity `json:"min,omitempty"`
	Ratio *ResourceRatio `json:"ratio,omitempty"`
}

// NewNamespaceLimitRangeConfig instantiates a new NamespaceLimitRangeConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNamespaceLimitRangeConfig() *NamespaceLimitRangeConfig {
	this := NamespaceLimitRangeConfig{}
	return &this
}

// NewNamespaceLimitRangeConfigWithDefaults instantiates a new NamespaceLimitRangeConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNamespaceLimitRangeConfigWithDefaults() *NamespaceLimitRangeConfig {
	this := NamespaceLimitRangeConfig{}
	return &this
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *NamespaceLimitRangeConfig) GetDefault() ResourceQuantity {
	if o == nil || isNil(o.Default) {
		var ret ResourceQuantity
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NamespaceLimitRangeConfig) GetDefaultOk() (*ResourceQuantity, bool) {
	if o == nil || isNil(o.Default) {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *NamespaceLimitRangeConfig) HasDefault() bool {
	if o != nil && !isNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given ResourceQuantity and assigns it to the Default field.
func (o *NamespaceLimitRangeConfig) SetDefault(v ResourceQuantity) {
	o.Default = &v
}

// GetDefaultRequest returns the DefaultRequest field value if set, zero value otherwise.
func (o *NamespaceLimitRangeConfig) GetDefaultRequest() ResourceQuantity {
	if o == nil || isNil(o.DefaultRequest) {
		var ret ResourceQuantity
		return ret
	}
	return *o.DefaultRequest
}

// GetDefaultRequestOk returns a tuple with the DefaultRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NamespaceLimitRangeConfig) GetDefaultRequestOk() (*ResourceQuantity, bool) {
	if o == nil || isNil(o.DefaultRequest) {
		return nil, false
	}
	return o.DefaultRequest, true
}

// HasDefaultRequest returns a boolean if a field has been set.
func (o *NamespaceLimitRangeConfig) HasDefaultRequest() bool {
	if o != nil && !isNil(o.DefaultRequest) {
		return true
	}

	return false
}

// SetDefaultRequest gets a reference to the given ResourceQuantity and assigns it to the DefaultRequest field.
func (o *NamespaceLimitRangeConfig) SetDefaultRequest(v ResourceQuantity) {
	o.DefaultRequest = &v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *NamespaceLimitRangeConfig) GetMax() ResourceQuantity {
	if o == nil || isNil(o.Max) {
		var ret ResourceQuantity
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NamespaceLimitRangeConfig) GetMaxOk() (*ResourceQuantity, bool) {
	if o == nil || isNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *NamespaceLimitRangeConfig) HasMax() bool {
	if o != nil && !isNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given ResourceQuantity and assigns it to the Max field.
func (o *NamespaceLimitRangeConfig) SetMax(v ResourceQuantity) {
	o.Max = &v
}

// GetMin returns the Min field value if set, zero value otherwise.
func (o *NamespaceLimitRangeConfig) GetMin() ResourceQuantity {
	if o == nil || isNil(o.Min) {
		var ret ResourceQuantity
		return ret
	}
	return *o.Min
}

// GetMinOk returns a tuple with the Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NamespaceLimitRangeConfig) GetMinOk() (*ResourceQuantity, bool) {
	if o == nil || isNil(o.Min) {
		return nil, false
	}
	return o.Min, true
}

// HasMin returns a boolean if a field has been set.
func (o *NamespaceLimitRangeConfig) HasMin() bool {
	if o != nil && !isNil(o.Min) {
		return true
	}

	return false
}

// SetMin gets a reference to the given ResourceQuantity and assigns it to the Min field.
func (o *NamespaceLimitRangeConfig) SetMin(v ResourceQuantity) {
	o.Min = &v
}

// GetRatio returns the Ratio field value if set, zero value otherwise.
func (o *NamespaceLimitRangeConfig) GetRatio() ResourceRatio {
	if o == nil || isNil(o.Ratio) {
		var ret ResourceRatio
		return ret
	}
	return *o.Ratio
}

// GetRatioOk returns a tuple with the Ratio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NamespaceLimitRangeConfig) GetRatioOk() (*ResourceRatio, bool) {
	if o == nil || isNil(o.Ratio) {
		return nil, false
	}
	return o.Ratio, true
}

// HasRatio returns a boolean if a field has been set.
func (o *NamespaceLimitRangeConfig) HasRatio() bool {
	if o != nil && !isNil(o.Ratio) {
		return true
	}

	return false
}

// SetRatio gets a reference to the given ResourceRatio and assigns it to the Ratio field.
func (o *NamespaceLimitRangeConfig) SetRatio(v ResourceRatio) {
	o.Ratio = &v
}

func (o NamespaceLimitRangeConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NamespaceLimitRangeConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	if !isNil(o.DefaultRequest) {
		toSerialize["defaultRequest"] = o.DefaultRequest
	}
	if !isNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	if !isNil(o.Min) {
		toSerialize["min"] = o.Min
	}
	if !isNil(o.Ratio) {
		toSerialize["ratio"] = o.Ratio
	}
	return toSerialize, nil
}

type NullableNamespaceLimitRangeConfig struct {
	value *NamespaceLimitRangeConfig
	isSet bool
}

func (v NullableNamespaceLimitRangeConfig) Get() *NamespaceLimitRangeConfig {
	return v.value
}

func (v *NullableNamespaceLimitRangeConfig) Set(val *NamespaceLimitRangeConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableNamespaceLimitRangeConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableNamespaceLimitRangeConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNamespaceLimitRangeConfig(val *NamespaceLimitRangeConfig) *NullableNamespaceLimitRangeConfig {
	return &NullableNamespaceLimitRangeConfig{value: val, isSet: true}
}

func (v NullableNamespaceLimitRangeConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNamespaceLimitRangeConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


