/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the Managedcluster type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Managedcluster{}

// Managedcluster struct for Managedcluster
type Managedcluster struct {
	AdditionalMetadata *Additionalmetadata `json:"additionalMetadata,omitempty"`
	ApiVersion *string `json:"apiVersion,omitempty"`
	ExtendedLocation *Extendedlocation `json:"extendedLocation,omitempty"`
	Identity *Identity `json:"identity,omitempty"`
	// The geo-location where the resource lives
	Location *string `json:"location,omitempty"`
	Properties *ManagedClusterProperties `json:"properties,omitempty"`
	Sku *Sku `json:"sku,omitempty"`
	// Resource tags.
	Tags *map[string]string `json:"tags,omitempty"`
	// Azure Resource Type
	Type *string `json:"type,omitempty"`
}

// NewManagedcluster instantiates a new Managedcluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedcluster() *Managedcluster {
	this := Managedcluster{}
	var type_ string = "Microsoft.ContainerService/managedClusters"
	this.Type = &type_
	return &this
}

// NewManagedclusterWithDefaults instantiates a new Managedcluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedclusterWithDefaults() *Managedcluster {
	this := Managedcluster{}
	var type_ string = "Microsoft.ContainerService/managedClusters"
	this.Type = &type_
	return &this
}

// GetAdditionalMetadata returns the AdditionalMetadata field value if set, zero value otherwise.
func (o *Managedcluster) GetAdditionalMetadata() Additionalmetadata {
	if o == nil || isNil(o.AdditionalMetadata) {
		var ret Additionalmetadata
		return ret
	}
	return *o.AdditionalMetadata
}

// GetAdditionalMetadataOk returns a tuple with the AdditionalMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Managedcluster) GetAdditionalMetadataOk() (*Additionalmetadata, bool) {
	if o == nil || isNil(o.AdditionalMetadata) {
		return nil, false
	}
	return o.AdditionalMetadata, true
}

// HasAdditionalMetadata returns a boolean if a field has been set.
func (o *Managedcluster) HasAdditionalMetadata() bool {
	if o != nil && !isNil(o.AdditionalMetadata) {
		return true
	}

	return false
}

// SetAdditionalMetadata gets a reference to the given Additionalmetadata and assigns it to the AdditionalMetadata field.
func (o *Managedcluster) SetAdditionalMetadata(v Additionalmetadata) {
	o.AdditionalMetadata = &v
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *Managedcluster) GetApiVersion() string {
	if o == nil || isNil(o.ApiVersion) {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Managedcluster) GetApiVersionOk() (*string, bool) {
	if o == nil || isNil(o.ApiVersion) {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *Managedcluster) HasApiVersion() bool {
	if o != nil && !isNil(o.ApiVersion) {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *Managedcluster) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetExtendedLocation returns the ExtendedLocation field value if set, zero value otherwise.
func (o *Managedcluster) GetExtendedLocation() Extendedlocation {
	if o == nil || isNil(o.ExtendedLocation) {
		var ret Extendedlocation
		return ret
	}
	return *o.ExtendedLocation
}

// GetExtendedLocationOk returns a tuple with the ExtendedLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Managedcluster) GetExtendedLocationOk() (*Extendedlocation, bool) {
	if o == nil || isNil(o.ExtendedLocation) {
		return nil, false
	}
	return o.ExtendedLocation, true
}

// HasExtendedLocation returns a boolean if a field has been set.
func (o *Managedcluster) HasExtendedLocation() bool {
	if o != nil && !isNil(o.ExtendedLocation) {
		return true
	}

	return false
}

// SetExtendedLocation gets a reference to the given Extendedlocation and assigns it to the ExtendedLocation field.
func (o *Managedcluster) SetExtendedLocation(v Extendedlocation) {
	o.ExtendedLocation = &v
}

// GetIdentity returns the Identity field value if set, zero value otherwise.
func (o *Managedcluster) GetIdentity() Identity {
	if o == nil || isNil(o.Identity) {
		var ret Identity
		return ret
	}
	return *o.Identity
}

// GetIdentityOk returns a tuple with the Identity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Managedcluster) GetIdentityOk() (*Identity, bool) {
	if o == nil || isNil(o.Identity) {
		return nil, false
	}
	return o.Identity, true
}

// HasIdentity returns a boolean if a field has been set.
func (o *Managedcluster) HasIdentity() bool {
	if o != nil && !isNil(o.Identity) {
		return true
	}

	return false
}

// SetIdentity gets a reference to the given Identity and assigns it to the Identity field.
func (o *Managedcluster) SetIdentity(v Identity) {
	o.Identity = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *Managedcluster) GetLocation() string {
	if o == nil || isNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Managedcluster) GetLocationOk() (*string, bool) {
	if o == nil || isNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *Managedcluster) HasLocation() bool {
	if o != nil && !isNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *Managedcluster) SetLocation(v string) {
	o.Location = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *Managedcluster) GetProperties() ManagedClusterProperties {
	if o == nil || isNil(o.Properties) {
		var ret ManagedClusterProperties
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Managedcluster) GetPropertiesOk() (*ManagedClusterProperties, bool) {
	if o == nil || isNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *Managedcluster) HasProperties() bool {
	if o != nil && !isNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given ManagedClusterProperties and assigns it to the Properties field.
func (o *Managedcluster) SetProperties(v ManagedClusterProperties) {
	o.Properties = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *Managedcluster) GetSku() Sku {
	if o == nil || isNil(o.Sku) {
		var ret Sku
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Managedcluster) GetSkuOk() (*Sku, bool) {
	if o == nil || isNil(o.Sku) {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *Managedcluster) HasSku() bool {
	if o != nil && !isNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given Sku and assigns it to the Sku field.
func (o *Managedcluster) SetSku(v Sku) {
	o.Sku = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Managedcluster) GetTags() map[string]string {
	if o == nil || isNil(o.Tags) {
		var ret map[string]string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Managedcluster) GetTagsOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Managedcluster) HasTags() bool {
	if o != nil && !isNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string]string and assigns it to the Tags field.
func (o *Managedcluster) SetTags(v map[string]string) {
	o.Tags = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Managedcluster) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Managedcluster) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Managedcluster) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Managedcluster) SetType(v string) {
	o.Type = &v
}

func (o Managedcluster) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Managedcluster) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AdditionalMetadata) {
		toSerialize["additionalMetadata"] = o.AdditionalMetadata
	}
	if !isNil(o.ApiVersion) {
		toSerialize["apiVersion"] = o.ApiVersion
	}
	if !isNil(o.ExtendedLocation) {
		toSerialize["extendedLocation"] = o.ExtendedLocation
	}
	if !isNil(o.Identity) {
		toSerialize["identity"] = o.Identity
	}
	if !isNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !isNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	if !isNil(o.Sku) {
		toSerialize["sku"] = o.Sku
	}
	if !isNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableManagedcluster struct {
	value *Managedcluster
	isSet bool
}

func (v NullableManagedcluster) Get() *Managedcluster {
	return v.value
}

func (v *NullableManagedcluster) Set(val *Managedcluster) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedcluster) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedcluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedcluster(val *Managedcluster) *NullableManagedcluster {
	return &NullableManagedcluster{value: val, isSet: true}
}

func (v NullableManagedcluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedcluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


