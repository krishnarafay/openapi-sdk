/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the MonitoringComponent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonitoringComponent{}

// MonitoringComponent monitoring component configuration
type MonitoringComponent struct {
	Discovery *MonitoringDiscoveryConfig `json:"discovery,omitempty"`
	// flag to specify if monitoring component is enabled
	Enabled bool `json:"enabled"`
}

// NewMonitoringComponent instantiates a new MonitoringComponent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringComponent(enabled bool) *MonitoringComponent {
	this := MonitoringComponent{}
	this.Enabled = enabled
	return &this
}

// NewMonitoringComponentWithDefaults instantiates a new MonitoringComponent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringComponentWithDefaults() *MonitoringComponent {
	this := MonitoringComponent{}
	return &this
}

// GetDiscovery returns the Discovery field value if set, zero value otherwise.
func (o *MonitoringComponent) GetDiscovery() MonitoringDiscoveryConfig {
	if o == nil || isNil(o.Discovery) {
		var ret MonitoringDiscoveryConfig
		return ret
	}
	return *o.Discovery
}

// GetDiscoveryOk returns a tuple with the Discovery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringComponent) GetDiscoveryOk() (*MonitoringDiscoveryConfig, bool) {
	if o == nil || isNil(o.Discovery) {
		return nil, false
	}
	return o.Discovery, true
}

// HasDiscovery returns a boolean if a field has been set.
func (o *MonitoringComponent) HasDiscovery() bool {
	if o != nil && !isNil(o.Discovery) {
		return true
	}

	return false
}

// SetDiscovery gets a reference to the given MonitoringDiscoveryConfig and assigns it to the Discovery field.
func (o *MonitoringComponent) SetDiscovery(v MonitoringDiscoveryConfig) {
	o.Discovery = &v
}

// GetEnabled returns the Enabled field value
func (o *MonitoringComponent) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *MonitoringComponent) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *MonitoringComponent) SetEnabled(v bool) {
	o.Enabled = v
}

func (o MonitoringComponent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonitoringComponent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Discovery) {
		toSerialize["discovery"] = o.Discovery
	}
	toSerialize["enabled"] = o.Enabled
	return toSerialize, nil
}

type NullableMonitoringComponent struct {
	value *MonitoringComponent
	isSet bool
}

func (v NullableMonitoringComponent) Get() *MonitoringComponent {
	return v.value
}

func (v *NullableMonitoringComponent) Set(val *MonitoringComponent) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringComponent) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringComponent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringComponent(val *MonitoringComponent) *NullableMonitoringComponent {
	return &NullableMonitoringComponent{value: val, isSet: true}
}

func (v NullableMonitoringComponent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringComponent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


