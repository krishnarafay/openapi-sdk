/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
	"fmt"
)

// InfraProvisionerConfigAction - struct for InfraProvisionerConfigAction
type InfraProvisionerConfigAction struct {
	TerraformInfraActionConfiguration *TerraformInfraActionConfiguration
}

// TerraformInfraActionConfigurationAsInfraProvisionerConfigAction is a convenience function that returns TerraformInfraActionConfiguration wrapped in InfraProvisionerConfigAction
func TerraformInfraActionConfigurationAsInfraProvisionerConfigAction(v *TerraformInfraActionConfiguration) InfraProvisionerConfigAction {
	return InfraProvisionerConfigAction{
		TerraformInfraActionConfiguration: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *InfraProvisionerConfigAction) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into TerraformInfraActionConfiguration
	err = newStrictDecoder(data).Decode(&dst.TerraformInfraActionConfiguration)
	if err == nil {
		jsonTerraformInfraActionConfiguration, _ := json.Marshal(dst.TerraformInfraActionConfiguration)
		if string(jsonTerraformInfraActionConfiguration) == "{}" { // empty struct
			dst.TerraformInfraActionConfiguration = nil
		} else {
			match++
		}
	} else {
		dst.TerraformInfraActionConfiguration = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.TerraformInfraActionConfiguration = nil

		return fmt.Errorf("data matches more than one schema in oneOf(InfraProvisionerConfigAction)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(InfraProvisionerConfigAction)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src InfraProvisionerConfigAction) MarshalJSON() ([]byte, error) {
	if src.TerraformInfraActionConfiguration != nil {
		return json.Marshal(&src.TerraformInfraActionConfiguration)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *InfraProvisionerConfigAction) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.TerraformInfraActionConfiguration != nil {
		return obj.TerraformInfraActionConfiguration
	}

	// all schemas are nil
	return nil
}

type NullableInfraProvisionerConfigAction struct {
	value *InfraProvisionerConfigAction
	isSet bool
}

func (v NullableInfraProvisionerConfigAction) Get() *InfraProvisionerConfigAction {
	return v.value
}

func (v *NullableInfraProvisionerConfigAction) Set(val *InfraProvisionerConfigAction) {
	v.value = val
	v.isSet = true
}

func (v NullableInfraProvisionerConfigAction) IsSet() bool {
	return v.isSet
}

func (v *NullableInfraProvisionerConfigAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInfraProvisionerConfigAction(val *InfraProvisionerConfigAction) *NullableInfraProvisionerConfigAction {
	return &NullableInfraProvisionerConfigAction{value: val, isSet: true}
}

func (v NullableInfraProvisionerConfigAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInfraProvisionerConfigAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


