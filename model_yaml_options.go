/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the YAMLOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &YAMLOptions{}

// YAMLOptions options for deploying YAML artifacts
type YAMLOptions struct {
	// disable OpenAPI validation while deploying the YAML
	DisableOpenAPIValidation *bool `json:"disableOpenAPIValidation,omitempty"`
	// deploy YAML artifact with force flag
	Force *bool `json:"force,omitempty"`
}

// NewYAMLOptions instantiates a new YAMLOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewYAMLOptions() *YAMLOptions {
	this := YAMLOptions{}
	return &this
}

// NewYAMLOptionsWithDefaults instantiates a new YAMLOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewYAMLOptionsWithDefaults() *YAMLOptions {
	this := YAMLOptions{}
	return &this
}

// GetDisableOpenAPIValidation returns the DisableOpenAPIValidation field value if set, zero value otherwise.
func (o *YAMLOptions) GetDisableOpenAPIValidation() bool {
	if o == nil || isNil(o.DisableOpenAPIValidation) {
		var ret bool
		return ret
	}
	return *o.DisableOpenAPIValidation
}

// GetDisableOpenAPIValidationOk returns a tuple with the DisableOpenAPIValidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *YAMLOptions) GetDisableOpenAPIValidationOk() (*bool, bool) {
	if o == nil || isNil(o.DisableOpenAPIValidation) {
		return nil, false
	}
	return o.DisableOpenAPIValidation, true
}

// HasDisableOpenAPIValidation returns a boolean if a field has been set.
func (o *YAMLOptions) HasDisableOpenAPIValidation() bool {
	if o != nil && !isNil(o.DisableOpenAPIValidation) {
		return true
	}

	return false
}

// SetDisableOpenAPIValidation gets a reference to the given bool and assigns it to the DisableOpenAPIValidation field.
func (o *YAMLOptions) SetDisableOpenAPIValidation(v bool) {
	o.DisableOpenAPIValidation = &v
}

// GetForce returns the Force field value if set, zero value otherwise.
func (o *YAMLOptions) GetForce() bool {
	if o == nil || isNil(o.Force) {
		var ret bool
		return ret
	}
	return *o.Force
}

// GetForceOk returns a tuple with the Force field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *YAMLOptions) GetForceOk() (*bool, bool) {
	if o == nil || isNil(o.Force) {
		return nil, false
	}
	return o.Force, true
}

// HasForce returns a boolean if a field has been set.
func (o *YAMLOptions) HasForce() bool {
	if o != nil && !isNil(o.Force) {
		return true
	}

	return false
}

// SetForce gets a reference to the given bool and assigns it to the Force field.
func (o *YAMLOptions) SetForce(v bool) {
	o.Force = &v
}

func (o YAMLOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o YAMLOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DisableOpenAPIValidation) {
		toSerialize["disableOpenAPIValidation"] = o.DisableOpenAPIValidation
	}
	if !isNil(o.Force) {
		toSerialize["force"] = o.Force
	}
	return toSerialize, nil
}

type NullableYAMLOptions struct {
	value *YAMLOptions
	isSet bool
}

func (v NullableYAMLOptions) Get() *YAMLOptions {
	return v.value
}

func (v *NullableYAMLOptions) Set(val *YAMLOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableYAMLOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableYAMLOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableYAMLOptions(val *YAMLOptions) *NullableYAMLOptions {
	return &NullableYAMLOptions{value: val, isSet: true}
}

func (v NullableYAMLOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableYAMLOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


