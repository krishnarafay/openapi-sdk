/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the Loadbalancerprofile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Loadbalancerprofile{}

// Loadbalancerprofile struct for Loadbalancerprofile
type Loadbalancerprofile struct {
	// The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.
	AllocatedOutboundPorts *int32 `json:"allocatedOutboundPorts,omitempty"`
	// The effective outbound IP resources of the cluster load balancer.
	EffectiveOutboundIPs []Effectiveoutboundips `json:"effectiveOutboundIPs,omitempty"`
	// Enable multiple standard load balancers per AKS cluster or not.
	EnableMultipleStandardLoadBalancers *bool `json:"enableMultipleStandardLoadBalancers,omitempty"`
	// Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 30 minutes.
	IdleTimeoutInMinutes *int32 `json:"idleTimeoutInMinutes,omitempty"`
	ManagedOutboundIPs *Managedoutboundips `json:"managedOutboundIPs,omitempty"`
	OutboundIPPrefixes *Outboundipprefixes `json:"outboundIPPrefixes,omitempty"`
	OutboundIPs *Outboundips `json:"outboundIPs,omitempty"`
}

// NewLoadbalancerprofile instantiates a new Loadbalancerprofile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadbalancerprofile() *Loadbalancerprofile {
	this := Loadbalancerprofile{}
	return &this
}

// NewLoadbalancerprofileWithDefaults instantiates a new Loadbalancerprofile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadbalancerprofileWithDefaults() *Loadbalancerprofile {
	this := Loadbalancerprofile{}
	return &this
}

// GetAllocatedOutboundPorts returns the AllocatedOutboundPorts field value if set, zero value otherwise.
func (o *Loadbalancerprofile) GetAllocatedOutboundPorts() int32 {
	if o == nil || isNil(o.AllocatedOutboundPorts) {
		var ret int32
		return ret
	}
	return *o.AllocatedOutboundPorts
}

// GetAllocatedOutboundPortsOk returns a tuple with the AllocatedOutboundPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Loadbalancerprofile) GetAllocatedOutboundPortsOk() (*int32, bool) {
	if o == nil || isNil(o.AllocatedOutboundPorts) {
		return nil, false
	}
	return o.AllocatedOutboundPorts, true
}

// HasAllocatedOutboundPorts returns a boolean if a field has been set.
func (o *Loadbalancerprofile) HasAllocatedOutboundPorts() bool {
	if o != nil && !isNil(o.AllocatedOutboundPorts) {
		return true
	}

	return false
}

// SetAllocatedOutboundPorts gets a reference to the given int32 and assigns it to the AllocatedOutboundPorts field.
func (o *Loadbalancerprofile) SetAllocatedOutboundPorts(v int32) {
	o.AllocatedOutboundPorts = &v
}

// GetEffectiveOutboundIPs returns the EffectiveOutboundIPs field value if set, zero value otherwise.
func (o *Loadbalancerprofile) GetEffectiveOutboundIPs() []Effectiveoutboundips {
	if o == nil || isNil(o.EffectiveOutboundIPs) {
		var ret []Effectiveoutboundips
		return ret
	}
	return o.EffectiveOutboundIPs
}

// GetEffectiveOutboundIPsOk returns a tuple with the EffectiveOutboundIPs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Loadbalancerprofile) GetEffectiveOutboundIPsOk() ([]Effectiveoutboundips, bool) {
	if o == nil || isNil(o.EffectiveOutboundIPs) {
		return nil, false
	}
	return o.EffectiveOutboundIPs, true
}

// HasEffectiveOutboundIPs returns a boolean if a field has been set.
func (o *Loadbalancerprofile) HasEffectiveOutboundIPs() bool {
	if o != nil && !isNil(o.EffectiveOutboundIPs) {
		return true
	}

	return false
}

// SetEffectiveOutboundIPs gets a reference to the given []Effectiveoutboundips and assigns it to the EffectiveOutboundIPs field.
func (o *Loadbalancerprofile) SetEffectiveOutboundIPs(v []Effectiveoutboundips) {
	o.EffectiveOutboundIPs = v
}

// GetEnableMultipleStandardLoadBalancers returns the EnableMultipleStandardLoadBalancers field value if set, zero value otherwise.
func (o *Loadbalancerprofile) GetEnableMultipleStandardLoadBalancers() bool {
	if o == nil || isNil(o.EnableMultipleStandardLoadBalancers) {
		var ret bool
		return ret
	}
	return *o.EnableMultipleStandardLoadBalancers
}

// GetEnableMultipleStandardLoadBalancersOk returns a tuple with the EnableMultipleStandardLoadBalancers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Loadbalancerprofile) GetEnableMultipleStandardLoadBalancersOk() (*bool, bool) {
	if o == nil || isNil(o.EnableMultipleStandardLoadBalancers) {
		return nil, false
	}
	return o.EnableMultipleStandardLoadBalancers, true
}

// HasEnableMultipleStandardLoadBalancers returns a boolean if a field has been set.
func (o *Loadbalancerprofile) HasEnableMultipleStandardLoadBalancers() bool {
	if o != nil && !isNil(o.EnableMultipleStandardLoadBalancers) {
		return true
	}

	return false
}

// SetEnableMultipleStandardLoadBalancers gets a reference to the given bool and assigns it to the EnableMultipleStandardLoadBalancers field.
func (o *Loadbalancerprofile) SetEnableMultipleStandardLoadBalancers(v bool) {
	o.EnableMultipleStandardLoadBalancers = &v
}

// GetIdleTimeoutInMinutes returns the IdleTimeoutInMinutes field value if set, zero value otherwise.
func (o *Loadbalancerprofile) GetIdleTimeoutInMinutes() int32 {
	if o == nil || isNil(o.IdleTimeoutInMinutes) {
		var ret int32
		return ret
	}
	return *o.IdleTimeoutInMinutes
}

// GetIdleTimeoutInMinutesOk returns a tuple with the IdleTimeoutInMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Loadbalancerprofile) GetIdleTimeoutInMinutesOk() (*int32, bool) {
	if o == nil || isNil(o.IdleTimeoutInMinutes) {
		return nil, false
	}
	return o.IdleTimeoutInMinutes, true
}

// HasIdleTimeoutInMinutes returns a boolean if a field has been set.
func (o *Loadbalancerprofile) HasIdleTimeoutInMinutes() bool {
	if o != nil && !isNil(o.IdleTimeoutInMinutes) {
		return true
	}

	return false
}

// SetIdleTimeoutInMinutes gets a reference to the given int32 and assigns it to the IdleTimeoutInMinutes field.
func (o *Loadbalancerprofile) SetIdleTimeoutInMinutes(v int32) {
	o.IdleTimeoutInMinutes = &v
}

// GetManagedOutboundIPs returns the ManagedOutboundIPs field value if set, zero value otherwise.
func (o *Loadbalancerprofile) GetManagedOutboundIPs() Managedoutboundips {
	if o == nil || isNil(o.ManagedOutboundIPs) {
		var ret Managedoutboundips
		return ret
	}
	return *o.ManagedOutboundIPs
}

// GetManagedOutboundIPsOk returns a tuple with the ManagedOutboundIPs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Loadbalancerprofile) GetManagedOutboundIPsOk() (*Managedoutboundips, bool) {
	if o == nil || isNil(o.ManagedOutboundIPs) {
		return nil, false
	}
	return o.ManagedOutboundIPs, true
}

// HasManagedOutboundIPs returns a boolean if a field has been set.
func (o *Loadbalancerprofile) HasManagedOutboundIPs() bool {
	if o != nil && !isNil(o.ManagedOutboundIPs) {
		return true
	}

	return false
}

// SetManagedOutboundIPs gets a reference to the given Managedoutboundips and assigns it to the ManagedOutboundIPs field.
func (o *Loadbalancerprofile) SetManagedOutboundIPs(v Managedoutboundips) {
	o.ManagedOutboundIPs = &v
}

// GetOutboundIPPrefixes returns the OutboundIPPrefixes field value if set, zero value otherwise.
func (o *Loadbalancerprofile) GetOutboundIPPrefixes() Outboundipprefixes {
	if o == nil || isNil(o.OutboundIPPrefixes) {
		var ret Outboundipprefixes
		return ret
	}
	return *o.OutboundIPPrefixes
}

// GetOutboundIPPrefixesOk returns a tuple with the OutboundIPPrefixes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Loadbalancerprofile) GetOutboundIPPrefixesOk() (*Outboundipprefixes, bool) {
	if o == nil || isNil(o.OutboundIPPrefixes) {
		return nil, false
	}
	return o.OutboundIPPrefixes, true
}

// HasOutboundIPPrefixes returns a boolean if a field has been set.
func (o *Loadbalancerprofile) HasOutboundIPPrefixes() bool {
	if o != nil && !isNil(o.OutboundIPPrefixes) {
		return true
	}

	return false
}

// SetOutboundIPPrefixes gets a reference to the given Outboundipprefixes and assigns it to the OutboundIPPrefixes field.
func (o *Loadbalancerprofile) SetOutboundIPPrefixes(v Outboundipprefixes) {
	o.OutboundIPPrefixes = &v
}

// GetOutboundIPs returns the OutboundIPs field value if set, zero value otherwise.
func (o *Loadbalancerprofile) GetOutboundIPs() Outboundips {
	if o == nil || isNil(o.OutboundIPs) {
		var ret Outboundips
		return ret
	}
	return *o.OutboundIPs
}

// GetOutboundIPsOk returns a tuple with the OutboundIPs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Loadbalancerprofile) GetOutboundIPsOk() (*Outboundips, bool) {
	if o == nil || isNil(o.OutboundIPs) {
		return nil, false
	}
	return o.OutboundIPs, true
}

// HasOutboundIPs returns a boolean if a field has been set.
func (o *Loadbalancerprofile) HasOutboundIPs() bool {
	if o != nil && !isNil(o.OutboundIPs) {
		return true
	}

	return false
}

// SetOutboundIPs gets a reference to the given Outboundips and assigns it to the OutboundIPs field.
func (o *Loadbalancerprofile) SetOutboundIPs(v Outboundips) {
	o.OutboundIPs = &v
}

func (o Loadbalancerprofile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Loadbalancerprofile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AllocatedOutboundPorts) {
		toSerialize["allocatedOutboundPorts"] = o.AllocatedOutboundPorts
	}
	if !isNil(o.EffectiveOutboundIPs) {
		toSerialize["effectiveOutboundIPs"] = o.EffectiveOutboundIPs
	}
	if !isNil(o.EnableMultipleStandardLoadBalancers) {
		toSerialize["enableMultipleStandardLoadBalancers"] = o.EnableMultipleStandardLoadBalancers
	}
	if !isNil(o.IdleTimeoutInMinutes) {
		toSerialize["idleTimeoutInMinutes"] = o.IdleTimeoutInMinutes
	}
	if !isNil(o.ManagedOutboundIPs) {
		toSerialize["managedOutboundIPs"] = o.ManagedOutboundIPs
	}
	if !isNil(o.OutboundIPPrefixes) {
		toSerialize["outboundIPPrefixes"] = o.OutboundIPPrefixes
	}
	if !isNil(o.OutboundIPs) {
		toSerialize["outboundIPs"] = o.OutboundIPs
	}
	return toSerialize, nil
}

type NullableLoadbalancerprofile struct {
	value *Loadbalancerprofile
	isSet bool
}

func (v NullableLoadbalancerprofile) Get() *Loadbalancerprofile {
	return v.value
}

func (v *NullableLoadbalancerprofile) Set(val *Loadbalancerprofile) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadbalancerprofile) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadbalancerprofile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadbalancerprofile(val *Loadbalancerprofile) *NullableLoadbalancerprofile {
	return &NullableLoadbalancerprofile{value: val, isSet: true}
}

func (v NullableLoadbalancerprofile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadbalancerprofile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


