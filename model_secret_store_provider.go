/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the SecretStoreProvider type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretStoreProvider{}

// SecretStoreProvider struct for SecretStoreProvider
type SecretStoreProvider struct {
	Aws *bool `json:"aws,omitempty"`
	Vault *bool `json:"vault,omitempty"`
}

// NewSecretStoreProvider instantiates a new SecretStoreProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretStoreProvider() *SecretStoreProvider {
	this := SecretStoreProvider{}
	return &this
}

// NewSecretStoreProviderWithDefaults instantiates a new SecretStoreProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretStoreProviderWithDefaults() *SecretStoreProvider {
	this := SecretStoreProvider{}
	return &this
}

// GetAws returns the Aws field value if set, zero value otherwise.
func (o *SecretStoreProvider) GetAws() bool {
	if o == nil || isNil(o.Aws) {
		var ret bool
		return ret
	}
	return *o.Aws
}

// GetAwsOk returns a tuple with the Aws field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretStoreProvider) GetAwsOk() (*bool, bool) {
	if o == nil || isNil(o.Aws) {
		return nil, false
	}
	return o.Aws, true
}

// HasAws returns a boolean if a field has been set.
func (o *SecretStoreProvider) HasAws() bool {
	if o != nil && !isNil(o.Aws) {
		return true
	}

	return false
}

// SetAws gets a reference to the given bool and assigns it to the Aws field.
func (o *SecretStoreProvider) SetAws(v bool) {
	o.Aws = &v
}

// GetVault returns the Vault field value if set, zero value otherwise.
func (o *SecretStoreProvider) GetVault() bool {
	if o == nil || isNil(o.Vault) {
		var ret bool
		return ret
	}
	return *o.Vault
}

// GetVaultOk returns a tuple with the Vault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretStoreProvider) GetVaultOk() (*bool, bool) {
	if o == nil || isNil(o.Vault) {
		return nil, false
	}
	return o.Vault, true
}

// HasVault returns a boolean if a field has been set.
func (o *SecretStoreProvider) HasVault() bool {
	if o != nil && !isNil(o.Vault) {
		return true
	}

	return false
}

// SetVault gets a reference to the given bool and assigns it to the Vault field.
func (o *SecretStoreProvider) SetVault(v bool) {
	o.Vault = &v
}

func (o SecretStoreProvider) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretStoreProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Aws) {
		toSerialize["aws"] = o.Aws
	}
	if !isNil(o.Vault) {
		toSerialize["vault"] = o.Vault
	}
	return toSerialize, nil
}

type NullableSecretStoreProvider struct {
	value *SecretStoreProvider
	isSet bool
}

func (v NullableSecretStoreProvider) Get() *SecretStoreProvider {
	return v.value
}

func (v *NullableSecretStoreProvider) Set(val *SecretStoreProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretStoreProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretStoreProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretStoreProvider(val *SecretStoreProvider) *NullableSecretStoreProvider {
	return &NullableSecretStoreProvider{value: val, isSet: true}
}

func (v NullableSecretStoreProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretStoreProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


