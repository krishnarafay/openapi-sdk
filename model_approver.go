/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the Approver type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Approver{}

// Approver approver configuration
type Approver struct {
	// flag to specify if the user is a SSO User
	SsoUser *bool `json:"ssoUser,omitempty"`
	// user name of the approver
	UserName string `json:"userName"`
}

// NewApprover instantiates a new Approver object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApprover(userName string) *Approver {
	this := Approver{}
	this.UserName = userName
	return &this
}

// NewApproverWithDefaults instantiates a new Approver object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApproverWithDefaults() *Approver {
	this := Approver{}
	return &this
}

// GetSsoUser returns the SsoUser field value if set, zero value otherwise.
func (o *Approver) GetSsoUser() bool {
	if o == nil || isNil(o.SsoUser) {
		var ret bool
		return ret
	}
	return *o.SsoUser
}

// GetSsoUserOk returns a tuple with the SsoUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Approver) GetSsoUserOk() (*bool, bool) {
	if o == nil || isNil(o.SsoUser) {
		return nil, false
	}
	return o.SsoUser, true
}

// HasSsoUser returns a boolean if a field has been set.
func (o *Approver) HasSsoUser() bool {
	if o != nil && !isNil(o.SsoUser) {
		return true
	}

	return false
}

// SetSsoUser gets a reference to the given bool and assigns it to the SsoUser field.
func (o *Approver) SetSsoUser(v bool) {
	o.SsoUser = &v
}

// GetUserName returns the UserName field value
func (o *Approver) GetUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value
// and a boolean to check if the value has been set.
func (o *Approver) GetUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserName, true
}

// SetUserName sets field value
func (o *Approver) SetUserName(v string) {
	o.UserName = v
}

func (o Approver) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Approver) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.SsoUser) {
		toSerialize["ssoUser"] = o.SsoUser
	}
	toSerialize["userName"] = o.UserName
	return toSerialize, nil
}

type NullableApprover struct {
	value *Approver
	isSet bool
}

func (v NullableApprover) Get() *Approver {
	return v.value
}

func (v *NullableApprover) Set(val *Approver) {
	v.value = val
	v.isSet = true
}

func (v NullableApprover) IsSet() bool {
	return v.isSet
}

func (v *NullableApprover) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApprover(val *Approver) *NullableApprover {
	return &NullableApprover{value: val, isSet: true}
}

func (v NullableApprover) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApprover) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


