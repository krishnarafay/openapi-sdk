/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the IdentityProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityProfile{}

// IdentityProfile struct for IdentityProfile
type IdentityProfile struct {
	ClusterIdentity *ClusterIdentityStatus `json:"clusterIdentity,omitempty"`
	KubeletIdentity *KubeletIdentityStatus `json:"kubeletIdentity,omitempty"`
}

// NewIdentityProfile instantiates a new IdentityProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityProfile() *IdentityProfile {
	this := IdentityProfile{}
	return &this
}

// NewIdentityProfileWithDefaults instantiates a new IdentityProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityProfileWithDefaults() *IdentityProfile {
	this := IdentityProfile{}
	return &this
}

// GetClusterIdentity returns the ClusterIdentity field value if set, zero value otherwise.
func (o *IdentityProfile) GetClusterIdentity() ClusterIdentityStatus {
	if o == nil || isNil(o.ClusterIdentity) {
		var ret ClusterIdentityStatus
		return ret
	}
	return *o.ClusterIdentity
}

// GetClusterIdentityOk returns a tuple with the ClusterIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProfile) GetClusterIdentityOk() (*ClusterIdentityStatus, bool) {
	if o == nil || isNil(o.ClusterIdentity) {
		return nil, false
	}
	return o.ClusterIdentity, true
}

// HasClusterIdentity returns a boolean if a field has been set.
func (o *IdentityProfile) HasClusterIdentity() bool {
	if o != nil && !isNil(o.ClusterIdentity) {
		return true
	}

	return false
}

// SetClusterIdentity gets a reference to the given ClusterIdentityStatus and assigns it to the ClusterIdentity field.
func (o *IdentityProfile) SetClusterIdentity(v ClusterIdentityStatus) {
	o.ClusterIdentity = &v
}

// GetKubeletIdentity returns the KubeletIdentity field value if set, zero value otherwise.
func (o *IdentityProfile) GetKubeletIdentity() KubeletIdentityStatus {
	if o == nil || isNil(o.KubeletIdentity) {
		var ret KubeletIdentityStatus
		return ret
	}
	return *o.KubeletIdentity
}

// GetKubeletIdentityOk returns a tuple with the KubeletIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProfile) GetKubeletIdentityOk() (*KubeletIdentityStatus, bool) {
	if o == nil || isNil(o.KubeletIdentity) {
		return nil, false
	}
	return o.KubeletIdentity, true
}

// HasKubeletIdentity returns a boolean if a field has been set.
func (o *IdentityProfile) HasKubeletIdentity() bool {
	if o != nil && !isNil(o.KubeletIdentity) {
		return true
	}

	return false
}

// SetKubeletIdentity gets a reference to the given KubeletIdentityStatus and assigns it to the KubeletIdentity field.
func (o *IdentityProfile) SetKubeletIdentity(v KubeletIdentityStatus) {
	o.KubeletIdentity = &v
}

func (o IdentityProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ClusterIdentity) {
		toSerialize["clusterIdentity"] = o.ClusterIdentity
	}
	if !isNil(o.KubeletIdentity) {
		toSerialize["kubeletIdentity"] = o.KubeletIdentity
	}
	return toSerialize, nil
}

type NullableIdentityProfile struct {
	value *IdentityProfile
	isSet bool
}

func (v NullableIdentityProfile) Get() *IdentityProfile {
	return v.value
}

func (v *NullableIdentityProfile) Set(val *IdentityProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityProfile(val *IdentityProfile) *NullableIdentityProfile {
	return &NullableIdentityProfile{value: val, isSet: true}
}

func (v NullableIdentityProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


