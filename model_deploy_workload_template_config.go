/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the DeployWorkloadTemplateConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeployWorkloadTemplateConfig{}

// DeployWorkloadTemplateConfig deploy workload template configuration
type DeployWorkloadTemplateConfig struct {
	// namespace workload template should be deployed in
	Namespace string `json:"namespace"`
	// overrides for workload template
	Overrides []OverrideTemplate `json:"overrides"`
	Placement PlacementSpec `json:"placement"`
	// flag to indicate weather to deploy workload using revision recieved from webhook trigger
	UseRevisionFromWebhookTriggerEvent *bool `json:"useRevisionFromWebhookTriggerEvent,omitempty"`
	// name of workload template
	WorkloadTemplate string `json:"workloadTemplate"`
}

// NewDeployWorkloadTemplateConfig instantiates a new DeployWorkloadTemplateConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployWorkloadTemplateConfig(namespace string, overrides []OverrideTemplate, placement PlacementSpec, workloadTemplate string) *DeployWorkloadTemplateConfig {
	this := DeployWorkloadTemplateConfig{}
	this.Namespace = namespace
	this.Overrides = overrides
	this.Placement = placement
	this.WorkloadTemplate = workloadTemplate
	return &this
}

// NewDeployWorkloadTemplateConfigWithDefaults instantiates a new DeployWorkloadTemplateConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployWorkloadTemplateConfigWithDefaults() *DeployWorkloadTemplateConfig {
	this := DeployWorkloadTemplateConfig{}
	return &this
}

// GetNamespace returns the Namespace field value
func (o *DeployWorkloadTemplateConfig) GetNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
func (o *DeployWorkloadTemplateConfig) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Namespace, true
}

// SetNamespace sets field value
func (o *DeployWorkloadTemplateConfig) SetNamespace(v string) {
	o.Namespace = v
}

// GetOverrides returns the Overrides field value
func (o *DeployWorkloadTemplateConfig) GetOverrides() []OverrideTemplate {
	if o == nil {
		var ret []OverrideTemplate
		return ret
	}

	return o.Overrides
}

// GetOverridesOk returns a tuple with the Overrides field value
// and a boolean to check if the value has been set.
func (o *DeployWorkloadTemplateConfig) GetOverridesOk() ([]OverrideTemplate, bool) {
	if o == nil {
		return nil, false
	}
	return o.Overrides, true
}

// SetOverrides sets field value
func (o *DeployWorkloadTemplateConfig) SetOverrides(v []OverrideTemplate) {
	o.Overrides = v
}

// GetPlacement returns the Placement field value
func (o *DeployWorkloadTemplateConfig) GetPlacement() PlacementSpec {
	if o == nil {
		var ret PlacementSpec
		return ret
	}

	return o.Placement
}

// GetPlacementOk returns a tuple with the Placement field value
// and a boolean to check if the value has been set.
func (o *DeployWorkloadTemplateConfig) GetPlacementOk() (*PlacementSpec, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Placement, true
}

// SetPlacement sets field value
func (o *DeployWorkloadTemplateConfig) SetPlacement(v PlacementSpec) {
	o.Placement = v
}

// GetUseRevisionFromWebhookTriggerEvent returns the UseRevisionFromWebhookTriggerEvent field value if set, zero value otherwise.
func (o *DeployWorkloadTemplateConfig) GetUseRevisionFromWebhookTriggerEvent() bool {
	if o == nil || isNil(o.UseRevisionFromWebhookTriggerEvent) {
		var ret bool
		return ret
	}
	return *o.UseRevisionFromWebhookTriggerEvent
}

// GetUseRevisionFromWebhookTriggerEventOk returns a tuple with the UseRevisionFromWebhookTriggerEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployWorkloadTemplateConfig) GetUseRevisionFromWebhookTriggerEventOk() (*bool, bool) {
	if o == nil || isNil(o.UseRevisionFromWebhookTriggerEvent) {
		return nil, false
	}
	return o.UseRevisionFromWebhookTriggerEvent, true
}

// HasUseRevisionFromWebhookTriggerEvent returns a boolean if a field has been set.
func (o *DeployWorkloadTemplateConfig) HasUseRevisionFromWebhookTriggerEvent() bool {
	if o != nil && !isNil(o.UseRevisionFromWebhookTriggerEvent) {
		return true
	}

	return false
}

// SetUseRevisionFromWebhookTriggerEvent gets a reference to the given bool and assigns it to the UseRevisionFromWebhookTriggerEvent field.
func (o *DeployWorkloadTemplateConfig) SetUseRevisionFromWebhookTriggerEvent(v bool) {
	o.UseRevisionFromWebhookTriggerEvent = &v
}

// GetWorkloadTemplate returns the WorkloadTemplate field value
func (o *DeployWorkloadTemplateConfig) GetWorkloadTemplate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkloadTemplate
}

// GetWorkloadTemplateOk returns a tuple with the WorkloadTemplate field value
// and a boolean to check if the value has been set.
func (o *DeployWorkloadTemplateConfig) GetWorkloadTemplateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkloadTemplate, true
}

// SetWorkloadTemplate sets field value
func (o *DeployWorkloadTemplateConfig) SetWorkloadTemplate(v string) {
	o.WorkloadTemplate = v
}

func (o DeployWorkloadTemplateConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeployWorkloadTemplateConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["namespace"] = o.Namespace
	toSerialize["overrides"] = o.Overrides
	toSerialize["placement"] = o.Placement
	if !isNil(o.UseRevisionFromWebhookTriggerEvent) {
		toSerialize["useRevisionFromWebhookTriggerEvent"] = o.UseRevisionFromWebhookTriggerEvent
	}
	toSerialize["workloadTemplate"] = o.WorkloadTemplate
	return toSerialize, nil
}

type NullableDeployWorkloadTemplateConfig struct {
	value *DeployWorkloadTemplateConfig
	isSet bool
}

func (v NullableDeployWorkloadTemplateConfig) Get() *DeployWorkloadTemplateConfig {
	return v.value
}

func (v *NullableDeployWorkloadTemplateConfig) Set(val *DeployWorkloadTemplateConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployWorkloadTemplateConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployWorkloadTemplateConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployWorkloadTemplateConfig(val *DeployWorkloadTemplateConfig) *NullableDeployWorkloadTemplateConfig {
	return &NullableDeployWorkloadTemplateConfig{value: val, isSet: true}
}

func (v NullableDeployWorkloadTemplateConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployWorkloadTemplateConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


