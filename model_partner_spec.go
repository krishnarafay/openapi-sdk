/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the PartnerSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PartnerSpec{}

// PartnerSpec struct for PartnerSpec
type PartnerSpec struct {
	Domain *string `json:"domain,omitempty"`
	FavIconLink *string `json:"favIconLink,omitempty"`
	HelpdeskEmail *string `json:"helpdeskEmail,omitempty"`
	Host *string `json:"host,omitempty"`
	IsTOTPEnabled *bool `json:"isTOTPEnabled,omitempty"`
	LogoLink *string `json:"logoLink,omitempty"`
	NotificationEmail *string `json:"notificationEmail,omitempty"`
	OpsHost *string `json:"opsHost,omitempty"`
	ProductName *string `json:"productName,omitempty"`
	Settings *ExtraData `json:"settings,omitempty"`
	SupportTeamName *string `json:"supportTeamName,omitempty"`
	TosLink *string `json:"tosLink,omitempty"`
}

// NewPartnerSpec instantiates a new PartnerSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartnerSpec() *PartnerSpec {
	this := PartnerSpec{}
	return &this
}

// NewPartnerSpecWithDefaults instantiates a new PartnerSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartnerSpecWithDefaults() *PartnerSpec {
	this := PartnerSpec{}
	return &this
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *PartnerSpec) GetDomain() string {
	if o == nil || isNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerSpec) GetDomainOk() (*string, bool) {
	if o == nil || isNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *PartnerSpec) HasDomain() bool {
	if o != nil && !isNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *PartnerSpec) SetDomain(v string) {
	o.Domain = &v
}

// GetFavIconLink returns the FavIconLink field value if set, zero value otherwise.
func (o *PartnerSpec) GetFavIconLink() string {
	if o == nil || isNil(o.FavIconLink) {
		var ret string
		return ret
	}
	return *o.FavIconLink
}

// GetFavIconLinkOk returns a tuple with the FavIconLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerSpec) GetFavIconLinkOk() (*string, bool) {
	if o == nil || isNil(o.FavIconLink) {
		return nil, false
	}
	return o.FavIconLink, true
}

// HasFavIconLink returns a boolean if a field has been set.
func (o *PartnerSpec) HasFavIconLink() bool {
	if o != nil && !isNil(o.FavIconLink) {
		return true
	}

	return false
}

// SetFavIconLink gets a reference to the given string and assigns it to the FavIconLink field.
func (o *PartnerSpec) SetFavIconLink(v string) {
	o.FavIconLink = &v
}

// GetHelpdeskEmail returns the HelpdeskEmail field value if set, zero value otherwise.
func (o *PartnerSpec) GetHelpdeskEmail() string {
	if o == nil || isNil(o.HelpdeskEmail) {
		var ret string
		return ret
	}
	return *o.HelpdeskEmail
}

// GetHelpdeskEmailOk returns a tuple with the HelpdeskEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerSpec) GetHelpdeskEmailOk() (*string, bool) {
	if o == nil || isNil(o.HelpdeskEmail) {
		return nil, false
	}
	return o.HelpdeskEmail, true
}

// HasHelpdeskEmail returns a boolean if a field has been set.
func (o *PartnerSpec) HasHelpdeskEmail() bool {
	if o != nil && !isNil(o.HelpdeskEmail) {
		return true
	}

	return false
}

// SetHelpdeskEmail gets a reference to the given string and assigns it to the HelpdeskEmail field.
func (o *PartnerSpec) SetHelpdeskEmail(v string) {
	o.HelpdeskEmail = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *PartnerSpec) GetHost() string {
	if o == nil || isNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerSpec) GetHostOk() (*string, bool) {
	if o == nil || isNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *PartnerSpec) HasHost() bool {
	if o != nil && !isNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *PartnerSpec) SetHost(v string) {
	o.Host = &v
}

// GetIsTOTPEnabled returns the IsTOTPEnabled field value if set, zero value otherwise.
func (o *PartnerSpec) GetIsTOTPEnabled() bool {
	if o == nil || isNil(o.IsTOTPEnabled) {
		var ret bool
		return ret
	}
	return *o.IsTOTPEnabled
}

// GetIsTOTPEnabledOk returns a tuple with the IsTOTPEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerSpec) GetIsTOTPEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.IsTOTPEnabled) {
		return nil, false
	}
	return o.IsTOTPEnabled, true
}

// HasIsTOTPEnabled returns a boolean if a field has been set.
func (o *PartnerSpec) HasIsTOTPEnabled() bool {
	if o != nil && !isNil(o.IsTOTPEnabled) {
		return true
	}

	return false
}

// SetIsTOTPEnabled gets a reference to the given bool and assigns it to the IsTOTPEnabled field.
func (o *PartnerSpec) SetIsTOTPEnabled(v bool) {
	o.IsTOTPEnabled = &v
}

// GetLogoLink returns the LogoLink field value if set, zero value otherwise.
func (o *PartnerSpec) GetLogoLink() string {
	if o == nil || isNil(o.LogoLink) {
		var ret string
		return ret
	}
	return *o.LogoLink
}

// GetLogoLinkOk returns a tuple with the LogoLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerSpec) GetLogoLinkOk() (*string, bool) {
	if o == nil || isNil(o.LogoLink) {
		return nil, false
	}
	return o.LogoLink, true
}

// HasLogoLink returns a boolean if a field has been set.
func (o *PartnerSpec) HasLogoLink() bool {
	if o != nil && !isNil(o.LogoLink) {
		return true
	}

	return false
}

// SetLogoLink gets a reference to the given string and assigns it to the LogoLink field.
func (o *PartnerSpec) SetLogoLink(v string) {
	o.LogoLink = &v
}

// GetNotificationEmail returns the NotificationEmail field value if set, zero value otherwise.
func (o *PartnerSpec) GetNotificationEmail() string {
	if o == nil || isNil(o.NotificationEmail) {
		var ret string
		return ret
	}
	return *o.NotificationEmail
}

// GetNotificationEmailOk returns a tuple with the NotificationEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerSpec) GetNotificationEmailOk() (*string, bool) {
	if o == nil || isNil(o.NotificationEmail) {
		return nil, false
	}
	return o.NotificationEmail, true
}

// HasNotificationEmail returns a boolean if a field has been set.
func (o *PartnerSpec) HasNotificationEmail() bool {
	if o != nil && !isNil(o.NotificationEmail) {
		return true
	}

	return false
}

// SetNotificationEmail gets a reference to the given string and assigns it to the NotificationEmail field.
func (o *PartnerSpec) SetNotificationEmail(v string) {
	o.NotificationEmail = &v
}

// GetOpsHost returns the OpsHost field value if set, zero value otherwise.
func (o *PartnerSpec) GetOpsHost() string {
	if o == nil || isNil(o.OpsHost) {
		var ret string
		return ret
	}
	return *o.OpsHost
}

// GetOpsHostOk returns a tuple with the OpsHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerSpec) GetOpsHostOk() (*string, bool) {
	if o == nil || isNil(o.OpsHost) {
		return nil, false
	}
	return o.OpsHost, true
}

// HasOpsHost returns a boolean if a field has been set.
func (o *PartnerSpec) HasOpsHost() bool {
	if o != nil && !isNil(o.OpsHost) {
		return true
	}

	return false
}

// SetOpsHost gets a reference to the given string and assigns it to the OpsHost field.
func (o *PartnerSpec) SetOpsHost(v string) {
	o.OpsHost = &v
}

// GetProductName returns the ProductName field value if set, zero value otherwise.
func (o *PartnerSpec) GetProductName() string {
	if o == nil || isNil(o.ProductName) {
		var ret string
		return ret
	}
	return *o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerSpec) GetProductNameOk() (*string, bool) {
	if o == nil || isNil(o.ProductName) {
		return nil, false
	}
	return o.ProductName, true
}

// HasProductName returns a boolean if a field has been set.
func (o *PartnerSpec) HasProductName() bool {
	if o != nil && !isNil(o.ProductName) {
		return true
	}

	return false
}

// SetProductName gets a reference to the given string and assigns it to the ProductName field.
func (o *PartnerSpec) SetProductName(v string) {
	o.ProductName = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *PartnerSpec) GetSettings() ExtraData {
	if o == nil || isNil(o.Settings) {
		var ret ExtraData
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerSpec) GetSettingsOk() (*ExtraData, bool) {
	if o == nil || isNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *PartnerSpec) HasSettings() bool {
	if o != nil && !isNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given ExtraData and assigns it to the Settings field.
func (o *PartnerSpec) SetSettings(v ExtraData) {
	o.Settings = &v
}

// GetSupportTeamName returns the SupportTeamName field value if set, zero value otherwise.
func (o *PartnerSpec) GetSupportTeamName() string {
	if o == nil || isNil(o.SupportTeamName) {
		var ret string
		return ret
	}
	return *o.SupportTeamName
}

// GetSupportTeamNameOk returns a tuple with the SupportTeamName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerSpec) GetSupportTeamNameOk() (*string, bool) {
	if o == nil || isNil(o.SupportTeamName) {
		return nil, false
	}
	return o.SupportTeamName, true
}

// HasSupportTeamName returns a boolean if a field has been set.
func (o *PartnerSpec) HasSupportTeamName() bool {
	if o != nil && !isNil(o.SupportTeamName) {
		return true
	}

	return false
}

// SetSupportTeamName gets a reference to the given string and assigns it to the SupportTeamName field.
func (o *PartnerSpec) SetSupportTeamName(v string) {
	o.SupportTeamName = &v
}

// GetTosLink returns the TosLink field value if set, zero value otherwise.
func (o *PartnerSpec) GetTosLink() string {
	if o == nil || isNil(o.TosLink) {
		var ret string
		return ret
	}
	return *o.TosLink
}

// GetTosLinkOk returns a tuple with the TosLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerSpec) GetTosLinkOk() (*string, bool) {
	if o == nil || isNil(o.TosLink) {
		return nil, false
	}
	return o.TosLink, true
}

// HasTosLink returns a boolean if a field has been set.
func (o *PartnerSpec) HasTosLink() bool {
	if o != nil && !isNil(o.TosLink) {
		return true
	}

	return false
}

// SetTosLink gets a reference to the given string and assigns it to the TosLink field.
func (o *PartnerSpec) SetTosLink(v string) {
	o.TosLink = &v
}

func (o PartnerSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PartnerSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !isNil(o.FavIconLink) {
		toSerialize["favIconLink"] = o.FavIconLink
	}
	if !isNil(o.HelpdeskEmail) {
		toSerialize["helpdeskEmail"] = o.HelpdeskEmail
	}
	if !isNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !isNil(o.IsTOTPEnabled) {
		toSerialize["isTOTPEnabled"] = o.IsTOTPEnabled
	}
	if !isNil(o.LogoLink) {
		toSerialize["logoLink"] = o.LogoLink
	}
	if !isNil(o.NotificationEmail) {
		toSerialize["notificationEmail"] = o.NotificationEmail
	}
	if !isNil(o.OpsHost) {
		toSerialize["opsHost"] = o.OpsHost
	}
	if !isNil(o.ProductName) {
		toSerialize["productName"] = o.ProductName
	}
	if !isNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	if !isNil(o.SupportTeamName) {
		toSerialize["supportTeamName"] = o.SupportTeamName
	}
	if !isNil(o.TosLink) {
		toSerialize["tosLink"] = o.TosLink
	}
	return toSerialize, nil
}

type NullablePartnerSpec struct {
	value *PartnerSpec
	isSet bool
}

func (v NullablePartnerSpec) Get() *PartnerSpec {
	return v.value
}

func (v *NullablePartnerSpec) Set(val *PartnerSpec) {
	v.value = val
	v.isSet = true
}

func (v NullablePartnerSpec) IsSet() bool {
	return v.isSet
}

func (v *NullablePartnerSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartnerSpec(val *PartnerSpec) *NullablePartnerSpec {
	return &NullablePartnerSpec{value: val, isSet: true}
}

func (v NullablePartnerSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartnerSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


