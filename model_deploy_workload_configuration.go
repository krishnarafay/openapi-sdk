/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the DeployWorkloadConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeployWorkloadConfiguration{}

// DeployWorkloadConfiguration deploy workload configuration
type DeployWorkloadConfiguration struct {
	// flag to indicate weather to deploy workload using revision recieved from webhook trigger
	UseRevisionFromWebhookTriggerEvent *bool `json:"useRevisionFromWebhookTriggerEvent,omitempty"`
	// name of the workload
	Workload string `json:"workload"`
}

// NewDeployWorkloadConfiguration instantiates a new DeployWorkloadConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployWorkloadConfiguration(workload string) *DeployWorkloadConfiguration {
	this := DeployWorkloadConfiguration{}
	this.Workload = workload
	return &this
}

// NewDeployWorkloadConfigurationWithDefaults instantiates a new DeployWorkloadConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployWorkloadConfigurationWithDefaults() *DeployWorkloadConfiguration {
	this := DeployWorkloadConfiguration{}
	return &this
}

// GetUseRevisionFromWebhookTriggerEvent returns the UseRevisionFromWebhookTriggerEvent field value if set, zero value otherwise.
func (o *DeployWorkloadConfiguration) GetUseRevisionFromWebhookTriggerEvent() bool {
	if o == nil || isNil(o.UseRevisionFromWebhookTriggerEvent) {
		var ret bool
		return ret
	}
	return *o.UseRevisionFromWebhookTriggerEvent
}

// GetUseRevisionFromWebhookTriggerEventOk returns a tuple with the UseRevisionFromWebhookTriggerEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployWorkloadConfiguration) GetUseRevisionFromWebhookTriggerEventOk() (*bool, bool) {
	if o == nil || isNil(o.UseRevisionFromWebhookTriggerEvent) {
		return nil, false
	}
	return o.UseRevisionFromWebhookTriggerEvent, true
}

// HasUseRevisionFromWebhookTriggerEvent returns a boolean if a field has been set.
func (o *DeployWorkloadConfiguration) HasUseRevisionFromWebhookTriggerEvent() bool {
	if o != nil && !isNil(o.UseRevisionFromWebhookTriggerEvent) {
		return true
	}

	return false
}

// SetUseRevisionFromWebhookTriggerEvent gets a reference to the given bool and assigns it to the UseRevisionFromWebhookTriggerEvent field.
func (o *DeployWorkloadConfiguration) SetUseRevisionFromWebhookTriggerEvent(v bool) {
	o.UseRevisionFromWebhookTriggerEvent = &v
}

// GetWorkload returns the Workload field value
func (o *DeployWorkloadConfiguration) GetWorkload() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Workload
}

// GetWorkloadOk returns a tuple with the Workload field value
// and a boolean to check if the value has been set.
func (o *DeployWorkloadConfiguration) GetWorkloadOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Workload, true
}

// SetWorkload sets field value
func (o *DeployWorkloadConfiguration) SetWorkload(v string) {
	o.Workload = v
}

func (o DeployWorkloadConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeployWorkloadConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.UseRevisionFromWebhookTriggerEvent) {
		toSerialize["useRevisionFromWebhookTriggerEvent"] = o.UseRevisionFromWebhookTriggerEvent
	}
	toSerialize["workload"] = o.Workload
	return toSerialize, nil
}

type NullableDeployWorkloadConfiguration struct {
	value *DeployWorkloadConfiguration
	isSet bool
}

func (v NullableDeployWorkloadConfiguration) Get() *DeployWorkloadConfiguration {
	return v.value
}

func (v *NullableDeployWorkloadConfiguration) Set(val *DeployWorkloadConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployWorkloadConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployWorkloadConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployWorkloadConfiguration(val *DeployWorkloadConfiguration) *NullableDeployWorkloadConfiguration {
	return &NullableDeployWorkloadConfiguration{value: val, isSet: true}
}

func (v NullableDeployWorkloadConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployWorkloadConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


