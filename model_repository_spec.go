/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the RepositorySpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RepositorySpec{}

// RepositorySpec repository specification
type RepositorySpec struct {
	// repository agents
	Agents []AgentMeta `json:"agents,omitempty"`
	Credentials *RepositorySpecCredentials `json:"credentials,omitempty"`
	// repository endpoint
	Endpoint *string `json:"endpoint,omitempty"`
	Options *RepositoryOptions `json:"options,omitempty"`
	Secret *File `json:"secret,omitempty"`
	Sharing *SharingSpec `json:"sharing,omitempty"`
	// repository type
	Type *string `json:"type,omitempty"`
}

// NewRepositorySpec instantiates a new RepositorySpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepositorySpec() *RepositorySpec {
	this := RepositorySpec{}
	return &this
}

// NewRepositorySpecWithDefaults instantiates a new RepositorySpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositorySpecWithDefaults() *RepositorySpec {
	this := RepositorySpec{}
	return &this
}

// GetAgents returns the Agents field value if set, zero value otherwise.
func (o *RepositorySpec) GetAgents() []AgentMeta {
	if o == nil || isNil(o.Agents) {
		var ret []AgentMeta
		return ret
	}
	return o.Agents
}

// GetAgentsOk returns a tuple with the Agents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositorySpec) GetAgentsOk() ([]AgentMeta, bool) {
	if o == nil || isNil(o.Agents) {
		return nil, false
	}
	return o.Agents, true
}

// HasAgents returns a boolean if a field has been set.
func (o *RepositorySpec) HasAgents() bool {
	if o != nil && !isNil(o.Agents) {
		return true
	}

	return false
}

// SetAgents gets a reference to the given []AgentMeta and assigns it to the Agents field.
func (o *RepositorySpec) SetAgents(v []AgentMeta) {
	o.Agents = v
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *RepositorySpec) GetCredentials() RepositorySpecCredentials {
	if o == nil || isNil(o.Credentials) {
		var ret RepositorySpecCredentials
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositorySpec) GetCredentialsOk() (*RepositorySpecCredentials, bool) {
	if o == nil || isNil(o.Credentials) {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *RepositorySpec) HasCredentials() bool {
	if o != nil && !isNil(o.Credentials) {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given RepositorySpecCredentials and assigns it to the Credentials field.
func (o *RepositorySpec) SetCredentials(v RepositorySpecCredentials) {
	o.Credentials = &v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *RepositorySpec) GetEndpoint() string {
	if o == nil || isNil(o.Endpoint) {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositorySpec) GetEndpointOk() (*string, bool) {
	if o == nil || isNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *RepositorySpec) HasEndpoint() bool {
	if o != nil && !isNil(o.Endpoint) {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *RepositorySpec) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *RepositorySpec) GetOptions() RepositoryOptions {
	if o == nil || isNil(o.Options) {
		var ret RepositoryOptions
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositorySpec) GetOptionsOk() (*RepositoryOptions, bool) {
	if o == nil || isNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *RepositorySpec) HasOptions() bool {
	if o != nil && !isNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given RepositoryOptions and assigns it to the Options field.
func (o *RepositorySpec) SetOptions(v RepositoryOptions) {
	o.Options = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *RepositorySpec) GetSecret() File {
	if o == nil || isNil(o.Secret) {
		var ret File
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositorySpec) GetSecretOk() (*File, bool) {
	if o == nil || isNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *RepositorySpec) HasSecret() bool {
	if o != nil && !isNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given File and assigns it to the Secret field.
func (o *RepositorySpec) SetSecret(v File) {
	o.Secret = &v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *RepositorySpec) GetSharing() SharingSpec {
	if o == nil || isNil(o.Sharing) {
		var ret SharingSpec
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositorySpec) GetSharingOk() (*SharingSpec, bool) {
	if o == nil || isNil(o.Sharing) {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *RepositorySpec) HasSharing() bool {
	if o != nil && !isNil(o.Sharing) {
		return true
	}

	return false
}

// SetSharing gets a reference to the given SharingSpec and assigns it to the Sharing field.
func (o *RepositorySpec) SetSharing(v SharingSpec) {
	o.Sharing = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RepositorySpec) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositorySpec) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RepositorySpec) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *RepositorySpec) SetType(v string) {
	o.Type = &v
}

func (o RepositorySpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RepositorySpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Agents) {
		toSerialize["agents"] = o.Agents
	}
	if !isNil(o.Credentials) {
		toSerialize["credentials"] = o.Credentials
	}
	if !isNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	if !isNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	if !isNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	if !isNil(o.Sharing) {
		toSerialize["sharing"] = o.Sharing
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableRepositorySpec struct {
	value *RepositorySpec
	isSet bool
}

func (v NullableRepositorySpec) Get() *RepositorySpec {
	return v.value
}

func (v *NullableRepositorySpec) Set(val *RepositorySpec) {
	v.value = val
	v.isSet = true
}

func (v NullableRepositorySpec) IsSet() bool {
	return v.isSet
}

func (v *NullableRepositorySpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepositorySpec(val *RepositorySpec) *NullableRepositorySpec {
	return &NullableRepositorySpec{value: val, isSet: true}
}

func (v NullableRepositorySpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepositorySpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


