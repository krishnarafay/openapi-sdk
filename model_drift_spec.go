/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the DriftSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DriftSpec{}

// DriftSpec drift reconcillation specification for a resource
type DriftSpec struct {
	// flag to specify if sharing is enabled for resource
	Action *string `json:"action,omitempty"`
	// flag to specify if drift reconcillation is enabled for resource
	Enabled bool `json:"enabled"`
}

// NewDriftSpec instantiates a new DriftSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDriftSpec(enabled bool) *DriftSpec {
	this := DriftSpec{}
	this.Enabled = enabled
	return &this
}

// NewDriftSpecWithDefaults instantiates a new DriftSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDriftSpecWithDefaults() *DriftSpec {
	this := DriftSpec{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *DriftSpec) GetAction() string {
	if o == nil || isNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DriftSpec) GetActionOk() (*string, bool) {
	if o == nil || isNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *DriftSpec) HasAction() bool {
	if o != nil && !isNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *DriftSpec) SetAction(v string) {
	o.Action = &v
}

// GetEnabled returns the Enabled field value
func (o *DriftSpec) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *DriftSpec) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *DriftSpec) SetEnabled(v bool) {
	o.Enabled = v
}

func (o DriftSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DriftSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	toSerialize["enabled"] = o.Enabled
	return toSerialize, nil
}

type NullableDriftSpec struct {
	value *DriftSpec
	isSet bool
}

func (v NullableDriftSpec) Get() *DriftSpec {
	return v.value
}

func (v *NullableDriftSpec) Set(val *DriftSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableDriftSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableDriftSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDriftSpec(val *DriftSpec) *NullableDriftSpec {
	return &NullableDriftSpec{value: val, isSet: true}
}

func (v NullableDriftSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDriftSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


