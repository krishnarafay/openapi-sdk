/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ApprovalConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApprovalConfiguration{}

// ApprovalConfiguration approval configuration
type ApprovalConfiguration struct {
	// list of approvers
	Approvers []Approver `json:"approvers"`
	// timeout for approval
	Timeout *string `json:"timeout,omitempty"`
	// type of approval
	Type *string `json:"type,omitempty"`
}

// NewApprovalConfiguration instantiates a new ApprovalConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApprovalConfiguration(approvers []Approver) *ApprovalConfiguration {
	this := ApprovalConfiguration{}
	this.Approvers = approvers
	return &this
}

// NewApprovalConfigurationWithDefaults instantiates a new ApprovalConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApprovalConfigurationWithDefaults() *ApprovalConfiguration {
	this := ApprovalConfiguration{}
	return &this
}

// GetApprovers returns the Approvers field value
func (o *ApprovalConfiguration) GetApprovers() []Approver {
	if o == nil {
		var ret []Approver
		return ret
	}

	return o.Approvers
}

// GetApproversOk returns a tuple with the Approvers field value
// and a boolean to check if the value has been set.
func (o *ApprovalConfiguration) GetApproversOk() ([]Approver, bool) {
	if o == nil {
		return nil, false
	}
	return o.Approvers, true
}

// SetApprovers sets field value
func (o *ApprovalConfiguration) SetApprovers(v []Approver) {
	o.Approvers = v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *ApprovalConfiguration) GetTimeout() string {
	if o == nil || isNil(o.Timeout) {
		var ret string
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalConfiguration) GetTimeoutOk() (*string, bool) {
	if o == nil || isNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *ApprovalConfiguration) HasTimeout() bool {
	if o != nil && !isNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given string and assigns it to the Timeout field.
func (o *ApprovalConfiguration) SetTimeout(v string) {
	o.Timeout = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ApprovalConfiguration) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApprovalConfiguration) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ApprovalConfiguration) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ApprovalConfiguration) SetType(v string) {
	o.Type = &v
}

func (o ApprovalConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApprovalConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["approvers"] = o.Approvers
	if !isNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableApprovalConfiguration struct {
	value *ApprovalConfiguration
	isSet bool
}

func (v NullableApprovalConfiguration) Get() *ApprovalConfiguration {
	return v.value
}

func (v *NullableApprovalConfiguration) Set(val *ApprovalConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableApprovalConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableApprovalConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApprovalConfiguration(val *ApprovalConfiguration) *NullableApprovalConfiguration {
	return &NullableApprovalConfiguration{value: val, isSet: true}
}

func (v NullableApprovalConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApprovalConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


