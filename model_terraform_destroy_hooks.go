/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the TerraformDestroyHooks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TerraformDestroyHooks{}

// TerraformDestroyHooks struct for TerraformDestroyHooks
type TerraformDestroyHooks struct {
	Destroy *LifecycleEventHooks `json:"destroy,omitempty"`
	Init *LifecycleEventHooks `json:"init,omitempty"`
	Plan *LifecycleEventHooks `json:"plan,omitempty"`
}

// NewTerraformDestroyHooks instantiates a new TerraformDestroyHooks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTerraformDestroyHooks() *TerraformDestroyHooks {
	this := TerraformDestroyHooks{}
	return &this
}

// NewTerraformDestroyHooksWithDefaults instantiates a new TerraformDestroyHooks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTerraformDestroyHooksWithDefaults() *TerraformDestroyHooks {
	this := TerraformDestroyHooks{}
	return &this
}

// GetDestroy returns the Destroy field value if set, zero value otherwise.
func (o *TerraformDestroyHooks) GetDestroy() LifecycleEventHooks {
	if o == nil || isNil(o.Destroy) {
		var ret LifecycleEventHooks
		return ret
	}
	return *o.Destroy
}

// GetDestroyOk returns a tuple with the Destroy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformDestroyHooks) GetDestroyOk() (*LifecycleEventHooks, bool) {
	if o == nil || isNil(o.Destroy) {
		return nil, false
	}
	return o.Destroy, true
}

// HasDestroy returns a boolean if a field has been set.
func (o *TerraformDestroyHooks) HasDestroy() bool {
	if o != nil && !isNil(o.Destroy) {
		return true
	}

	return false
}

// SetDestroy gets a reference to the given LifecycleEventHooks and assigns it to the Destroy field.
func (o *TerraformDestroyHooks) SetDestroy(v LifecycleEventHooks) {
	o.Destroy = &v
}

// GetInit returns the Init field value if set, zero value otherwise.
func (o *TerraformDestroyHooks) GetInit() LifecycleEventHooks {
	if o == nil || isNil(o.Init) {
		var ret LifecycleEventHooks
		return ret
	}
	return *o.Init
}

// GetInitOk returns a tuple with the Init field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformDestroyHooks) GetInitOk() (*LifecycleEventHooks, bool) {
	if o == nil || isNil(o.Init) {
		return nil, false
	}
	return o.Init, true
}

// HasInit returns a boolean if a field has been set.
func (o *TerraformDestroyHooks) HasInit() bool {
	if o != nil && !isNil(o.Init) {
		return true
	}

	return false
}

// SetInit gets a reference to the given LifecycleEventHooks and assigns it to the Init field.
func (o *TerraformDestroyHooks) SetInit(v LifecycleEventHooks) {
	o.Init = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *TerraformDestroyHooks) GetPlan() LifecycleEventHooks {
	if o == nil || isNil(o.Plan) {
		var ret LifecycleEventHooks
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerraformDestroyHooks) GetPlanOk() (*LifecycleEventHooks, bool) {
	if o == nil || isNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *TerraformDestroyHooks) HasPlan() bool {
	if o != nil && !isNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given LifecycleEventHooks and assigns it to the Plan field.
func (o *TerraformDestroyHooks) SetPlan(v LifecycleEventHooks) {
	o.Plan = &v
}

func (o TerraformDestroyHooks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TerraformDestroyHooks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Destroy) {
		toSerialize["destroy"] = o.Destroy
	}
	if !isNil(o.Init) {
		toSerialize["init"] = o.Init
	}
	if !isNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	return toSerialize, nil
}

type NullableTerraformDestroyHooks struct {
	value *TerraformDestroyHooks
	isSet bool
}

func (v NullableTerraformDestroyHooks) Get() *TerraformDestroyHooks {
	return v.value
}

func (v *NullableTerraformDestroyHooks) Set(val *TerraformDestroyHooks) {
	v.value = val
	v.isSet = true
}

func (v NullableTerraformDestroyHooks) IsSet() bool {
	return v.isSet
}

func (v *NullableTerraformDestroyHooks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTerraformDestroyHooks(val *TerraformDestroyHooks) *NullableTerraformDestroyHooks {
	return &NullableTerraformDestroyHooks{value: val, isSet: true}
}

func (v NullableTerraformDestroyHooks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTerraformDestroyHooks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


