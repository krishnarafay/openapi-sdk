/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the NodepoolStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NodepoolStatus{}

// NodepoolStatus struct for NodepoolStatus
type NodepoolStatus struct {
	CreatedAt *StatusTime `json:"createdAt,omitempty"`
	Id *string `json:"id,omitempty"`
	KubeVersion *string `json:"kubeVersion,omitempty"`
	Name *string `json:"name,omitempty"`
	NodeImageVersion *string `json:"nodeImageVersion,omitempty"`
	ProvisionStatus *string `json:"provisionStatus,omitempty"`
}

// NewNodepoolStatus instantiates a new NodepoolStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodepoolStatus() *NodepoolStatus {
	this := NodepoolStatus{}
	return &this
}

// NewNodepoolStatusWithDefaults instantiates a new NodepoolStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodepoolStatusWithDefaults() *NodepoolStatus {
	this := NodepoolStatus{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *NodepoolStatus) GetCreatedAt() StatusTime {
	if o == nil || isNil(o.CreatedAt) {
		var ret StatusTime
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodepoolStatus) GetCreatedAtOk() (*StatusTime, bool) {
	if o == nil || isNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *NodepoolStatus) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given StatusTime and assigns it to the CreatedAt field.
func (o *NodepoolStatus) SetCreatedAt(v StatusTime) {
	o.CreatedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NodepoolStatus) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodepoolStatus) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NodepoolStatus) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *NodepoolStatus) SetId(v string) {
	o.Id = &v
}

// GetKubeVersion returns the KubeVersion field value if set, zero value otherwise.
func (o *NodepoolStatus) GetKubeVersion() string {
	if o == nil || isNil(o.KubeVersion) {
		var ret string
		return ret
	}
	return *o.KubeVersion
}

// GetKubeVersionOk returns a tuple with the KubeVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodepoolStatus) GetKubeVersionOk() (*string, bool) {
	if o == nil || isNil(o.KubeVersion) {
		return nil, false
	}
	return o.KubeVersion, true
}

// HasKubeVersion returns a boolean if a field has been set.
func (o *NodepoolStatus) HasKubeVersion() bool {
	if o != nil && !isNil(o.KubeVersion) {
		return true
	}

	return false
}

// SetKubeVersion gets a reference to the given string and assigns it to the KubeVersion field.
func (o *NodepoolStatus) SetKubeVersion(v string) {
	o.KubeVersion = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NodepoolStatus) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodepoolStatus) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NodepoolStatus) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NodepoolStatus) SetName(v string) {
	o.Name = &v
}

// GetNodeImageVersion returns the NodeImageVersion field value if set, zero value otherwise.
func (o *NodepoolStatus) GetNodeImageVersion() string {
	if o == nil || isNil(o.NodeImageVersion) {
		var ret string
		return ret
	}
	return *o.NodeImageVersion
}

// GetNodeImageVersionOk returns a tuple with the NodeImageVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodepoolStatus) GetNodeImageVersionOk() (*string, bool) {
	if o == nil || isNil(o.NodeImageVersion) {
		return nil, false
	}
	return o.NodeImageVersion, true
}

// HasNodeImageVersion returns a boolean if a field has been set.
func (o *NodepoolStatus) HasNodeImageVersion() bool {
	if o != nil && !isNil(o.NodeImageVersion) {
		return true
	}

	return false
}

// SetNodeImageVersion gets a reference to the given string and assigns it to the NodeImageVersion field.
func (o *NodepoolStatus) SetNodeImageVersion(v string) {
	o.NodeImageVersion = &v
}

// GetProvisionStatus returns the ProvisionStatus field value if set, zero value otherwise.
func (o *NodepoolStatus) GetProvisionStatus() string {
	if o == nil || isNil(o.ProvisionStatus) {
		var ret string
		return ret
	}
	return *o.ProvisionStatus
}

// GetProvisionStatusOk returns a tuple with the ProvisionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodepoolStatus) GetProvisionStatusOk() (*string, bool) {
	if o == nil || isNil(o.ProvisionStatus) {
		return nil, false
	}
	return o.ProvisionStatus, true
}

// HasProvisionStatus returns a boolean if a field has been set.
func (o *NodepoolStatus) HasProvisionStatus() bool {
	if o != nil && !isNil(o.ProvisionStatus) {
		return true
	}

	return false
}

// SetProvisionStatus gets a reference to the given string and assigns it to the ProvisionStatus field.
func (o *NodepoolStatus) SetProvisionStatus(v string) {
	o.ProvisionStatus = &v
}

func (o NodepoolStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NodepoolStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.KubeVersion) {
		toSerialize["kubeVersion"] = o.KubeVersion
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.NodeImageVersion) {
		toSerialize["nodeImageVersion"] = o.NodeImageVersion
	}
	if !isNil(o.ProvisionStatus) {
		toSerialize["provisionStatus"] = o.ProvisionStatus
	}
	return toSerialize, nil
}

type NullableNodepoolStatus struct {
	value *NodepoolStatus
	isSet bool
}

func (v NullableNodepoolStatus) Get() *NodepoolStatus {
	return v.value
}

func (v *NullableNodepoolStatus) Set(val *NodepoolStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableNodepoolStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableNodepoolStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodepoolStatus(val *NodepoolStatus) *NullableNodepoolStatus {
	return &NullableNodepoolStatus{value: val, isSet: true}
}

func (v NullableNodepoolStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodepoolStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


