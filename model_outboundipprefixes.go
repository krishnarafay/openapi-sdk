/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the Outboundipprefixes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Outboundipprefixes{}

// Outboundipprefixes struct for Outboundipprefixes
type Outboundipprefixes struct {
	// A list of public IP prefix resources.
	PublicIPPrefixes []Publicipprefixes `json:"publicIPPrefixes,omitempty"`
}

// NewOutboundipprefixes instantiates a new Outboundipprefixes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutboundipprefixes() *Outboundipprefixes {
	this := Outboundipprefixes{}
	return &this
}

// NewOutboundipprefixesWithDefaults instantiates a new Outboundipprefixes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutboundipprefixesWithDefaults() *Outboundipprefixes {
	this := Outboundipprefixes{}
	return &this
}

// GetPublicIPPrefixes returns the PublicIPPrefixes field value if set, zero value otherwise.
func (o *Outboundipprefixes) GetPublicIPPrefixes() []Publicipprefixes {
	if o == nil || isNil(o.PublicIPPrefixes) {
		var ret []Publicipprefixes
		return ret
	}
	return o.PublicIPPrefixes
}

// GetPublicIPPrefixesOk returns a tuple with the PublicIPPrefixes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Outboundipprefixes) GetPublicIPPrefixesOk() ([]Publicipprefixes, bool) {
	if o == nil || isNil(o.PublicIPPrefixes) {
		return nil, false
	}
	return o.PublicIPPrefixes, true
}

// HasPublicIPPrefixes returns a boolean if a field has been set.
func (o *Outboundipprefixes) HasPublicIPPrefixes() bool {
	if o != nil && !isNil(o.PublicIPPrefixes) {
		return true
	}

	return false
}

// SetPublicIPPrefixes gets a reference to the given []Publicipprefixes and assigns it to the PublicIPPrefixes field.
func (o *Outboundipprefixes) SetPublicIPPrefixes(v []Publicipprefixes) {
	o.PublicIPPrefixes = v
}

func (o Outboundipprefixes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Outboundipprefixes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PublicIPPrefixes) {
		toSerialize["publicIPPrefixes"] = o.PublicIPPrefixes
	}
	return toSerialize, nil
}

type NullableOutboundipprefixes struct {
	value *Outboundipprefixes
	isSet bool
}

func (v NullableOutboundipprefixes) Get() *Outboundipprefixes {
	return v.value
}

func (v *NullableOutboundipprefixes) Set(val *Outboundipprefixes) {
	v.value = val
	v.isSet = true
}

func (v NullableOutboundipprefixes) IsSet() bool {
	return v.isSet
}

func (v *NullableOutboundipprefixes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutboundipprefixes(val *Outboundipprefixes) *NullableOutboundipprefixes {
	return &NullableOutboundipprefixes{value: val, isSet: true}
}

func (v NullableOutboundipprefixes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutboundipprefixes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


