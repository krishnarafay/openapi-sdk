/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the SecretGroupSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretGroupSpec{}

// SecretGroupSpec specification of SecretGroup
type SecretGroupSpec struct {
	Secret *File `json:"secret,omitempty"`
	Secrets []Secret `json:"secrets"`
}

// NewSecretGroupSpec instantiates a new SecretGroupSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretGroupSpec(secrets []Secret) *SecretGroupSpec {
	this := SecretGroupSpec{}
	this.Secrets = secrets
	return &this
}

// NewSecretGroupSpecWithDefaults instantiates a new SecretGroupSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretGroupSpecWithDefaults() *SecretGroupSpec {
	this := SecretGroupSpec{}
	return &this
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *SecretGroupSpec) GetSecret() File {
	if o == nil || isNil(o.Secret) {
		var ret File
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretGroupSpec) GetSecretOk() (*File, bool) {
	if o == nil || isNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *SecretGroupSpec) HasSecret() bool {
	if o != nil && !isNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given File and assigns it to the Secret field.
func (o *SecretGroupSpec) SetSecret(v File) {
	o.Secret = &v
}

// GetSecrets returns the Secrets field value
func (o *SecretGroupSpec) GetSecrets() []Secret {
	if o == nil {
		var ret []Secret
		return ret
	}

	return o.Secrets
}

// GetSecretsOk returns a tuple with the Secrets field value
// and a boolean to check if the value has been set.
func (o *SecretGroupSpec) GetSecretsOk() ([]Secret, bool) {
	if o == nil {
		return nil, false
	}
	return o.Secrets, true
}

// SetSecrets sets field value
func (o *SecretGroupSpec) SetSecrets(v []Secret) {
	o.Secrets = v
}

func (o SecretGroupSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretGroupSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	toSerialize["secrets"] = o.Secrets
	return toSerialize, nil
}

type NullableSecretGroupSpec struct {
	value *SecretGroupSpec
	isSet bool
}

func (v NullableSecretGroupSpec) Get() *SecretGroupSpec {
	return v.value
}

func (v *NullableSecretGroupSpec) Set(val *SecretGroupSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretGroupSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretGroupSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretGroupSpec(val *SecretGroupSpec) *NullableSecretGroupSpec {
	return &NullableSecretGroupSpec{value: val, isSet: true}
}

func (v NullableSecretGroupSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretGroupSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


