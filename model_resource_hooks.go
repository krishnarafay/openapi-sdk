/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ResourceHooks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceHooks{}

// ResourceHooks struct for ResourceHooks
type ResourceHooks struct {
	// Configure the on completion lifecycle hook
	OnCompletion []Hook `json:"on_completion,omitempty"`
	// Configure the on failure lifecycle hook
	OnFailure []Hook `json:"on_failure,omitempty"`
	// Configure the on initialize lifecycle hook
	OnInit []Hook `json:"on_init,omitempty"`
	// Configure the on success lifecycle hook
	OnSuccess []Hook `json:"on_success,omitempty"`
	Provider *ResourceTemplateProviderHooks `json:"provider,omitempty"`
}

// NewResourceHooks instantiates a new ResourceHooks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceHooks() *ResourceHooks {
	this := ResourceHooks{}
	return &this
}

// NewResourceHooksWithDefaults instantiates a new ResourceHooks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceHooksWithDefaults() *ResourceHooks {
	this := ResourceHooks{}
	return &this
}

// GetOnCompletion returns the OnCompletion field value if set, zero value otherwise.
func (o *ResourceHooks) GetOnCompletion() []Hook {
	if o == nil || isNil(o.OnCompletion) {
		var ret []Hook
		return ret
	}
	return o.OnCompletion
}

// GetOnCompletionOk returns a tuple with the OnCompletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceHooks) GetOnCompletionOk() ([]Hook, bool) {
	if o == nil || isNil(o.OnCompletion) {
		return nil, false
	}
	return o.OnCompletion, true
}

// HasOnCompletion returns a boolean if a field has been set.
func (o *ResourceHooks) HasOnCompletion() bool {
	if o != nil && !isNil(o.OnCompletion) {
		return true
	}

	return false
}

// SetOnCompletion gets a reference to the given []Hook and assigns it to the OnCompletion field.
func (o *ResourceHooks) SetOnCompletion(v []Hook) {
	o.OnCompletion = v
}

// GetOnFailure returns the OnFailure field value if set, zero value otherwise.
func (o *ResourceHooks) GetOnFailure() []Hook {
	if o == nil || isNil(o.OnFailure) {
		var ret []Hook
		return ret
	}
	return o.OnFailure
}

// GetOnFailureOk returns a tuple with the OnFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceHooks) GetOnFailureOk() ([]Hook, bool) {
	if o == nil || isNil(o.OnFailure) {
		return nil, false
	}
	return o.OnFailure, true
}

// HasOnFailure returns a boolean if a field has been set.
func (o *ResourceHooks) HasOnFailure() bool {
	if o != nil && !isNil(o.OnFailure) {
		return true
	}

	return false
}

// SetOnFailure gets a reference to the given []Hook and assigns it to the OnFailure field.
func (o *ResourceHooks) SetOnFailure(v []Hook) {
	o.OnFailure = v
}

// GetOnInit returns the OnInit field value if set, zero value otherwise.
func (o *ResourceHooks) GetOnInit() []Hook {
	if o == nil || isNil(o.OnInit) {
		var ret []Hook
		return ret
	}
	return o.OnInit
}

// GetOnInitOk returns a tuple with the OnInit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceHooks) GetOnInitOk() ([]Hook, bool) {
	if o == nil || isNil(o.OnInit) {
		return nil, false
	}
	return o.OnInit, true
}

// HasOnInit returns a boolean if a field has been set.
func (o *ResourceHooks) HasOnInit() bool {
	if o != nil && !isNil(o.OnInit) {
		return true
	}

	return false
}

// SetOnInit gets a reference to the given []Hook and assigns it to the OnInit field.
func (o *ResourceHooks) SetOnInit(v []Hook) {
	o.OnInit = v
}

// GetOnSuccess returns the OnSuccess field value if set, zero value otherwise.
func (o *ResourceHooks) GetOnSuccess() []Hook {
	if o == nil || isNil(o.OnSuccess) {
		var ret []Hook
		return ret
	}
	return o.OnSuccess
}

// GetOnSuccessOk returns a tuple with the OnSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceHooks) GetOnSuccessOk() ([]Hook, bool) {
	if o == nil || isNil(o.OnSuccess) {
		return nil, false
	}
	return o.OnSuccess, true
}

// HasOnSuccess returns a boolean if a field has been set.
func (o *ResourceHooks) HasOnSuccess() bool {
	if o != nil && !isNil(o.OnSuccess) {
		return true
	}

	return false
}

// SetOnSuccess gets a reference to the given []Hook and assigns it to the OnSuccess field.
func (o *ResourceHooks) SetOnSuccess(v []Hook) {
	o.OnSuccess = v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *ResourceHooks) GetProvider() ResourceTemplateProviderHooks {
	if o == nil || isNil(o.Provider) {
		var ret ResourceTemplateProviderHooks
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceHooks) GetProviderOk() (*ResourceTemplateProviderHooks, bool) {
	if o == nil || isNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *ResourceHooks) HasProvider() bool {
	if o != nil && !isNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given ResourceTemplateProviderHooks and assigns it to the Provider field.
func (o *ResourceHooks) SetProvider(v ResourceTemplateProviderHooks) {
	o.Provider = &v
}

func (o ResourceHooks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceHooks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.OnCompletion) {
		toSerialize["on_completion"] = o.OnCompletion
	}
	if !isNil(o.OnFailure) {
		toSerialize["on_failure"] = o.OnFailure
	}
	if !isNil(o.OnInit) {
		toSerialize["on_init"] = o.OnInit
	}
	if !isNil(o.OnSuccess) {
		toSerialize["on_success"] = o.OnSuccess
	}
	if !isNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	return toSerialize, nil
}

type NullableResourceHooks struct {
	value *ResourceHooks
	isSet bool
}

func (v NullableResourceHooks) Get() *ResourceHooks {
	return v.value
}

func (v *NullableResourceHooks) Set(val *ResourceHooks) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceHooks) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceHooks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceHooks(val *ResourceHooks) *NullableResourceHooks {
	return &NullableResourceHooks{value: val, isSet: true}
}

func (v NullableResourceHooks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceHooks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


