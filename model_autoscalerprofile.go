/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the Autoscalerprofile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Autoscalerprofile{}

// Autoscalerprofile struct for Autoscalerprofile
type Autoscalerprofile struct {
	// Valid values are true and false
	BalanceSimilarNodeGroups *string `json:"balanceSimilarNodeGroups,omitempty"`
	// If not specified, the default is random. See https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders for more information. Valid values are least-waste, most-pods, priority, random.
	Expander *string `json:"expander,omitempty"`
	// The default is 10.
	MaxEmptyBulkDelete *string `json:"maxEmptyBulkDelete,omitempty"`
	// The default is 600.
	MaxGracefulTerminationSec *string `json:"maxGracefulTerminationSec,omitempty"`
	// The default is 15m. Values must be an integer followed by an m. No unit of time other than minutes (m) is supported.
	MaxNodeProvisionTime *string `json:"maxNodeProvisionTime,omitempty"`
	// The default is 45. The maximum is 100 and the minimum is 0.
	MaxTotalUnreadyPercentage *string `json:"maxTotalUnreadyPercentage,omitempty"`
	// For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is 0s. Values must be an integer followed by a unit (s for seconds, m for minutes, h for hours, etc).
	NewPodScaleUpDelay *string `json:"newPodScaleUpDelay,omitempty"`
	// This must be an integer. The default is 3.
	OkTotalUnreadyCount *string `json:"okTotalUnreadyCount,omitempty"`
	// The default is 10m. Values must be an integer followed by an m. No unit of time other than minutes (m) is supported.
	ScaleDownDelayAfterAdd *string `json:"scaleDownDelayAfterAdd,omitempty"`
	// The default is the scan-interval. Values must be an integer followed by an m. No unit of time other than minutes (m) is supported.
	ScaleDownDelayAfterDelete *string `json:"scaleDownDelayAfterDelete,omitempty"`
	// The default is 3m. Values must be an integer followed by an m. No unit of time other than minutes (m) is supported.
	ScaleDownDelayAfterFailure *string `json:"scaleDownDelayAfterFailure,omitempty"`
	// The default is 10m. Values must be an integer followed by an m. No unit of time other than minutes (m) is supported.
	ScaleDownUnneededTime *string `json:"scaleDownUnneededTime,omitempty"`
	// The default is 20m. Values must be an integer followed by an m. No unit of time other than minutes (m) is supported.
	ScaleDownUnreadyTime *string `json:"scaleDownUnreadyTime,omitempty"`
	// The default is 0.5.
	ScaleDownUtilizationThreshold *string `json:"scaleDownUtilizationThreshold,omitempty"`
	// The default is 10. Values must be an integer number of seconds.
	ScanInterval *string `json:"scanInterval,omitempty"`
	// The default is true.
	SkipNodesWithLocalStorage *string `json:"skipNodesWithLocalStorage,omitempty"`
	// The default is true.
	SkipNodesWithSystemPods *string `json:"skipNodesWithSystemPods,omitempty"`
}

// NewAutoscalerprofile instantiates a new Autoscalerprofile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoscalerprofile() *Autoscalerprofile {
	this := Autoscalerprofile{}
	var expander string = "least-waste"
	this.Expander = &expander
	return &this
}

// NewAutoscalerprofileWithDefaults instantiates a new Autoscalerprofile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoscalerprofileWithDefaults() *Autoscalerprofile {
	this := Autoscalerprofile{}
	var expander string = "least-waste"
	this.Expander = &expander
	return &this
}

// GetBalanceSimilarNodeGroups returns the BalanceSimilarNodeGroups field value if set, zero value otherwise.
func (o *Autoscalerprofile) GetBalanceSimilarNodeGroups() string {
	if o == nil || isNil(o.BalanceSimilarNodeGroups) {
		var ret string
		return ret
	}
	return *o.BalanceSimilarNodeGroups
}

// GetBalanceSimilarNodeGroupsOk returns a tuple with the BalanceSimilarNodeGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Autoscalerprofile) GetBalanceSimilarNodeGroupsOk() (*string, bool) {
	if o == nil || isNil(o.BalanceSimilarNodeGroups) {
		return nil, false
	}
	return o.BalanceSimilarNodeGroups, true
}

// HasBalanceSimilarNodeGroups returns a boolean if a field has been set.
func (o *Autoscalerprofile) HasBalanceSimilarNodeGroups() bool {
	if o != nil && !isNil(o.BalanceSimilarNodeGroups) {
		return true
	}

	return false
}

// SetBalanceSimilarNodeGroups gets a reference to the given string and assigns it to the BalanceSimilarNodeGroups field.
func (o *Autoscalerprofile) SetBalanceSimilarNodeGroups(v string) {
	o.BalanceSimilarNodeGroups = &v
}

// GetExpander returns the Expander field value if set, zero value otherwise.
func (o *Autoscalerprofile) GetExpander() string {
	if o == nil || isNil(o.Expander) {
		var ret string
		return ret
	}
	return *o.Expander
}

// GetExpanderOk returns a tuple with the Expander field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Autoscalerprofile) GetExpanderOk() (*string, bool) {
	if o == nil || isNil(o.Expander) {
		return nil, false
	}
	return o.Expander, true
}

// HasExpander returns a boolean if a field has been set.
func (o *Autoscalerprofile) HasExpander() bool {
	if o != nil && !isNil(o.Expander) {
		return true
	}

	return false
}

// SetExpander gets a reference to the given string and assigns it to the Expander field.
func (o *Autoscalerprofile) SetExpander(v string) {
	o.Expander = &v
}

// GetMaxEmptyBulkDelete returns the MaxEmptyBulkDelete field value if set, zero value otherwise.
func (o *Autoscalerprofile) GetMaxEmptyBulkDelete() string {
	if o == nil || isNil(o.MaxEmptyBulkDelete) {
		var ret string
		return ret
	}
	return *o.MaxEmptyBulkDelete
}

// GetMaxEmptyBulkDeleteOk returns a tuple with the MaxEmptyBulkDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Autoscalerprofile) GetMaxEmptyBulkDeleteOk() (*string, bool) {
	if o == nil || isNil(o.MaxEmptyBulkDelete) {
		return nil, false
	}
	return o.MaxEmptyBulkDelete, true
}

// HasMaxEmptyBulkDelete returns a boolean if a field has been set.
func (o *Autoscalerprofile) HasMaxEmptyBulkDelete() bool {
	if o != nil && !isNil(o.MaxEmptyBulkDelete) {
		return true
	}

	return false
}

// SetMaxEmptyBulkDelete gets a reference to the given string and assigns it to the MaxEmptyBulkDelete field.
func (o *Autoscalerprofile) SetMaxEmptyBulkDelete(v string) {
	o.MaxEmptyBulkDelete = &v
}

// GetMaxGracefulTerminationSec returns the MaxGracefulTerminationSec field value if set, zero value otherwise.
func (o *Autoscalerprofile) GetMaxGracefulTerminationSec() string {
	if o == nil || isNil(o.MaxGracefulTerminationSec) {
		var ret string
		return ret
	}
	return *o.MaxGracefulTerminationSec
}

// GetMaxGracefulTerminationSecOk returns a tuple with the MaxGracefulTerminationSec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Autoscalerprofile) GetMaxGracefulTerminationSecOk() (*string, bool) {
	if o == nil || isNil(o.MaxGracefulTerminationSec) {
		return nil, false
	}
	return o.MaxGracefulTerminationSec, true
}

// HasMaxGracefulTerminationSec returns a boolean if a field has been set.
func (o *Autoscalerprofile) HasMaxGracefulTerminationSec() bool {
	if o != nil && !isNil(o.MaxGracefulTerminationSec) {
		return true
	}

	return false
}

// SetMaxGracefulTerminationSec gets a reference to the given string and assigns it to the MaxGracefulTerminationSec field.
func (o *Autoscalerprofile) SetMaxGracefulTerminationSec(v string) {
	o.MaxGracefulTerminationSec = &v
}

// GetMaxNodeProvisionTime returns the MaxNodeProvisionTime field value if set, zero value otherwise.
func (o *Autoscalerprofile) GetMaxNodeProvisionTime() string {
	if o == nil || isNil(o.MaxNodeProvisionTime) {
		var ret string
		return ret
	}
	return *o.MaxNodeProvisionTime
}

// GetMaxNodeProvisionTimeOk returns a tuple with the MaxNodeProvisionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Autoscalerprofile) GetMaxNodeProvisionTimeOk() (*string, bool) {
	if o == nil || isNil(o.MaxNodeProvisionTime) {
		return nil, false
	}
	return o.MaxNodeProvisionTime, true
}

// HasMaxNodeProvisionTime returns a boolean if a field has been set.
func (o *Autoscalerprofile) HasMaxNodeProvisionTime() bool {
	if o != nil && !isNil(o.MaxNodeProvisionTime) {
		return true
	}

	return false
}

// SetMaxNodeProvisionTime gets a reference to the given string and assigns it to the MaxNodeProvisionTime field.
func (o *Autoscalerprofile) SetMaxNodeProvisionTime(v string) {
	o.MaxNodeProvisionTime = &v
}

// GetMaxTotalUnreadyPercentage returns the MaxTotalUnreadyPercentage field value if set, zero value otherwise.
func (o *Autoscalerprofile) GetMaxTotalUnreadyPercentage() string {
	if o == nil || isNil(o.MaxTotalUnreadyPercentage) {
		var ret string
		return ret
	}
	return *o.MaxTotalUnreadyPercentage
}

// GetMaxTotalUnreadyPercentageOk returns a tuple with the MaxTotalUnreadyPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Autoscalerprofile) GetMaxTotalUnreadyPercentageOk() (*string, bool) {
	if o == nil || isNil(o.MaxTotalUnreadyPercentage) {
		return nil, false
	}
	return o.MaxTotalUnreadyPercentage, true
}

// HasMaxTotalUnreadyPercentage returns a boolean if a field has been set.
func (o *Autoscalerprofile) HasMaxTotalUnreadyPercentage() bool {
	if o != nil && !isNil(o.MaxTotalUnreadyPercentage) {
		return true
	}

	return false
}

// SetMaxTotalUnreadyPercentage gets a reference to the given string and assigns it to the MaxTotalUnreadyPercentage field.
func (o *Autoscalerprofile) SetMaxTotalUnreadyPercentage(v string) {
	o.MaxTotalUnreadyPercentage = &v
}

// GetNewPodScaleUpDelay returns the NewPodScaleUpDelay field value if set, zero value otherwise.
func (o *Autoscalerprofile) GetNewPodScaleUpDelay() string {
	if o == nil || isNil(o.NewPodScaleUpDelay) {
		var ret string
		return ret
	}
	return *o.NewPodScaleUpDelay
}

// GetNewPodScaleUpDelayOk returns a tuple with the NewPodScaleUpDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Autoscalerprofile) GetNewPodScaleUpDelayOk() (*string, bool) {
	if o == nil || isNil(o.NewPodScaleUpDelay) {
		return nil, false
	}
	return o.NewPodScaleUpDelay, true
}

// HasNewPodScaleUpDelay returns a boolean if a field has been set.
func (o *Autoscalerprofile) HasNewPodScaleUpDelay() bool {
	if o != nil && !isNil(o.NewPodScaleUpDelay) {
		return true
	}

	return false
}

// SetNewPodScaleUpDelay gets a reference to the given string and assigns it to the NewPodScaleUpDelay field.
func (o *Autoscalerprofile) SetNewPodScaleUpDelay(v string) {
	o.NewPodScaleUpDelay = &v
}

// GetOkTotalUnreadyCount returns the OkTotalUnreadyCount field value if set, zero value otherwise.
func (o *Autoscalerprofile) GetOkTotalUnreadyCount() string {
	if o == nil || isNil(o.OkTotalUnreadyCount) {
		var ret string
		return ret
	}
	return *o.OkTotalUnreadyCount
}

// GetOkTotalUnreadyCountOk returns a tuple with the OkTotalUnreadyCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Autoscalerprofile) GetOkTotalUnreadyCountOk() (*string, bool) {
	if o == nil || isNil(o.OkTotalUnreadyCount) {
		return nil, false
	}
	return o.OkTotalUnreadyCount, true
}

// HasOkTotalUnreadyCount returns a boolean if a field has been set.
func (o *Autoscalerprofile) HasOkTotalUnreadyCount() bool {
	if o != nil && !isNil(o.OkTotalUnreadyCount) {
		return true
	}

	return false
}

// SetOkTotalUnreadyCount gets a reference to the given string and assigns it to the OkTotalUnreadyCount field.
func (o *Autoscalerprofile) SetOkTotalUnreadyCount(v string) {
	o.OkTotalUnreadyCount = &v
}

// GetScaleDownDelayAfterAdd returns the ScaleDownDelayAfterAdd field value if set, zero value otherwise.
func (o *Autoscalerprofile) GetScaleDownDelayAfterAdd() string {
	if o == nil || isNil(o.ScaleDownDelayAfterAdd) {
		var ret string
		return ret
	}
	return *o.ScaleDownDelayAfterAdd
}

// GetScaleDownDelayAfterAddOk returns a tuple with the ScaleDownDelayAfterAdd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Autoscalerprofile) GetScaleDownDelayAfterAddOk() (*string, bool) {
	if o == nil || isNil(o.ScaleDownDelayAfterAdd) {
		return nil, false
	}
	return o.ScaleDownDelayAfterAdd, true
}

// HasScaleDownDelayAfterAdd returns a boolean if a field has been set.
func (o *Autoscalerprofile) HasScaleDownDelayAfterAdd() bool {
	if o != nil && !isNil(o.ScaleDownDelayAfterAdd) {
		return true
	}

	return false
}

// SetScaleDownDelayAfterAdd gets a reference to the given string and assigns it to the ScaleDownDelayAfterAdd field.
func (o *Autoscalerprofile) SetScaleDownDelayAfterAdd(v string) {
	o.ScaleDownDelayAfterAdd = &v
}

// GetScaleDownDelayAfterDelete returns the ScaleDownDelayAfterDelete field value if set, zero value otherwise.
func (o *Autoscalerprofile) GetScaleDownDelayAfterDelete() string {
	if o == nil || isNil(o.ScaleDownDelayAfterDelete) {
		var ret string
		return ret
	}
	return *o.ScaleDownDelayAfterDelete
}

// GetScaleDownDelayAfterDeleteOk returns a tuple with the ScaleDownDelayAfterDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Autoscalerprofile) GetScaleDownDelayAfterDeleteOk() (*string, bool) {
	if o == nil || isNil(o.ScaleDownDelayAfterDelete) {
		return nil, false
	}
	return o.ScaleDownDelayAfterDelete, true
}

// HasScaleDownDelayAfterDelete returns a boolean if a field has been set.
func (o *Autoscalerprofile) HasScaleDownDelayAfterDelete() bool {
	if o != nil && !isNil(o.ScaleDownDelayAfterDelete) {
		return true
	}

	return false
}

// SetScaleDownDelayAfterDelete gets a reference to the given string and assigns it to the ScaleDownDelayAfterDelete field.
func (o *Autoscalerprofile) SetScaleDownDelayAfterDelete(v string) {
	o.ScaleDownDelayAfterDelete = &v
}

// GetScaleDownDelayAfterFailure returns the ScaleDownDelayAfterFailure field value if set, zero value otherwise.
func (o *Autoscalerprofile) GetScaleDownDelayAfterFailure() string {
	if o == nil || isNil(o.ScaleDownDelayAfterFailure) {
		var ret string
		return ret
	}
	return *o.ScaleDownDelayAfterFailure
}

// GetScaleDownDelayAfterFailureOk returns a tuple with the ScaleDownDelayAfterFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Autoscalerprofile) GetScaleDownDelayAfterFailureOk() (*string, bool) {
	if o == nil || isNil(o.ScaleDownDelayAfterFailure) {
		return nil, false
	}
	return o.ScaleDownDelayAfterFailure, true
}

// HasScaleDownDelayAfterFailure returns a boolean if a field has been set.
func (o *Autoscalerprofile) HasScaleDownDelayAfterFailure() bool {
	if o != nil && !isNil(o.ScaleDownDelayAfterFailure) {
		return true
	}

	return false
}

// SetScaleDownDelayAfterFailure gets a reference to the given string and assigns it to the ScaleDownDelayAfterFailure field.
func (o *Autoscalerprofile) SetScaleDownDelayAfterFailure(v string) {
	o.ScaleDownDelayAfterFailure = &v
}

// GetScaleDownUnneededTime returns the ScaleDownUnneededTime field value if set, zero value otherwise.
func (o *Autoscalerprofile) GetScaleDownUnneededTime() string {
	if o == nil || isNil(o.ScaleDownUnneededTime) {
		var ret string
		return ret
	}
	return *o.ScaleDownUnneededTime
}

// GetScaleDownUnneededTimeOk returns a tuple with the ScaleDownUnneededTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Autoscalerprofile) GetScaleDownUnneededTimeOk() (*string, bool) {
	if o == nil || isNil(o.ScaleDownUnneededTime) {
		return nil, false
	}
	return o.ScaleDownUnneededTime, true
}

// HasScaleDownUnneededTime returns a boolean if a field has been set.
func (o *Autoscalerprofile) HasScaleDownUnneededTime() bool {
	if o != nil && !isNil(o.ScaleDownUnneededTime) {
		return true
	}

	return false
}

// SetScaleDownUnneededTime gets a reference to the given string and assigns it to the ScaleDownUnneededTime field.
func (o *Autoscalerprofile) SetScaleDownUnneededTime(v string) {
	o.ScaleDownUnneededTime = &v
}

// GetScaleDownUnreadyTime returns the ScaleDownUnreadyTime field value if set, zero value otherwise.
func (o *Autoscalerprofile) GetScaleDownUnreadyTime() string {
	if o == nil || isNil(o.ScaleDownUnreadyTime) {
		var ret string
		return ret
	}
	return *o.ScaleDownUnreadyTime
}

// GetScaleDownUnreadyTimeOk returns a tuple with the ScaleDownUnreadyTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Autoscalerprofile) GetScaleDownUnreadyTimeOk() (*string, bool) {
	if o == nil || isNil(o.ScaleDownUnreadyTime) {
		return nil, false
	}
	return o.ScaleDownUnreadyTime, true
}

// HasScaleDownUnreadyTime returns a boolean if a field has been set.
func (o *Autoscalerprofile) HasScaleDownUnreadyTime() bool {
	if o != nil && !isNil(o.ScaleDownUnreadyTime) {
		return true
	}

	return false
}

// SetScaleDownUnreadyTime gets a reference to the given string and assigns it to the ScaleDownUnreadyTime field.
func (o *Autoscalerprofile) SetScaleDownUnreadyTime(v string) {
	o.ScaleDownUnreadyTime = &v
}

// GetScaleDownUtilizationThreshold returns the ScaleDownUtilizationThreshold field value if set, zero value otherwise.
func (o *Autoscalerprofile) GetScaleDownUtilizationThreshold() string {
	if o == nil || isNil(o.ScaleDownUtilizationThreshold) {
		var ret string
		return ret
	}
	return *o.ScaleDownUtilizationThreshold
}

// GetScaleDownUtilizationThresholdOk returns a tuple with the ScaleDownUtilizationThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Autoscalerprofile) GetScaleDownUtilizationThresholdOk() (*string, bool) {
	if o == nil || isNil(o.ScaleDownUtilizationThreshold) {
		return nil, false
	}
	return o.ScaleDownUtilizationThreshold, true
}

// HasScaleDownUtilizationThreshold returns a boolean if a field has been set.
func (o *Autoscalerprofile) HasScaleDownUtilizationThreshold() bool {
	if o != nil && !isNil(o.ScaleDownUtilizationThreshold) {
		return true
	}

	return false
}

// SetScaleDownUtilizationThreshold gets a reference to the given string and assigns it to the ScaleDownUtilizationThreshold field.
func (o *Autoscalerprofile) SetScaleDownUtilizationThreshold(v string) {
	o.ScaleDownUtilizationThreshold = &v
}

// GetScanInterval returns the ScanInterval field value if set, zero value otherwise.
func (o *Autoscalerprofile) GetScanInterval() string {
	if o == nil || isNil(o.ScanInterval) {
		var ret string
		return ret
	}
	return *o.ScanInterval
}

// GetScanIntervalOk returns a tuple with the ScanInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Autoscalerprofile) GetScanIntervalOk() (*string, bool) {
	if o == nil || isNil(o.ScanInterval) {
		return nil, false
	}
	return o.ScanInterval, true
}

// HasScanInterval returns a boolean if a field has been set.
func (o *Autoscalerprofile) HasScanInterval() bool {
	if o != nil && !isNil(o.ScanInterval) {
		return true
	}

	return false
}

// SetScanInterval gets a reference to the given string and assigns it to the ScanInterval field.
func (o *Autoscalerprofile) SetScanInterval(v string) {
	o.ScanInterval = &v
}

// GetSkipNodesWithLocalStorage returns the SkipNodesWithLocalStorage field value if set, zero value otherwise.
func (o *Autoscalerprofile) GetSkipNodesWithLocalStorage() string {
	if o == nil || isNil(o.SkipNodesWithLocalStorage) {
		var ret string
		return ret
	}
	return *o.SkipNodesWithLocalStorage
}

// GetSkipNodesWithLocalStorageOk returns a tuple with the SkipNodesWithLocalStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Autoscalerprofile) GetSkipNodesWithLocalStorageOk() (*string, bool) {
	if o == nil || isNil(o.SkipNodesWithLocalStorage) {
		return nil, false
	}
	return o.SkipNodesWithLocalStorage, true
}

// HasSkipNodesWithLocalStorage returns a boolean if a field has been set.
func (o *Autoscalerprofile) HasSkipNodesWithLocalStorage() bool {
	if o != nil && !isNil(o.SkipNodesWithLocalStorage) {
		return true
	}

	return false
}

// SetSkipNodesWithLocalStorage gets a reference to the given string and assigns it to the SkipNodesWithLocalStorage field.
func (o *Autoscalerprofile) SetSkipNodesWithLocalStorage(v string) {
	o.SkipNodesWithLocalStorage = &v
}

// GetSkipNodesWithSystemPods returns the SkipNodesWithSystemPods field value if set, zero value otherwise.
func (o *Autoscalerprofile) GetSkipNodesWithSystemPods() string {
	if o == nil || isNil(o.SkipNodesWithSystemPods) {
		var ret string
		return ret
	}
	return *o.SkipNodesWithSystemPods
}

// GetSkipNodesWithSystemPodsOk returns a tuple with the SkipNodesWithSystemPods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Autoscalerprofile) GetSkipNodesWithSystemPodsOk() (*string, bool) {
	if o == nil || isNil(o.SkipNodesWithSystemPods) {
		return nil, false
	}
	return o.SkipNodesWithSystemPods, true
}

// HasSkipNodesWithSystemPods returns a boolean if a field has been set.
func (o *Autoscalerprofile) HasSkipNodesWithSystemPods() bool {
	if o != nil && !isNil(o.SkipNodesWithSystemPods) {
		return true
	}

	return false
}

// SetSkipNodesWithSystemPods gets a reference to the given string and assigns it to the SkipNodesWithSystemPods field.
func (o *Autoscalerprofile) SetSkipNodesWithSystemPods(v string) {
	o.SkipNodesWithSystemPods = &v
}

func (o Autoscalerprofile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Autoscalerprofile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BalanceSimilarNodeGroups) {
		toSerialize["balanceSimilarNodeGroups"] = o.BalanceSimilarNodeGroups
	}
	if !isNil(o.Expander) {
		toSerialize["expander"] = o.Expander
	}
	if !isNil(o.MaxEmptyBulkDelete) {
		toSerialize["maxEmptyBulkDelete"] = o.MaxEmptyBulkDelete
	}
	if !isNil(o.MaxGracefulTerminationSec) {
		toSerialize["maxGracefulTerminationSec"] = o.MaxGracefulTerminationSec
	}
	if !isNil(o.MaxNodeProvisionTime) {
		toSerialize["maxNodeProvisionTime"] = o.MaxNodeProvisionTime
	}
	if !isNil(o.MaxTotalUnreadyPercentage) {
		toSerialize["maxTotalUnreadyPercentage"] = o.MaxTotalUnreadyPercentage
	}
	if !isNil(o.NewPodScaleUpDelay) {
		toSerialize["newPodScaleUpDelay"] = o.NewPodScaleUpDelay
	}
	if !isNil(o.OkTotalUnreadyCount) {
		toSerialize["okTotalUnreadyCount"] = o.OkTotalUnreadyCount
	}
	if !isNil(o.ScaleDownDelayAfterAdd) {
		toSerialize["scaleDownDelayAfterAdd"] = o.ScaleDownDelayAfterAdd
	}
	if !isNil(o.ScaleDownDelayAfterDelete) {
		toSerialize["scaleDownDelayAfterDelete"] = o.ScaleDownDelayAfterDelete
	}
	if !isNil(o.ScaleDownDelayAfterFailure) {
		toSerialize["scaleDownDelayAfterFailure"] = o.ScaleDownDelayAfterFailure
	}
	if !isNil(o.ScaleDownUnneededTime) {
		toSerialize["scaleDownUnneededTime"] = o.ScaleDownUnneededTime
	}
	if !isNil(o.ScaleDownUnreadyTime) {
		toSerialize["scaleDownUnreadyTime"] = o.ScaleDownUnreadyTime
	}
	if !isNil(o.ScaleDownUtilizationThreshold) {
		toSerialize["scaleDownUtilizationThreshold"] = o.ScaleDownUtilizationThreshold
	}
	if !isNil(o.ScanInterval) {
		toSerialize["scanInterval"] = o.ScanInterval
	}
	if !isNil(o.SkipNodesWithLocalStorage) {
		toSerialize["skipNodesWithLocalStorage"] = o.SkipNodesWithLocalStorage
	}
	if !isNil(o.SkipNodesWithSystemPods) {
		toSerialize["skipNodesWithSystemPods"] = o.SkipNodesWithSystemPods
	}
	return toSerialize, nil
}

type NullableAutoscalerprofile struct {
	value *Autoscalerprofile
	isSet bool
}

func (v NullableAutoscalerprofile) Get() *Autoscalerprofile {
	return v.value
}

func (v *NullableAutoscalerprofile) Set(val *Autoscalerprofile) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoscalerprofile) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoscalerprofile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoscalerprofile(val *Autoscalerprofile) *NullableAutoscalerprofile {
	return &NullableAutoscalerprofile{value: val, isSet: true}
}

func (v NullableAutoscalerprofile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoscalerprofile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


