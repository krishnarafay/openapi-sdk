/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the Upgradesettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Upgradesettings{}

// Upgradesettings struct for Upgradesettings
type Upgradesettings struct {
	// This can either be set to an integer (e.g. 5) or a percentage (e.g. 50%). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1. For more information, including best practices, see: https://docs.microsoft.com/azure/aks/upgrade-cluster#customize-node-surge-upgrade
	MaxSurge *string `json:"maxSurge,omitempty"`
}

// NewUpgradesettings instantiates a new Upgradesettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpgradesettings() *Upgradesettings {
	this := Upgradesettings{}
	return &this
}

// NewUpgradesettingsWithDefaults instantiates a new Upgradesettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpgradesettingsWithDefaults() *Upgradesettings {
	this := Upgradesettings{}
	return &this
}

// GetMaxSurge returns the MaxSurge field value if set, zero value otherwise.
func (o *Upgradesettings) GetMaxSurge() string {
	if o == nil || isNil(o.MaxSurge) {
		var ret string
		return ret
	}
	return *o.MaxSurge
}

// GetMaxSurgeOk returns a tuple with the MaxSurge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Upgradesettings) GetMaxSurgeOk() (*string, bool) {
	if o == nil || isNil(o.MaxSurge) {
		return nil, false
	}
	return o.MaxSurge, true
}

// HasMaxSurge returns a boolean if a field has been set.
func (o *Upgradesettings) HasMaxSurge() bool {
	if o != nil && !isNil(o.MaxSurge) {
		return true
	}

	return false
}

// SetMaxSurge gets a reference to the given string and assigns it to the MaxSurge field.
func (o *Upgradesettings) SetMaxSurge(v string) {
	o.MaxSurge = &v
}

func (o Upgradesettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Upgradesettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.MaxSurge) {
		toSerialize["maxSurge"] = o.MaxSurge
	}
	return toSerialize, nil
}

type NullableUpgradesettings struct {
	value *Upgradesettings
	isSet bool
}

func (v NullableUpgradesettings) Get() *Upgradesettings {
	return v.value
}

func (v *NullableUpgradesettings) Set(val *Upgradesettings) {
	v.value = val
	v.isSet = true
}

func (v NullableUpgradesettings) IsSet() bool {
	return v.isSet
}

func (v *NullableUpgradesettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpgradesettings(val *Upgradesettings) *NullableUpgradesettings {
	return &NullableUpgradesettings{value: val, isSet: true}
}

func (v NullableUpgradesettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpgradesettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


