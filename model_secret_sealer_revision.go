/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the SecretSealerRevision type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretSealerRevision{}

// SecretSealerRevision struct for SecretSealerRevision
type SecretSealerRevision struct {
	Cert *string `json:"cert,omitempty"`
	Key *string `json:"key,omitempty"`
	Name *string `json:"name,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewSecretSealerRevision instantiates a new SecretSealerRevision object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretSealerRevision() *SecretSealerRevision {
	this := SecretSealerRevision{}
	return &this
}

// NewSecretSealerRevisionWithDefaults instantiates a new SecretSealerRevision object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretSealerRevisionWithDefaults() *SecretSealerRevision {
	this := SecretSealerRevision{}
	return &this
}

// GetCert returns the Cert field value if set, zero value otherwise.
func (o *SecretSealerRevision) GetCert() string {
	if o == nil || isNil(o.Cert) {
		var ret string
		return ret
	}
	return *o.Cert
}

// GetCertOk returns a tuple with the Cert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretSealerRevision) GetCertOk() (*string, bool) {
	if o == nil || isNil(o.Cert) {
		return nil, false
	}
	return o.Cert, true
}

// HasCert returns a boolean if a field has been set.
func (o *SecretSealerRevision) HasCert() bool {
	if o != nil && !isNil(o.Cert) {
		return true
	}

	return false
}

// SetCert gets a reference to the given string and assigns it to the Cert field.
func (o *SecretSealerRevision) SetCert(v string) {
	o.Cert = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *SecretSealerRevision) GetKey() string {
	if o == nil || isNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretSealerRevision) GetKeyOk() (*string, bool) {
	if o == nil || isNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *SecretSealerRevision) HasKey() bool {
	if o != nil && !isNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *SecretSealerRevision) SetKey(v string) {
	o.Key = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SecretSealerRevision) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretSealerRevision) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SecretSealerRevision) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SecretSealerRevision) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SecretSealerRevision) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretSealerRevision) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SecretSealerRevision) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SecretSealerRevision) SetStatus(v string) {
	o.Status = &v
}

func (o SecretSealerRevision) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretSealerRevision) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Cert) {
		toSerialize["cert"] = o.Cert
	}
	if !isNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableSecretSealerRevision struct {
	value *SecretSealerRevision
	isSet bool
}

func (v NullableSecretSealerRevision) Get() *SecretSealerRevision {
	return v.value
}

func (v *NullableSecretSealerRevision) Set(val *SecretSealerRevision) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretSealerRevision) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretSealerRevision) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretSealerRevision(val *SecretSealerRevision) *NullableSecretSealerRevision {
	return &NullableSecretSealerRevision{value: val, isSet: true}
}

func (v NullableSecretSealerRevision) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretSealerRevision) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


