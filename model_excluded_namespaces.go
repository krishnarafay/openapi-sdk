/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ExcludedNamespaces type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExcludedNamespaces{}

// ExcludedNamespaces namespaces to be excluded from gatekeeper processes
type ExcludedNamespaces struct {
	// List of namespaces to be excluded
	Namespaces []ResourceRef `json:"namespaces"`
	// List of processes to be excluding namespace from
	Processes []string `json:"processes"`
}

// NewExcludedNamespaces instantiates a new ExcludedNamespaces object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExcludedNamespaces(namespaces []ResourceRef, processes []string) *ExcludedNamespaces {
	this := ExcludedNamespaces{}
	this.Namespaces = namespaces
	this.Processes = processes
	return &this
}

// NewExcludedNamespacesWithDefaults instantiates a new ExcludedNamespaces object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExcludedNamespacesWithDefaults() *ExcludedNamespaces {
	this := ExcludedNamespaces{}
	return &this
}

// GetNamespaces returns the Namespaces field value
func (o *ExcludedNamespaces) GetNamespaces() []ResourceRef {
	if o == nil {
		var ret []ResourceRef
		return ret
	}

	return o.Namespaces
}

// GetNamespacesOk returns a tuple with the Namespaces field value
// and a boolean to check if the value has been set.
func (o *ExcludedNamespaces) GetNamespacesOk() ([]ResourceRef, bool) {
	if o == nil {
		return nil, false
	}
	return o.Namespaces, true
}

// SetNamespaces sets field value
func (o *ExcludedNamespaces) SetNamespaces(v []ResourceRef) {
	o.Namespaces = v
}

// GetProcesses returns the Processes field value
func (o *ExcludedNamespaces) GetProcesses() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Processes
}

// GetProcessesOk returns a tuple with the Processes field value
// and a boolean to check if the value has been set.
func (o *ExcludedNamespaces) GetProcessesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Processes, true
}

// SetProcesses sets field value
func (o *ExcludedNamespaces) SetProcesses(v []string) {
	o.Processes = v
}

func (o ExcludedNamespaces) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExcludedNamespaces) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["namespaces"] = o.Namespaces
	toSerialize["processes"] = o.Processes
	return toSerialize, nil
}

type NullableExcludedNamespaces struct {
	value *ExcludedNamespaces
	isSet bool
}

func (v NullableExcludedNamespaces) Get() *ExcludedNamespaces {
	return v.value
}

func (v *NullableExcludedNamespaces) Set(val *ExcludedNamespaces) {
	v.value = val
	v.isSet = true
}

func (v NullableExcludedNamespaces) IsSet() bool {
	return v.isSet
}

func (v *NullableExcludedNamespaces) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExcludedNamespaces(val *ExcludedNamespaces) *NullableExcludedNamespaces {
	return &NullableExcludedNamespaces{value: val, isSet: true}
}

func (v NullableExcludedNamespaces) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExcludedNamespaces) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


