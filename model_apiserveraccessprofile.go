/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the Apiserveraccessprofile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Apiserveraccessprofile{}

// Apiserveraccessprofile struct for Apiserveraccessprofile
type Apiserveraccessprofile struct {
	// IP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This feature is not compatible with clusters that use Public IP Per Node, or clusters that are using a Basic Load Balancer. For more information see API server authorized IP ranges.
	AuthorizedIPRanges []string `json:"authorizedIPRanges,omitempty"`
	// Whether to disable run command for the cluster or not.
	DisableRunCommand *bool `json:"disableRunCommand,omitempty"`
	// For more details, see https://learn.microsoft.com/en-us/azure/aks/private-clusters
	EnablePrivateCluster *bool `json:"enablePrivateCluster,omitempty"`
	// Whether to create additional public FQDN for private cluster or not.
	EnablePrivateClusterPublicFQDN *bool `json:"enablePrivateClusterPublicFQDN,omitempty"`
	// The default is System. For more details see configure private DNS zone. Allowed values are system and none.
	PrivateDNSZone *string `json:"privateDNSZone,omitempty"`
}

// NewApiserveraccessprofile instantiates a new Apiserveraccessprofile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiserveraccessprofile() *Apiserveraccessprofile {
	this := Apiserveraccessprofile{}
	return &this
}

// NewApiserveraccessprofileWithDefaults instantiates a new Apiserveraccessprofile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiserveraccessprofileWithDefaults() *Apiserveraccessprofile {
	this := Apiserveraccessprofile{}
	return &this
}

// GetAuthorizedIPRanges returns the AuthorizedIPRanges field value if set, zero value otherwise.
func (o *Apiserveraccessprofile) GetAuthorizedIPRanges() []string {
	if o == nil || isNil(o.AuthorizedIPRanges) {
		var ret []string
		return ret
	}
	return o.AuthorizedIPRanges
}

// GetAuthorizedIPRangesOk returns a tuple with the AuthorizedIPRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Apiserveraccessprofile) GetAuthorizedIPRangesOk() ([]string, bool) {
	if o == nil || isNil(o.AuthorizedIPRanges) {
		return nil, false
	}
	return o.AuthorizedIPRanges, true
}

// HasAuthorizedIPRanges returns a boolean if a field has been set.
func (o *Apiserveraccessprofile) HasAuthorizedIPRanges() bool {
	if o != nil && !isNil(o.AuthorizedIPRanges) {
		return true
	}

	return false
}

// SetAuthorizedIPRanges gets a reference to the given []string and assigns it to the AuthorizedIPRanges field.
func (o *Apiserveraccessprofile) SetAuthorizedIPRanges(v []string) {
	o.AuthorizedIPRanges = v
}

// GetDisableRunCommand returns the DisableRunCommand field value if set, zero value otherwise.
func (o *Apiserveraccessprofile) GetDisableRunCommand() bool {
	if o == nil || isNil(o.DisableRunCommand) {
		var ret bool
		return ret
	}
	return *o.DisableRunCommand
}

// GetDisableRunCommandOk returns a tuple with the DisableRunCommand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Apiserveraccessprofile) GetDisableRunCommandOk() (*bool, bool) {
	if o == nil || isNil(o.DisableRunCommand) {
		return nil, false
	}
	return o.DisableRunCommand, true
}

// HasDisableRunCommand returns a boolean if a field has been set.
func (o *Apiserveraccessprofile) HasDisableRunCommand() bool {
	if o != nil && !isNil(o.DisableRunCommand) {
		return true
	}

	return false
}

// SetDisableRunCommand gets a reference to the given bool and assigns it to the DisableRunCommand field.
func (o *Apiserveraccessprofile) SetDisableRunCommand(v bool) {
	o.DisableRunCommand = &v
}

// GetEnablePrivateCluster returns the EnablePrivateCluster field value if set, zero value otherwise.
func (o *Apiserveraccessprofile) GetEnablePrivateCluster() bool {
	if o == nil || isNil(o.EnablePrivateCluster) {
		var ret bool
		return ret
	}
	return *o.EnablePrivateCluster
}

// GetEnablePrivateClusterOk returns a tuple with the EnablePrivateCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Apiserveraccessprofile) GetEnablePrivateClusterOk() (*bool, bool) {
	if o == nil || isNil(o.EnablePrivateCluster) {
		return nil, false
	}
	return o.EnablePrivateCluster, true
}

// HasEnablePrivateCluster returns a boolean if a field has been set.
func (o *Apiserveraccessprofile) HasEnablePrivateCluster() bool {
	if o != nil && !isNil(o.EnablePrivateCluster) {
		return true
	}

	return false
}

// SetEnablePrivateCluster gets a reference to the given bool and assigns it to the EnablePrivateCluster field.
func (o *Apiserveraccessprofile) SetEnablePrivateCluster(v bool) {
	o.EnablePrivateCluster = &v
}

// GetEnablePrivateClusterPublicFQDN returns the EnablePrivateClusterPublicFQDN field value if set, zero value otherwise.
func (o *Apiserveraccessprofile) GetEnablePrivateClusterPublicFQDN() bool {
	if o == nil || isNil(o.EnablePrivateClusterPublicFQDN) {
		var ret bool
		return ret
	}
	return *o.EnablePrivateClusterPublicFQDN
}

// GetEnablePrivateClusterPublicFQDNOk returns a tuple with the EnablePrivateClusterPublicFQDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Apiserveraccessprofile) GetEnablePrivateClusterPublicFQDNOk() (*bool, bool) {
	if o == nil || isNil(o.EnablePrivateClusterPublicFQDN) {
		return nil, false
	}
	return o.EnablePrivateClusterPublicFQDN, true
}

// HasEnablePrivateClusterPublicFQDN returns a boolean if a field has been set.
func (o *Apiserveraccessprofile) HasEnablePrivateClusterPublicFQDN() bool {
	if o != nil && !isNil(o.EnablePrivateClusterPublicFQDN) {
		return true
	}

	return false
}

// SetEnablePrivateClusterPublicFQDN gets a reference to the given bool and assigns it to the EnablePrivateClusterPublicFQDN field.
func (o *Apiserveraccessprofile) SetEnablePrivateClusterPublicFQDN(v bool) {
	o.EnablePrivateClusterPublicFQDN = &v
}

// GetPrivateDNSZone returns the PrivateDNSZone field value if set, zero value otherwise.
func (o *Apiserveraccessprofile) GetPrivateDNSZone() string {
	if o == nil || isNil(o.PrivateDNSZone) {
		var ret string
		return ret
	}
	return *o.PrivateDNSZone
}

// GetPrivateDNSZoneOk returns a tuple with the PrivateDNSZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Apiserveraccessprofile) GetPrivateDNSZoneOk() (*string, bool) {
	if o == nil || isNil(o.PrivateDNSZone) {
		return nil, false
	}
	return o.PrivateDNSZone, true
}

// HasPrivateDNSZone returns a boolean if a field has been set.
func (o *Apiserveraccessprofile) HasPrivateDNSZone() bool {
	if o != nil && !isNil(o.PrivateDNSZone) {
		return true
	}

	return false
}

// SetPrivateDNSZone gets a reference to the given string and assigns it to the PrivateDNSZone field.
func (o *Apiserveraccessprofile) SetPrivateDNSZone(v string) {
	o.PrivateDNSZone = &v
}

func (o Apiserveraccessprofile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Apiserveraccessprofile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AuthorizedIPRanges) {
		toSerialize["authorizedIPRanges"] = o.AuthorizedIPRanges
	}
	if !isNil(o.DisableRunCommand) {
		toSerialize["disableRunCommand"] = o.DisableRunCommand
	}
	if !isNil(o.EnablePrivateCluster) {
		toSerialize["enablePrivateCluster"] = o.EnablePrivateCluster
	}
	if !isNil(o.EnablePrivateClusterPublicFQDN) {
		toSerialize["enablePrivateClusterPublicFQDN"] = o.EnablePrivateClusterPublicFQDN
	}
	if !isNil(o.PrivateDNSZone) {
		toSerialize["privateDNSZone"] = o.PrivateDNSZone
	}
	return toSerialize, nil
}

type NullableApiserveraccessprofile struct {
	value *Apiserveraccessprofile
	isSet bool
}

func (v NullableApiserveraccessprofile) Get() *Apiserveraccessprofile {
	return v.value
}

func (v *NullableApiserveraccessprofile) Set(val *Apiserveraccessprofile) {
	v.value = val
	v.isSet = true
}

func (v NullableApiserveraccessprofile) IsSet() bool {
	return v.isSet
}

func (v *NullableApiserveraccessprofile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiserveraccessprofile(val *Apiserveraccessprofile) *NullableApiserveraccessprofile {
	return &NullableApiserveraccessprofile{value: val, isSet: true}
}

func (v NullableApiserveraccessprofile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiserveraccessprofile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


