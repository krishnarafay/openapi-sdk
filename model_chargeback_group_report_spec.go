/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ChargebackGroupReportSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChargebackGroupReportSpec{}

// ChargebackGroupReportSpec profile specification
type ChargebackGroupReportSpec struct {
	EndDate *EndDate `json:"endDate,omitempty"`
	// groupName
	GroupName *string `json:"groupName,omitempty"`
	// reportLocation
	ReportLocation *string `json:"reportLocation,omitempty"`
	// reportUrl
	ReportUrl *string `json:"reportUrl,omitempty"`
	StartDate *StartDate `json:"startDate,omitempty"`
	// urlExpiry
	UrlExpiry *string `json:"urlExpiry,omitempty"`
}

// NewChargebackGroupReportSpec instantiates a new ChargebackGroupReportSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChargebackGroupReportSpec() *ChargebackGroupReportSpec {
	this := ChargebackGroupReportSpec{}
	return &this
}

// NewChargebackGroupReportSpecWithDefaults instantiates a new ChargebackGroupReportSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChargebackGroupReportSpecWithDefaults() *ChargebackGroupReportSpec {
	this := ChargebackGroupReportSpec{}
	return &this
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *ChargebackGroupReportSpec) GetEndDate() EndDate {
	if o == nil || isNil(o.EndDate) {
		var ret EndDate
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargebackGroupReportSpec) GetEndDateOk() (*EndDate, bool) {
	if o == nil || isNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *ChargebackGroupReportSpec) HasEndDate() bool {
	if o != nil && !isNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given EndDate and assigns it to the EndDate field.
func (o *ChargebackGroupReportSpec) SetEndDate(v EndDate) {
	o.EndDate = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *ChargebackGroupReportSpec) GetGroupName() string {
	if o == nil || isNil(o.GroupName) {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargebackGroupReportSpec) GetGroupNameOk() (*string, bool) {
	if o == nil || isNil(o.GroupName) {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *ChargebackGroupReportSpec) HasGroupName() bool {
	if o != nil && !isNil(o.GroupName) {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *ChargebackGroupReportSpec) SetGroupName(v string) {
	o.GroupName = &v
}

// GetReportLocation returns the ReportLocation field value if set, zero value otherwise.
func (o *ChargebackGroupReportSpec) GetReportLocation() string {
	if o == nil || isNil(o.ReportLocation) {
		var ret string
		return ret
	}
	return *o.ReportLocation
}

// GetReportLocationOk returns a tuple with the ReportLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargebackGroupReportSpec) GetReportLocationOk() (*string, bool) {
	if o == nil || isNil(o.ReportLocation) {
		return nil, false
	}
	return o.ReportLocation, true
}

// HasReportLocation returns a boolean if a field has been set.
func (o *ChargebackGroupReportSpec) HasReportLocation() bool {
	if o != nil && !isNil(o.ReportLocation) {
		return true
	}

	return false
}

// SetReportLocation gets a reference to the given string and assigns it to the ReportLocation field.
func (o *ChargebackGroupReportSpec) SetReportLocation(v string) {
	o.ReportLocation = &v
}

// GetReportUrl returns the ReportUrl field value if set, zero value otherwise.
func (o *ChargebackGroupReportSpec) GetReportUrl() string {
	if o == nil || isNil(o.ReportUrl) {
		var ret string
		return ret
	}
	return *o.ReportUrl
}

// GetReportUrlOk returns a tuple with the ReportUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargebackGroupReportSpec) GetReportUrlOk() (*string, bool) {
	if o == nil || isNil(o.ReportUrl) {
		return nil, false
	}
	return o.ReportUrl, true
}

// HasReportUrl returns a boolean if a field has been set.
func (o *ChargebackGroupReportSpec) HasReportUrl() bool {
	if o != nil && !isNil(o.ReportUrl) {
		return true
	}

	return false
}

// SetReportUrl gets a reference to the given string and assigns it to the ReportUrl field.
func (o *ChargebackGroupReportSpec) SetReportUrl(v string) {
	o.ReportUrl = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ChargebackGroupReportSpec) GetStartDate() StartDate {
	if o == nil || isNil(o.StartDate) {
		var ret StartDate
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargebackGroupReportSpec) GetStartDateOk() (*StartDate, bool) {
	if o == nil || isNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ChargebackGroupReportSpec) HasStartDate() bool {
	if o != nil && !isNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given StartDate and assigns it to the StartDate field.
func (o *ChargebackGroupReportSpec) SetStartDate(v StartDate) {
	o.StartDate = &v
}

// GetUrlExpiry returns the UrlExpiry field value if set, zero value otherwise.
func (o *ChargebackGroupReportSpec) GetUrlExpiry() string {
	if o == nil || isNil(o.UrlExpiry) {
		var ret string
		return ret
	}
	return *o.UrlExpiry
}

// GetUrlExpiryOk returns a tuple with the UrlExpiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargebackGroupReportSpec) GetUrlExpiryOk() (*string, bool) {
	if o == nil || isNil(o.UrlExpiry) {
		return nil, false
	}
	return o.UrlExpiry, true
}

// HasUrlExpiry returns a boolean if a field has been set.
func (o *ChargebackGroupReportSpec) HasUrlExpiry() bool {
	if o != nil && !isNil(o.UrlExpiry) {
		return true
	}

	return false
}

// SetUrlExpiry gets a reference to the given string and assigns it to the UrlExpiry field.
func (o *ChargebackGroupReportSpec) SetUrlExpiry(v string) {
	o.UrlExpiry = &v
}

func (o ChargebackGroupReportSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChargebackGroupReportSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !isNil(o.GroupName) {
		toSerialize["groupName"] = o.GroupName
	}
	if !isNil(o.ReportLocation) {
		toSerialize["reportLocation"] = o.ReportLocation
	}
	if !isNil(o.ReportUrl) {
		toSerialize["reportUrl"] = o.ReportUrl
	}
	if !isNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !isNil(o.UrlExpiry) {
		toSerialize["urlExpiry"] = o.UrlExpiry
	}
	return toSerialize, nil
}

type NullableChargebackGroupReportSpec struct {
	value *ChargebackGroupReportSpec
	isSet bool
}

func (v NullableChargebackGroupReportSpec) Get() *ChargebackGroupReportSpec {
	return v.value
}

func (v *NullableChargebackGroupReportSpec) Set(val *ChargebackGroupReportSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableChargebackGroupReportSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableChargebackGroupReportSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChargebackGroupReportSpec(val *ChargebackGroupReportSpec) *NullableChargebackGroupReportSpec {
	return &NullableChargebackGroupReportSpec{value: val, isSet: true}
}

func (v NullableChargebackGroupReportSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChargebackGroupReportSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


