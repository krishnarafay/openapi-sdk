/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the SecretStoreSpecConfigVault type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretStoreSpecConfigVault{}

// SecretStoreSpecConfigVault secret store specification
type SecretStoreSpecConfigVault struct {
	// Authentication method for secret store resource
	AuthMethod *string `json:"authMethod,omitempty"`
	// Vault details of the secret store resource
	Clusters []SecretStoreSpecConfigVaultCluster `json:"clusters,omitempty"`
	// Host details
	Host *string `json:"host,omitempty"`
}

// NewSecretStoreSpecConfigVault instantiates a new SecretStoreSpecConfigVault object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretStoreSpecConfigVault() *SecretStoreSpecConfigVault {
	this := SecretStoreSpecConfigVault{}
	return &this
}

// NewSecretStoreSpecConfigVaultWithDefaults instantiates a new SecretStoreSpecConfigVault object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretStoreSpecConfigVaultWithDefaults() *SecretStoreSpecConfigVault {
	this := SecretStoreSpecConfigVault{}
	return &this
}

// GetAuthMethod returns the AuthMethod field value if set, zero value otherwise.
func (o *SecretStoreSpecConfigVault) GetAuthMethod() string {
	if o == nil || isNil(o.AuthMethod) {
		var ret string
		return ret
	}
	return *o.AuthMethod
}

// GetAuthMethodOk returns a tuple with the AuthMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretStoreSpecConfigVault) GetAuthMethodOk() (*string, bool) {
	if o == nil || isNil(o.AuthMethod) {
		return nil, false
	}
	return o.AuthMethod, true
}

// HasAuthMethod returns a boolean if a field has been set.
func (o *SecretStoreSpecConfigVault) HasAuthMethod() bool {
	if o != nil && !isNil(o.AuthMethod) {
		return true
	}

	return false
}

// SetAuthMethod gets a reference to the given string and assigns it to the AuthMethod field.
func (o *SecretStoreSpecConfigVault) SetAuthMethod(v string) {
	o.AuthMethod = &v
}

// GetClusters returns the Clusters field value if set, zero value otherwise.
func (o *SecretStoreSpecConfigVault) GetClusters() []SecretStoreSpecConfigVaultCluster {
	if o == nil || isNil(o.Clusters) {
		var ret []SecretStoreSpecConfigVaultCluster
		return ret
	}
	return o.Clusters
}

// GetClustersOk returns a tuple with the Clusters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretStoreSpecConfigVault) GetClustersOk() ([]SecretStoreSpecConfigVaultCluster, bool) {
	if o == nil || isNil(o.Clusters) {
		return nil, false
	}
	return o.Clusters, true
}

// HasClusters returns a boolean if a field has been set.
func (o *SecretStoreSpecConfigVault) HasClusters() bool {
	if o != nil && !isNil(o.Clusters) {
		return true
	}

	return false
}

// SetClusters gets a reference to the given []SecretStoreSpecConfigVaultCluster and assigns it to the Clusters field.
func (o *SecretStoreSpecConfigVault) SetClusters(v []SecretStoreSpecConfigVaultCluster) {
	o.Clusters = v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *SecretStoreSpecConfigVault) GetHost() string {
	if o == nil || isNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretStoreSpecConfigVault) GetHostOk() (*string, bool) {
	if o == nil || isNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *SecretStoreSpecConfigVault) HasHost() bool {
	if o != nil && !isNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *SecretStoreSpecConfigVault) SetHost(v string) {
	o.Host = &v
}

func (o SecretStoreSpecConfigVault) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretStoreSpecConfigVault) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AuthMethod) {
		toSerialize["authMethod"] = o.AuthMethod
	}
	if !isNil(o.Clusters) {
		toSerialize["clusters"] = o.Clusters
	}
	if !isNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	return toSerialize, nil
}

type NullableSecretStoreSpecConfigVault struct {
	value *SecretStoreSpecConfigVault
	isSet bool
}

func (v NullableSecretStoreSpecConfigVault) Get() *SecretStoreSpecConfigVault {
	return v.value
}

func (v *NullableSecretStoreSpecConfigVault) Set(val *SecretStoreSpecConfigVault) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretStoreSpecConfigVault) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretStoreSpecConfigVault) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretStoreSpecConfigVault(val *SecretStoreSpecConfigVault) *NullableSecretStoreSpecConfigVault {
	return &NullableSecretStoreSpecConfigVault{value: val, isSet: true}
}

func (v NullableSecretStoreSpecConfigVault) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretStoreSpecConfigVault) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


