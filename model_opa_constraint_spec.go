/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the OPAConstraintSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OPAConstraintSpec{}

// OPAConstraintSpec opa constraint specification
type OPAConstraintSpec struct {
	Artifact *ArtifactSpec `json:"artifact,omitempty"`
	// publish status of the constraint
	Published *bool `json:"published,omitempty"`
	// Name of the opa constraint template
	TemplateName *string `json:"templateName,omitempty"`
	// version of the constraint
	Version *string `json:"version,omitempty"`
}

// NewOPAConstraintSpec instantiates a new OPAConstraintSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOPAConstraintSpec() *OPAConstraintSpec {
	this := OPAConstraintSpec{}
	return &this
}

// NewOPAConstraintSpecWithDefaults instantiates a new OPAConstraintSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOPAConstraintSpecWithDefaults() *OPAConstraintSpec {
	this := OPAConstraintSpec{}
	return &this
}

// GetArtifact returns the Artifact field value if set, zero value otherwise.
func (o *OPAConstraintSpec) GetArtifact() ArtifactSpec {
	if o == nil || isNil(o.Artifact) {
		var ret ArtifactSpec
		return ret
	}
	return *o.Artifact
}

// GetArtifactOk returns a tuple with the Artifact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OPAConstraintSpec) GetArtifactOk() (*ArtifactSpec, bool) {
	if o == nil || isNil(o.Artifact) {
		return nil, false
	}
	return o.Artifact, true
}

// HasArtifact returns a boolean if a field has been set.
func (o *OPAConstraintSpec) HasArtifact() bool {
	if o != nil && !isNil(o.Artifact) {
		return true
	}

	return false
}

// SetArtifact gets a reference to the given ArtifactSpec and assigns it to the Artifact field.
func (o *OPAConstraintSpec) SetArtifact(v ArtifactSpec) {
	o.Artifact = &v
}

// GetPublished returns the Published field value if set, zero value otherwise.
func (o *OPAConstraintSpec) GetPublished() bool {
	if o == nil || isNil(o.Published) {
		var ret bool
		return ret
	}
	return *o.Published
}

// GetPublishedOk returns a tuple with the Published field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OPAConstraintSpec) GetPublishedOk() (*bool, bool) {
	if o == nil || isNil(o.Published) {
		return nil, false
	}
	return o.Published, true
}

// HasPublished returns a boolean if a field has been set.
func (o *OPAConstraintSpec) HasPublished() bool {
	if o != nil && !isNil(o.Published) {
		return true
	}

	return false
}

// SetPublished gets a reference to the given bool and assigns it to the Published field.
func (o *OPAConstraintSpec) SetPublished(v bool) {
	o.Published = &v
}

// GetTemplateName returns the TemplateName field value if set, zero value otherwise.
func (o *OPAConstraintSpec) GetTemplateName() string {
	if o == nil || isNil(o.TemplateName) {
		var ret string
		return ret
	}
	return *o.TemplateName
}

// GetTemplateNameOk returns a tuple with the TemplateName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OPAConstraintSpec) GetTemplateNameOk() (*string, bool) {
	if o == nil || isNil(o.TemplateName) {
		return nil, false
	}
	return o.TemplateName, true
}

// HasTemplateName returns a boolean if a field has been set.
func (o *OPAConstraintSpec) HasTemplateName() bool {
	if o != nil && !isNil(o.TemplateName) {
		return true
	}

	return false
}

// SetTemplateName gets a reference to the given string and assigns it to the TemplateName field.
func (o *OPAConstraintSpec) SetTemplateName(v string) {
	o.TemplateName = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *OPAConstraintSpec) GetVersion() string {
	if o == nil || isNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OPAConstraintSpec) GetVersionOk() (*string, bool) {
	if o == nil || isNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *OPAConstraintSpec) HasVersion() bool {
	if o != nil && !isNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *OPAConstraintSpec) SetVersion(v string) {
	o.Version = &v
}

func (o OPAConstraintSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OPAConstraintSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Artifact) {
		toSerialize["artifact"] = o.Artifact
	}
	if !isNil(o.Published) {
		toSerialize["published"] = o.Published
	}
	if !isNil(o.TemplateName) {
		toSerialize["templateName"] = o.TemplateName
	}
	if !isNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableOPAConstraintSpec struct {
	value *OPAConstraintSpec
	isSet bool
}

func (v NullableOPAConstraintSpec) Get() *OPAConstraintSpec {
	return v.value
}

func (v *NullableOPAConstraintSpec) Set(val *OPAConstraintSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableOPAConstraintSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableOPAConstraintSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOPAConstraintSpec(val *OPAConstraintSpec) *NullableOPAConstraintSpec {
	return &NullableOPAConstraintSpec{value: val, isSet: true}
}

func (v NullableOPAConstraintSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOPAConstraintSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


