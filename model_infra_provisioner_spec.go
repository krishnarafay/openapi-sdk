/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the InfraProvisionerSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InfraProvisionerSpec{}

// InfraProvisionerSpec infrastructure provisioner configuration
type InfraProvisionerSpec struct {
	Config InfraProvisionerSpecConfig `json:"config"`
	FolderPath File `json:"folderPath"`
	// infrastructure provisioner git repository name
	Repository string `json:"repository"`
	// infrastructure provisioner git repository branch or tag
	Revision string `json:"revision"`
	Secret *File `json:"secret,omitempty"`
	// type of infrastructure provisioner
	Type string `json:"type"`
}

// NewInfraProvisionerSpec instantiates a new InfraProvisionerSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInfraProvisionerSpec(config InfraProvisionerSpecConfig, folderPath File, repository string, revision string, type_ string) *InfraProvisionerSpec {
	this := InfraProvisionerSpec{}
	this.Config = config
	this.FolderPath = folderPath
	this.Repository = repository
	this.Revision = revision
	this.Type = type_
	return &this
}

// NewInfraProvisionerSpecWithDefaults instantiates a new InfraProvisionerSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInfraProvisionerSpecWithDefaults() *InfraProvisionerSpec {
	this := InfraProvisionerSpec{}
	return &this
}

// GetConfig returns the Config field value
func (o *InfraProvisionerSpec) GetConfig() InfraProvisionerSpecConfig {
	if o == nil {
		var ret InfraProvisionerSpecConfig
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *InfraProvisionerSpec) GetConfigOk() (*InfraProvisionerSpecConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *InfraProvisionerSpec) SetConfig(v InfraProvisionerSpecConfig) {
	o.Config = v
}

// GetFolderPath returns the FolderPath field value
func (o *InfraProvisionerSpec) GetFolderPath() File {
	if o == nil {
		var ret File
		return ret
	}

	return o.FolderPath
}

// GetFolderPathOk returns a tuple with the FolderPath field value
// and a boolean to check if the value has been set.
func (o *InfraProvisionerSpec) GetFolderPathOk() (*File, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FolderPath, true
}

// SetFolderPath sets field value
func (o *InfraProvisionerSpec) SetFolderPath(v File) {
	o.FolderPath = v
}

// GetRepository returns the Repository field value
func (o *InfraProvisionerSpec) GetRepository() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value
// and a boolean to check if the value has been set.
func (o *InfraProvisionerSpec) GetRepositoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Repository, true
}

// SetRepository sets field value
func (o *InfraProvisionerSpec) SetRepository(v string) {
	o.Repository = v
}

// GetRevision returns the Revision field value
func (o *InfraProvisionerSpec) GetRevision() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *InfraProvisionerSpec) GetRevisionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *InfraProvisionerSpec) SetRevision(v string) {
	o.Revision = v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *InfraProvisionerSpec) GetSecret() File {
	if o == nil || isNil(o.Secret) {
		var ret File
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfraProvisionerSpec) GetSecretOk() (*File, bool) {
	if o == nil || isNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *InfraProvisionerSpec) HasSecret() bool {
	if o != nil && !isNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given File and assigns it to the Secret field.
func (o *InfraProvisionerSpec) SetSecret(v File) {
	o.Secret = &v
}

// GetType returns the Type field value
func (o *InfraProvisionerSpec) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *InfraProvisionerSpec) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *InfraProvisionerSpec) SetType(v string) {
	o.Type = v
}

func (o InfraProvisionerSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InfraProvisionerSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["config"] = o.Config
	toSerialize["folderPath"] = o.FolderPath
	toSerialize["repository"] = o.Repository
	toSerialize["revision"] = o.Revision
	if !isNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableInfraProvisionerSpec struct {
	value *InfraProvisionerSpec
	isSet bool
}

func (v NullableInfraProvisionerSpec) Get() *InfraProvisionerSpec {
	return v.value
}

func (v *NullableInfraProvisionerSpec) Set(val *InfraProvisionerSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableInfraProvisionerSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableInfraProvisionerSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInfraProvisionerSpec(val *InfraProvisionerSpec) *NullableInfraProvisionerSpec {
	return &NullableInfraProvisionerSpec{value: val, isSet: true}
}

func (v NullableInfraProvisionerSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInfraProvisionerSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


