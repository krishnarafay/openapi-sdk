/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ResourceTemplateSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceTemplateSpec{}

// ResourceTemplateSpec Resource template specification
type ResourceTemplateSpec struct {
	// Reference to agents to process resource template
	Agents []ResourceNameAndVersionRef `json:"agents,omitempty"`
	// Reference to config context data associated with resource templates
	Contexts []ResourceNameAndVersionRef `json:"contexts,omitempty"`
	Hooks *ResourceHooks `json:"hooks,omitempty"`
	// Specify the resource template provider
	Provider *string `json:"provider,omitempty"`
	ProviderOptions *ResourceTemplateProviderOptions `json:"providerOptions,omitempty"`
	RepositoryOptions *ResourceTemplateRepositoryOptions `json:"repositoryOptions,omitempty"`
	SharingOptions *SharingSpec `json:"sharingOptions,omitempty"`
	// Variables associated with resource template
	Variables []Variable `json:"variables,omitempty"`
	// Version of the resource template
	Version *string `json:"version,omitempty"`
}

// NewResourceTemplateSpec instantiates a new ResourceTemplateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceTemplateSpec() *ResourceTemplateSpec {
	this := ResourceTemplateSpec{}
	return &this
}

// NewResourceTemplateSpecWithDefaults instantiates a new ResourceTemplateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceTemplateSpecWithDefaults() *ResourceTemplateSpec {
	this := ResourceTemplateSpec{}
	return &this
}

// GetAgents returns the Agents field value if set, zero value otherwise.
func (o *ResourceTemplateSpec) GetAgents() []ResourceNameAndVersionRef {
	if o == nil || isNil(o.Agents) {
		var ret []ResourceNameAndVersionRef
		return ret
	}
	return o.Agents
}

// GetAgentsOk returns a tuple with the Agents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceTemplateSpec) GetAgentsOk() ([]ResourceNameAndVersionRef, bool) {
	if o == nil || isNil(o.Agents) {
		return nil, false
	}
	return o.Agents, true
}

// HasAgents returns a boolean if a field has been set.
func (o *ResourceTemplateSpec) HasAgents() bool {
	if o != nil && !isNil(o.Agents) {
		return true
	}

	return false
}

// SetAgents gets a reference to the given []ResourceNameAndVersionRef and assigns it to the Agents field.
func (o *ResourceTemplateSpec) SetAgents(v []ResourceNameAndVersionRef) {
	o.Agents = v
}

// GetContexts returns the Contexts field value if set, zero value otherwise.
func (o *ResourceTemplateSpec) GetContexts() []ResourceNameAndVersionRef {
	if o == nil || isNil(o.Contexts) {
		var ret []ResourceNameAndVersionRef
		return ret
	}
	return o.Contexts
}

// GetContextsOk returns a tuple with the Contexts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceTemplateSpec) GetContextsOk() ([]ResourceNameAndVersionRef, bool) {
	if o == nil || isNil(o.Contexts) {
		return nil, false
	}
	return o.Contexts, true
}

// HasContexts returns a boolean if a field has been set.
func (o *ResourceTemplateSpec) HasContexts() bool {
	if o != nil && !isNil(o.Contexts) {
		return true
	}

	return false
}

// SetContexts gets a reference to the given []ResourceNameAndVersionRef and assigns it to the Contexts field.
func (o *ResourceTemplateSpec) SetContexts(v []ResourceNameAndVersionRef) {
	o.Contexts = v
}

// GetHooks returns the Hooks field value if set, zero value otherwise.
func (o *ResourceTemplateSpec) GetHooks() ResourceHooks {
	if o == nil || isNil(o.Hooks) {
		var ret ResourceHooks
		return ret
	}
	return *o.Hooks
}

// GetHooksOk returns a tuple with the Hooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceTemplateSpec) GetHooksOk() (*ResourceHooks, bool) {
	if o == nil || isNil(o.Hooks) {
		return nil, false
	}
	return o.Hooks, true
}

// HasHooks returns a boolean if a field has been set.
func (o *ResourceTemplateSpec) HasHooks() bool {
	if o != nil && !isNil(o.Hooks) {
		return true
	}

	return false
}

// SetHooks gets a reference to the given ResourceHooks and assigns it to the Hooks field.
func (o *ResourceTemplateSpec) SetHooks(v ResourceHooks) {
	o.Hooks = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *ResourceTemplateSpec) GetProvider() string {
	if o == nil || isNil(o.Provider) {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceTemplateSpec) GetProviderOk() (*string, bool) {
	if o == nil || isNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *ResourceTemplateSpec) HasProvider() bool {
	if o != nil && !isNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *ResourceTemplateSpec) SetProvider(v string) {
	o.Provider = &v
}

// GetProviderOptions returns the ProviderOptions field value if set, zero value otherwise.
func (o *ResourceTemplateSpec) GetProviderOptions() ResourceTemplateProviderOptions {
	if o == nil || isNil(o.ProviderOptions) {
		var ret ResourceTemplateProviderOptions
		return ret
	}
	return *o.ProviderOptions
}

// GetProviderOptionsOk returns a tuple with the ProviderOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceTemplateSpec) GetProviderOptionsOk() (*ResourceTemplateProviderOptions, bool) {
	if o == nil || isNil(o.ProviderOptions) {
		return nil, false
	}
	return o.ProviderOptions, true
}

// HasProviderOptions returns a boolean if a field has been set.
func (o *ResourceTemplateSpec) HasProviderOptions() bool {
	if o != nil && !isNil(o.ProviderOptions) {
		return true
	}

	return false
}

// SetProviderOptions gets a reference to the given ResourceTemplateProviderOptions and assigns it to the ProviderOptions field.
func (o *ResourceTemplateSpec) SetProviderOptions(v ResourceTemplateProviderOptions) {
	o.ProviderOptions = &v
}

// GetRepositoryOptions returns the RepositoryOptions field value if set, zero value otherwise.
func (o *ResourceTemplateSpec) GetRepositoryOptions() ResourceTemplateRepositoryOptions {
	if o == nil || isNil(o.RepositoryOptions) {
		var ret ResourceTemplateRepositoryOptions
		return ret
	}
	return *o.RepositoryOptions
}

// GetRepositoryOptionsOk returns a tuple with the RepositoryOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceTemplateSpec) GetRepositoryOptionsOk() (*ResourceTemplateRepositoryOptions, bool) {
	if o == nil || isNil(o.RepositoryOptions) {
		return nil, false
	}
	return o.RepositoryOptions, true
}

// HasRepositoryOptions returns a boolean if a field has been set.
func (o *ResourceTemplateSpec) HasRepositoryOptions() bool {
	if o != nil && !isNil(o.RepositoryOptions) {
		return true
	}

	return false
}

// SetRepositoryOptions gets a reference to the given ResourceTemplateRepositoryOptions and assigns it to the RepositoryOptions field.
func (o *ResourceTemplateSpec) SetRepositoryOptions(v ResourceTemplateRepositoryOptions) {
	o.RepositoryOptions = &v
}

// GetSharingOptions returns the SharingOptions field value if set, zero value otherwise.
func (o *ResourceTemplateSpec) GetSharingOptions() SharingSpec {
	if o == nil || isNil(o.SharingOptions) {
		var ret SharingSpec
		return ret
	}
	return *o.SharingOptions
}

// GetSharingOptionsOk returns a tuple with the SharingOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceTemplateSpec) GetSharingOptionsOk() (*SharingSpec, bool) {
	if o == nil || isNil(o.SharingOptions) {
		return nil, false
	}
	return o.SharingOptions, true
}

// HasSharingOptions returns a boolean if a field has been set.
func (o *ResourceTemplateSpec) HasSharingOptions() bool {
	if o != nil && !isNil(o.SharingOptions) {
		return true
	}

	return false
}

// SetSharingOptions gets a reference to the given SharingSpec and assigns it to the SharingOptions field.
func (o *ResourceTemplateSpec) SetSharingOptions(v SharingSpec) {
	o.SharingOptions = &v
}

// GetVariables returns the Variables field value if set, zero value otherwise.
func (o *ResourceTemplateSpec) GetVariables() []Variable {
	if o == nil || isNil(o.Variables) {
		var ret []Variable
		return ret
	}
	return o.Variables
}

// GetVariablesOk returns a tuple with the Variables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceTemplateSpec) GetVariablesOk() ([]Variable, bool) {
	if o == nil || isNil(o.Variables) {
		return nil, false
	}
	return o.Variables, true
}

// HasVariables returns a boolean if a field has been set.
func (o *ResourceTemplateSpec) HasVariables() bool {
	if o != nil && !isNil(o.Variables) {
		return true
	}

	return false
}

// SetVariables gets a reference to the given []Variable and assigns it to the Variables field.
func (o *ResourceTemplateSpec) SetVariables(v []Variable) {
	o.Variables = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ResourceTemplateSpec) GetVersion() string {
	if o == nil || isNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceTemplateSpec) GetVersionOk() (*string, bool) {
	if o == nil || isNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ResourceTemplateSpec) HasVersion() bool {
	if o != nil && !isNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ResourceTemplateSpec) SetVersion(v string) {
	o.Version = &v
}

func (o ResourceTemplateSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceTemplateSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Agents) {
		toSerialize["agents"] = o.Agents
	}
	if !isNil(o.Contexts) {
		toSerialize["contexts"] = o.Contexts
	}
	if !isNil(o.Hooks) {
		toSerialize["hooks"] = o.Hooks
	}
	if !isNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !isNil(o.ProviderOptions) {
		toSerialize["providerOptions"] = o.ProviderOptions
	}
	if !isNil(o.RepositoryOptions) {
		toSerialize["repositoryOptions"] = o.RepositoryOptions
	}
	if !isNil(o.SharingOptions) {
		toSerialize["sharingOptions"] = o.SharingOptions
	}
	if !isNil(o.Variables) {
		toSerialize["variables"] = o.Variables
	}
	if !isNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableResourceTemplateSpec struct {
	value *ResourceTemplateSpec
	isSet bool
}

func (v NullableResourceTemplateSpec) Get() *ResourceTemplateSpec {
	return v.value
}

func (v *NullableResourceTemplateSpec) Set(val *ResourceTemplateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceTemplateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceTemplateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceTemplateSpec(val *ResourceTemplateSpec) *NullableResourceTemplateSpec {
	return &NullableResourceTemplateSpec{value: val, isSet: true}
}

func (v NullableResourceTemplateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceTemplateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


