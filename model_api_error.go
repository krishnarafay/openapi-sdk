/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the APIError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &APIError{}

// APIError API Error
type APIError struct {
	// Error Code
	Code *int32 `json:"code,omitempty"`
	// External Error
	External *string `json:"external,omitempty"`
	// Internal Error string
	Internal *string `json:"internal,omitempty"`
}

// NewAPIError instantiates a new APIError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIError() *APIError {
	this := APIError{}
	return &this
}

// NewAPIErrorWithDefaults instantiates a new APIError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIErrorWithDefaults() *APIError {
	this := APIError{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *APIError) GetCode() int32 {
	if o == nil || isNil(o.Code) {
		var ret int32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIError) GetCodeOk() (*int32, bool) {
	if o == nil || isNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *APIError) HasCode() bool {
	if o != nil && !isNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given int32 and assigns it to the Code field.
func (o *APIError) SetCode(v int32) {
	o.Code = &v
}

// GetExternal returns the External field value if set, zero value otherwise.
func (o *APIError) GetExternal() string {
	if o == nil || isNil(o.External) {
		var ret string
		return ret
	}
	return *o.External
}

// GetExternalOk returns a tuple with the External field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIError) GetExternalOk() (*string, bool) {
	if o == nil || isNil(o.External) {
		return nil, false
	}
	return o.External, true
}

// HasExternal returns a boolean if a field has been set.
func (o *APIError) HasExternal() bool {
	if o != nil && !isNil(o.External) {
		return true
	}

	return false
}

// SetExternal gets a reference to the given string and assigns it to the External field.
func (o *APIError) SetExternal(v string) {
	o.External = &v
}

// GetInternal returns the Internal field value if set, zero value otherwise.
func (o *APIError) GetInternal() string {
	if o == nil || isNil(o.Internal) {
		var ret string
		return ret
	}
	return *o.Internal
}

// GetInternalOk returns a tuple with the Internal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIError) GetInternalOk() (*string, bool) {
	if o == nil || isNil(o.Internal) {
		return nil, false
	}
	return o.Internal, true
}

// HasInternal returns a boolean if a field has been set.
func (o *APIError) HasInternal() bool {
	if o != nil && !isNil(o.Internal) {
		return true
	}

	return false
}

// SetInternal gets a reference to the given string and assigns it to the Internal field.
func (o *APIError) SetInternal(v string) {
	o.Internal = &v
}

func (o APIError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o APIError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !isNil(o.External) {
		toSerialize["external"] = o.External
	}
	if !isNil(o.Internal) {
		toSerialize["internal"] = o.Internal
	}
	return toSerialize, nil
}

type NullableAPIError struct {
	value *APIError
	isSet bool
}

func (v NullableAPIError) Get() *APIError {
	return v.value
}

func (v *NullableAPIError) Set(val *APIError) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIError) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIError(val *APIError) *NullableAPIError {
	return &NullableAPIError{value: val, isSet: true}
}

func (v NullableAPIError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


