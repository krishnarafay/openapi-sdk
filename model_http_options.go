/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the HttpOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HttpOptions{}

// HttpOptions struct for HttpOptions
type HttpOptions struct {
	// Specify the body of http request
	Body *string `json:"body,omitempty"`
	// Specify the endpoint to be invoked
	Endpoint *string `json:"endpoint,omitempty"`
	// Specify the http headers in key,value pair
	Headers *map[string]string `json:"headers,omitempty"`
	// Specify the http method to be used
	Method *string `json:"method,omitempty"`
	// Specify the success condition of the request
	SuccessCondition *string `json:"successCondition,omitempty"`
}

// NewHttpOptions instantiates a new HttpOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpOptions() *HttpOptions {
	this := HttpOptions{}
	return &this
}

// NewHttpOptionsWithDefaults instantiates a new HttpOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpOptionsWithDefaults() *HttpOptions {
	this := HttpOptions{}
	return &this
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *HttpOptions) GetBody() string {
	if o == nil || isNil(o.Body) {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpOptions) GetBodyOk() (*string, bool) {
	if o == nil || isNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *HttpOptions) HasBody() bool {
	if o != nil && !isNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *HttpOptions) SetBody(v string) {
	o.Body = &v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *HttpOptions) GetEndpoint() string {
	if o == nil || isNil(o.Endpoint) {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpOptions) GetEndpointOk() (*string, bool) {
	if o == nil || isNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *HttpOptions) HasEndpoint() bool {
	if o != nil && !isNil(o.Endpoint) {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *HttpOptions) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *HttpOptions) GetHeaders() map[string]string {
	if o == nil || isNil(o.Headers) {
		var ret map[string]string
		return ret
	}
	return *o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpOptions) GetHeadersOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Headers) {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *HttpOptions) HasHeaders() bool {
	if o != nil && !isNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]string and assigns it to the Headers field.
func (o *HttpOptions) SetHeaders(v map[string]string) {
	o.Headers = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *HttpOptions) GetMethod() string {
	if o == nil || isNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpOptions) GetMethodOk() (*string, bool) {
	if o == nil || isNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *HttpOptions) HasMethod() bool {
	if o != nil && !isNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *HttpOptions) SetMethod(v string) {
	o.Method = &v
}

// GetSuccessCondition returns the SuccessCondition field value if set, zero value otherwise.
func (o *HttpOptions) GetSuccessCondition() string {
	if o == nil || isNil(o.SuccessCondition) {
		var ret string
		return ret
	}
	return *o.SuccessCondition
}

// GetSuccessConditionOk returns a tuple with the SuccessCondition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpOptions) GetSuccessConditionOk() (*string, bool) {
	if o == nil || isNil(o.SuccessCondition) {
		return nil, false
	}
	return o.SuccessCondition, true
}

// HasSuccessCondition returns a boolean if a field has been set.
func (o *HttpOptions) HasSuccessCondition() bool {
	if o != nil && !isNil(o.SuccessCondition) {
		return true
	}

	return false
}

// SetSuccessCondition gets a reference to the given string and assigns it to the SuccessCondition field.
func (o *HttpOptions) SetSuccessCondition(v string) {
	o.SuccessCondition = &v
}

func (o HttpOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HttpOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	if !isNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	if !isNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	if !isNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !isNil(o.SuccessCondition) {
		toSerialize["successCondition"] = o.SuccessCondition
	}
	return toSerialize, nil
}

type NullableHttpOptions struct {
	value *HttpOptions
	isSet bool
}

func (v NullableHttpOptions) Get() *HttpOptions {
	return v.value
}

func (v *NullableHttpOptions) Set(val *HttpOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpOptions(val *HttpOptions) *NullableHttpOptions {
	return &NullableHttpOptions{value: val, isSet: true}
}

func (v NullableHttpOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


