/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ExtraData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtraData{}

// ExtraData struct for ExtraData
type ExtraData struct {
	Fields map[string]interface{} `json:"fields,omitempty"`
}

// NewExtraData instantiates a new ExtraData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtraData() *ExtraData {
	this := ExtraData{}
	return &this
}

// NewExtraDataWithDefaults instantiates a new ExtraData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtraDataWithDefaults() *ExtraData {
	this := ExtraData{}
	return &this
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *ExtraData) GetFields() map[string]interface{} {
	if o == nil || isNil(o.Fields) {
		var ret map[string]interface{}
		return ret
	}
	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtraData) GetFieldsOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Fields) {
		return map[string]interface{}{}, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *ExtraData) HasFields() bool {
	if o != nil && !isNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given map[string]interface{} and assigns it to the Fields field.
func (o *ExtraData) SetFields(v map[string]interface{}) {
	o.Fields = v
}

func (o ExtraData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtraData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	return toSerialize, nil
}

type NullableExtraData struct {
	value *ExtraData
	isSet bool
}

func (v NullableExtraData) Get() *ExtraData {
	return v.value
}

func (v *NullableExtraData) Set(val *ExtraData) {
	v.value = val
	v.isSet = true
}

func (v NullableExtraData) IsSet() bool {
	return v.isSet
}

func (v *NullableExtraData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtraData(val *ExtraData) *NullableExtraData {
	return &NullableExtraData{value: val, isSet: true}
}

func (v NullableExtraData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtraData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


