/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
	"time"
)

// checks if the StartDate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StartDate{}

// StartDate startDate
type StartDate struct {
	Values *time.Time `json:"values,omitempty"`
}

// NewStartDate instantiates a new StartDate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStartDate() *StartDate {
	this := StartDate{}
	return &this
}

// NewStartDateWithDefaults instantiates a new StartDate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStartDateWithDefaults() *StartDate {
	this := StartDate{}
	return &this
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *StartDate) GetValues() time.Time {
	if o == nil || isNil(o.Values) {
		var ret time.Time
		return ret
	}
	return *o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartDate) GetValuesOk() (*time.Time, bool) {
	if o == nil || isNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *StartDate) HasValues() bool {
	if o != nil && !isNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given time.Time and assigns it to the Values field.
func (o *StartDate) SetValues(v time.Time) {
	o.Values = &v
}

func (o StartDate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StartDate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	return toSerialize, nil
}

type NullableStartDate struct {
	value *StartDate
	isSet bool
}

func (v NullableStartDate) Get() *StartDate {
	return v.value
}

func (v *NullableStartDate) Set(val *StartDate) {
	v.value = val
	v.isSet = true
}

func (v NullableStartDate) IsSet() bool {
	return v.isSet
}

func (v *NullableStartDate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStartDate(val *StartDate) *NullableStartDate {
	return &NullableStartDate{value: val, isSet: true}
}

func (v NullableStartDate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStartDate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


