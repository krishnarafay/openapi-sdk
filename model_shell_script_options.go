/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ShellScriptOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShellScriptOptions{}

// ShellScriptOptions struct for ShellScriptOptions
type ShellScriptOptions struct {
	// Specify the cpu limit in milli
	CpuLimitMilli *string `json:"cpuLimitMilli,omitempty"`
	// Specify the environment variables to be set in key,value pair
	Envvars *map[string]string `json:"envvars,omitempty"`
	// Specify the memory limit to be allocated in MB
	MemoryLimitMB *string `json:"memoryLimitMB,omitempty"`
	// Specify the script to be executed
	Script *string `json:"script,omitempty"`
	// Specify the success condition of the script
	SuccessCondition *string `json:"successCondition,omitempty"`
}

// NewShellScriptOptions instantiates a new ShellScriptOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShellScriptOptions() *ShellScriptOptions {
	this := ShellScriptOptions{}
	return &this
}

// NewShellScriptOptionsWithDefaults instantiates a new ShellScriptOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShellScriptOptionsWithDefaults() *ShellScriptOptions {
	this := ShellScriptOptions{}
	return &this
}

// GetCpuLimitMilli returns the CpuLimitMilli field value if set, zero value otherwise.
func (o *ShellScriptOptions) GetCpuLimitMilli() string {
	if o == nil || isNil(o.CpuLimitMilli) {
		var ret string
		return ret
	}
	return *o.CpuLimitMilli
}

// GetCpuLimitMilliOk returns a tuple with the CpuLimitMilli field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShellScriptOptions) GetCpuLimitMilliOk() (*string, bool) {
	if o == nil || isNil(o.CpuLimitMilli) {
		return nil, false
	}
	return o.CpuLimitMilli, true
}

// HasCpuLimitMilli returns a boolean if a field has been set.
func (o *ShellScriptOptions) HasCpuLimitMilli() bool {
	if o != nil && !isNil(o.CpuLimitMilli) {
		return true
	}

	return false
}

// SetCpuLimitMilli gets a reference to the given string and assigns it to the CpuLimitMilli field.
func (o *ShellScriptOptions) SetCpuLimitMilli(v string) {
	o.CpuLimitMilli = &v
}

// GetEnvvars returns the Envvars field value if set, zero value otherwise.
func (o *ShellScriptOptions) GetEnvvars() map[string]string {
	if o == nil || isNil(o.Envvars) {
		var ret map[string]string
		return ret
	}
	return *o.Envvars
}

// GetEnvvarsOk returns a tuple with the Envvars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShellScriptOptions) GetEnvvarsOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Envvars) {
		return nil, false
	}
	return o.Envvars, true
}

// HasEnvvars returns a boolean if a field has been set.
func (o *ShellScriptOptions) HasEnvvars() bool {
	if o != nil && !isNil(o.Envvars) {
		return true
	}

	return false
}

// SetEnvvars gets a reference to the given map[string]string and assigns it to the Envvars field.
func (o *ShellScriptOptions) SetEnvvars(v map[string]string) {
	o.Envvars = &v
}

// GetMemoryLimitMB returns the MemoryLimitMB field value if set, zero value otherwise.
func (o *ShellScriptOptions) GetMemoryLimitMB() string {
	if o == nil || isNil(o.MemoryLimitMB) {
		var ret string
		return ret
	}
	return *o.MemoryLimitMB
}

// GetMemoryLimitMBOk returns a tuple with the MemoryLimitMB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShellScriptOptions) GetMemoryLimitMBOk() (*string, bool) {
	if o == nil || isNil(o.MemoryLimitMB) {
		return nil, false
	}
	return o.MemoryLimitMB, true
}

// HasMemoryLimitMB returns a boolean if a field has been set.
func (o *ShellScriptOptions) HasMemoryLimitMB() bool {
	if o != nil && !isNil(o.MemoryLimitMB) {
		return true
	}

	return false
}

// SetMemoryLimitMB gets a reference to the given string and assigns it to the MemoryLimitMB field.
func (o *ShellScriptOptions) SetMemoryLimitMB(v string) {
	o.MemoryLimitMB = &v
}

// GetScript returns the Script field value if set, zero value otherwise.
func (o *ShellScriptOptions) GetScript() string {
	if o == nil || isNil(o.Script) {
		var ret string
		return ret
	}
	return *o.Script
}

// GetScriptOk returns a tuple with the Script field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShellScriptOptions) GetScriptOk() (*string, bool) {
	if o == nil || isNil(o.Script) {
		return nil, false
	}
	return o.Script, true
}

// HasScript returns a boolean if a field has been set.
func (o *ShellScriptOptions) HasScript() bool {
	if o != nil && !isNil(o.Script) {
		return true
	}

	return false
}

// SetScript gets a reference to the given string and assigns it to the Script field.
func (o *ShellScriptOptions) SetScript(v string) {
	o.Script = &v
}

// GetSuccessCondition returns the SuccessCondition field value if set, zero value otherwise.
func (o *ShellScriptOptions) GetSuccessCondition() string {
	if o == nil || isNil(o.SuccessCondition) {
		var ret string
		return ret
	}
	return *o.SuccessCondition
}

// GetSuccessConditionOk returns a tuple with the SuccessCondition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShellScriptOptions) GetSuccessConditionOk() (*string, bool) {
	if o == nil || isNil(o.SuccessCondition) {
		return nil, false
	}
	return o.SuccessCondition, true
}

// HasSuccessCondition returns a boolean if a field has been set.
func (o *ShellScriptOptions) HasSuccessCondition() bool {
	if o != nil && !isNil(o.SuccessCondition) {
		return true
	}

	return false
}

// SetSuccessCondition gets a reference to the given string and assigns it to the SuccessCondition field.
func (o *ShellScriptOptions) SetSuccessCondition(v string) {
	o.SuccessCondition = &v
}

func (o ShellScriptOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShellScriptOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CpuLimitMilli) {
		toSerialize["cpuLimitMilli"] = o.CpuLimitMilli
	}
	if !isNil(o.Envvars) {
		toSerialize["envvars"] = o.Envvars
	}
	if !isNil(o.MemoryLimitMB) {
		toSerialize["memoryLimitMB"] = o.MemoryLimitMB
	}
	if !isNil(o.Script) {
		toSerialize["script"] = o.Script
	}
	if !isNil(o.SuccessCondition) {
		toSerialize["successCondition"] = o.SuccessCondition
	}
	return toSerialize, nil
}

type NullableShellScriptOptions struct {
	value *ShellScriptOptions
	isSet bool
}

func (v NullableShellScriptOptions) Get() *ShellScriptOptions {
	return v.value
}

func (v *NullableShellScriptOptions) Set(val *ShellScriptOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableShellScriptOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableShellScriptOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShellScriptOptions(val *ShellScriptOptions) *NullableShellScriptOptions {
	return &NullableShellScriptOptions{value: val, isSet: true}
}

func (v NullableShellScriptOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShellScriptOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


