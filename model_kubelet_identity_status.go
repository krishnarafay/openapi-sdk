/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the KubeletIdentityStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubeletIdentityStatus{}

// KubeletIdentityStatus struct for KubeletIdentityStatus
type KubeletIdentityStatus struct {
	PrincipalId *string `json:"principalId,omitempty"`
	TenantId *string `json:"tenantId,omitempty"`
}

// NewKubeletIdentityStatus instantiates a new KubeletIdentityStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubeletIdentityStatus() *KubeletIdentityStatus {
	this := KubeletIdentityStatus{}
	return &this
}

// NewKubeletIdentityStatusWithDefaults instantiates a new KubeletIdentityStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubeletIdentityStatusWithDefaults() *KubeletIdentityStatus {
	this := KubeletIdentityStatus{}
	return &this
}

// GetPrincipalId returns the PrincipalId field value if set, zero value otherwise.
func (o *KubeletIdentityStatus) GetPrincipalId() string {
	if o == nil || isNil(o.PrincipalId) {
		var ret string
		return ret
	}
	return *o.PrincipalId
}

// GetPrincipalIdOk returns a tuple with the PrincipalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubeletIdentityStatus) GetPrincipalIdOk() (*string, bool) {
	if o == nil || isNil(o.PrincipalId) {
		return nil, false
	}
	return o.PrincipalId, true
}

// HasPrincipalId returns a boolean if a field has been set.
func (o *KubeletIdentityStatus) HasPrincipalId() bool {
	if o != nil && !isNil(o.PrincipalId) {
		return true
	}

	return false
}

// SetPrincipalId gets a reference to the given string and assigns it to the PrincipalId field.
func (o *KubeletIdentityStatus) SetPrincipalId(v string) {
	o.PrincipalId = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *KubeletIdentityStatus) GetTenantId() string {
	if o == nil || isNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubeletIdentityStatus) GetTenantIdOk() (*string, bool) {
	if o == nil || isNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *KubeletIdentityStatus) HasTenantId() bool {
	if o != nil && !isNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *KubeletIdentityStatus) SetTenantId(v string) {
	o.TenantId = &v
}

func (o KubeletIdentityStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubeletIdentityStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PrincipalId) {
		toSerialize["principalId"] = o.PrincipalId
	}
	if !isNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	return toSerialize, nil
}

type NullableKubeletIdentityStatus struct {
	value *KubeletIdentityStatus
	isSet bool
}

func (v NullableKubeletIdentityStatus) Get() *KubeletIdentityStatus {
	return v.value
}

func (v *NullableKubeletIdentityStatus) Set(val *KubeletIdentityStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableKubeletIdentityStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableKubeletIdentityStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubeletIdentityStatus(val *KubeletIdentityStatus) *NullableKubeletIdentityStatus {
	return &NullableKubeletIdentityStatus{value: val, isSet: true}
}

func (v NullableKubeletIdentityStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubeletIdentityStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


