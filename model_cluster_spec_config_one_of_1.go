/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the ClusterSpecConfigOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterSpecConfigOneOf1{}

// ClusterSpecConfigOneOf1 struct for ClusterSpecConfigOneOf1
type ClusterSpecConfigOneOf1 struct {
	ApiVersion *string `json:"apiVersion,omitempty"`
	Kind *string `json:"kind,omitempty"`
	Metadata *Metadata `json:"metadata,omitempty"`
	Spec *AksV3Spec `json:"spec,omitempty"`
}

// NewClusterSpecConfigOneOf1 instantiates a new ClusterSpecConfigOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterSpecConfigOneOf1() *ClusterSpecConfigOneOf1 {
	this := ClusterSpecConfigOneOf1{}
	return &this
}

// NewClusterSpecConfigOneOf1WithDefaults instantiates a new ClusterSpecConfigOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterSpecConfigOneOf1WithDefaults() *ClusterSpecConfigOneOf1 {
	this := ClusterSpecConfigOneOf1{}
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *ClusterSpecConfigOneOf1) GetApiVersion() string {
	if o == nil || isNil(o.ApiVersion) {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSpecConfigOneOf1) GetApiVersionOk() (*string, bool) {
	if o == nil || isNil(o.ApiVersion) {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *ClusterSpecConfigOneOf1) HasApiVersion() bool {
	if o != nil && !isNil(o.ApiVersion) {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *ClusterSpecConfigOneOf1) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *ClusterSpecConfigOneOf1) GetKind() string {
	if o == nil || isNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSpecConfigOneOf1) GetKindOk() (*string, bool) {
	if o == nil || isNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *ClusterSpecConfigOneOf1) HasKind() bool {
	if o != nil && !isNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *ClusterSpecConfigOneOf1) SetKind(v string) {
	o.Kind = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ClusterSpecConfigOneOf1) GetMetadata() Metadata {
	if o == nil || isNil(o.Metadata) {
		var ret Metadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSpecConfigOneOf1) GetMetadataOk() (*Metadata, bool) {
	if o == nil || isNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ClusterSpecConfigOneOf1) HasMetadata() bool {
	if o != nil && !isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given Metadata and assigns it to the Metadata field.
func (o *ClusterSpecConfigOneOf1) SetMetadata(v Metadata) {
	o.Metadata = &v
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *ClusterSpecConfigOneOf1) GetSpec() AksV3Spec {
	if o == nil || isNil(o.Spec) {
		var ret AksV3Spec
		return ret
	}
	return *o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterSpecConfigOneOf1) GetSpecOk() (*AksV3Spec, bool) {
	if o == nil || isNil(o.Spec) {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *ClusterSpecConfigOneOf1) HasSpec() bool {
	if o != nil && !isNil(o.Spec) {
		return true
	}

	return false
}

// SetSpec gets a reference to the given AksV3Spec and assigns it to the Spec field.
func (o *ClusterSpecConfigOneOf1) SetSpec(v AksV3Spec) {
	o.Spec = &v
}

func (o ClusterSpecConfigOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterSpecConfigOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ApiVersion) {
		toSerialize["apiVersion"] = o.ApiVersion
	}
	if !isNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !isNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !isNil(o.Spec) {
		toSerialize["spec"] = o.Spec
	}
	return toSerialize, nil
}

type NullableClusterSpecConfigOneOf1 struct {
	value *ClusterSpecConfigOneOf1
	isSet bool
}

func (v NullableClusterSpecConfigOneOf1) Get() *ClusterSpecConfigOneOf1 {
	return v.value
}

func (v *NullableClusterSpecConfigOneOf1) Set(val *ClusterSpecConfigOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterSpecConfigOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterSpecConfigOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterSpecConfigOneOf1(val *ClusterSpecConfigOneOf1) *NullableClusterSpecConfigOneOf1 {
	return &NullableClusterSpecConfigOneOf1{value: val, isSet: true}
}

func (v NullableClusterSpecConfigOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterSpecConfigOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


