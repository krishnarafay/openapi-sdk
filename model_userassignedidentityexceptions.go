/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the Userassignedidentityexceptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Userassignedidentityexceptions{}

// Userassignedidentityexceptions struct for Userassignedidentityexceptions
type Userassignedidentityexceptions struct {
	// The name of the pod identity exception.
	Name *string `json:"name,omitempty"`
	// The namespace of the pod identity exception.
	Namespace *string `json:"namespace,omitempty"`
	// The pod labels to match.
	PodLabels *map[string]string `json:"podLabels,omitempty"`
}

// NewUserassignedidentityexceptions instantiates a new Userassignedidentityexceptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserassignedidentityexceptions() *Userassignedidentityexceptions {
	this := Userassignedidentityexceptions{}
	return &this
}

// NewUserassignedidentityexceptionsWithDefaults instantiates a new Userassignedidentityexceptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserassignedidentityexceptionsWithDefaults() *Userassignedidentityexceptions {
	this := Userassignedidentityexceptions{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Userassignedidentityexceptions) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Userassignedidentityexceptions) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Userassignedidentityexceptions) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Userassignedidentityexceptions) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *Userassignedidentityexceptions) GetNamespace() string {
	if o == nil || isNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Userassignedidentityexceptions) GetNamespaceOk() (*string, bool) {
	if o == nil || isNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *Userassignedidentityexceptions) HasNamespace() bool {
	if o != nil && !isNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *Userassignedidentityexceptions) SetNamespace(v string) {
	o.Namespace = &v
}

// GetPodLabels returns the PodLabels field value if set, zero value otherwise.
func (o *Userassignedidentityexceptions) GetPodLabels() map[string]string {
	if o == nil || isNil(o.PodLabels) {
		var ret map[string]string
		return ret
	}
	return *o.PodLabels
}

// GetPodLabelsOk returns a tuple with the PodLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Userassignedidentityexceptions) GetPodLabelsOk() (*map[string]string, bool) {
	if o == nil || isNil(o.PodLabels) {
		return nil, false
	}
	return o.PodLabels, true
}

// HasPodLabels returns a boolean if a field has been set.
func (o *Userassignedidentityexceptions) HasPodLabels() bool {
	if o != nil && !isNil(o.PodLabels) {
		return true
	}

	return false
}

// SetPodLabels gets a reference to the given map[string]string and assigns it to the PodLabels field.
func (o *Userassignedidentityexceptions) SetPodLabels(v map[string]string) {
	o.PodLabels = &v
}

func (o Userassignedidentityexceptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Userassignedidentityexceptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !isNil(o.PodLabels) {
		toSerialize["podLabels"] = o.PodLabels
	}
	return toSerialize, nil
}

type NullableUserassignedidentityexceptions struct {
	value *Userassignedidentityexceptions
	isSet bool
}

func (v NullableUserassignedidentityexceptions) Get() *Userassignedidentityexceptions {
	return v.value
}

func (v *NullableUserassignedidentityexceptions) Set(val *Userassignedidentityexceptions) {
	v.value = val
	v.isSet = true
}

func (v NullableUserassignedidentityexceptions) IsSet() bool {
	return v.isSet
}

func (v *NullableUserassignedidentityexceptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserassignedidentityexceptions(val *Userassignedidentityexceptions) *NullableUserassignedidentityexceptions {
	return &NullableUserassignedidentityexceptions{value: val, isSet: true}
}

func (v NullableUserassignedidentityexceptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserassignedidentityexceptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


