/*
Kubernetes Operations APIs

Kubernetes Operations APIs

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafaysdkgov3

import (
	"encoding/json"
)

// checks if the SecretStoreSpecConfigCsiAwsCluster type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretStoreSpecConfigCsiAwsCluster{}

// SecretStoreSpecConfigCsiAwsCluster secret store specification
type SecretStoreSpecConfigCsiAwsCluster struct {
	// Cluster name for cluster linked to secret store resource
	ClusterName *string `json:"clusterName,omitempty"`
	// List of service account with role to be created
	Irsa []Irsa `json:"irsa,omitempty"`
	// List of service provider class to be created in cluster
	SecretProviderClasses []SecretProviderClassMeta `json:"secretProviderClasses,omitempty"`
}

// NewSecretStoreSpecConfigCsiAwsCluster instantiates a new SecretStoreSpecConfigCsiAwsCluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretStoreSpecConfigCsiAwsCluster() *SecretStoreSpecConfigCsiAwsCluster {
	this := SecretStoreSpecConfigCsiAwsCluster{}
	return &this
}

// NewSecretStoreSpecConfigCsiAwsClusterWithDefaults instantiates a new SecretStoreSpecConfigCsiAwsCluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretStoreSpecConfigCsiAwsClusterWithDefaults() *SecretStoreSpecConfigCsiAwsCluster {
	this := SecretStoreSpecConfigCsiAwsCluster{}
	return &this
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *SecretStoreSpecConfigCsiAwsCluster) GetClusterName() string {
	if o == nil || isNil(o.ClusterName) {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretStoreSpecConfigCsiAwsCluster) GetClusterNameOk() (*string, bool) {
	if o == nil || isNil(o.ClusterName) {
		return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *SecretStoreSpecConfigCsiAwsCluster) HasClusterName() bool {
	if o != nil && !isNil(o.ClusterName) {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *SecretStoreSpecConfigCsiAwsCluster) SetClusterName(v string) {
	o.ClusterName = &v
}

// GetIrsa returns the Irsa field value if set, zero value otherwise.
func (o *SecretStoreSpecConfigCsiAwsCluster) GetIrsa() []Irsa {
	if o == nil || isNil(o.Irsa) {
		var ret []Irsa
		return ret
	}
	return o.Irsa
}

// GetIrsaOk returns a tuple with the Irsa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretStoreSpecConfigCsiAwsCluster) GetIrsaOk() ([]Irsa, bool) {
	if o == nil || isNil(o.Irsa) {
		return nil, false
	}
	return o.Irsa, true
}

// HasIrsa returns a boolean if a field has been set.
func (o *SecretStoreSpecConfigCsiAwsCluster) HasIrsa() bool {
	if o != nil && !isNil(o.Irsa) {
		return true
	}

	return false
}

// SetIrsa gets a reference to the given []Irsa and assigns it to the Irsa field.
func (o *SecretStoreSpecConfigCsiAwsCluster) SetIrsa(v []Irsa) {
	o.Irsa = v
}

// GetSecretProviderClasses returns the SecretProviderClasses field value if set, zero value otherwise.
func (o *SecretStoreSpecConfigCsiAwsCluster) GetSecretProviderClasses() []SecretProviderClassMeta {
	if o == nil || isNil(o.SecretProviderClasses) {
		var ret []SecretProviderClassMeta
		return ret
	}
	return o.SecretProviderClasses
}

// GetSecretProviderClassesOk returns a tuple with the SecretProviderClasses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretStoreSpecConfigCsiAwsCluster) GetSecretProviderClassesOk() ([]SecretProviderClassMeta, bool) {
	if o == nil || isNil(o.SecretProviderClasses) {
		return nil, false
	}
	return o.SecretProviderClasses, true
}

// HasSecretProviderClasses returns a boolean if a field has been set.
func (o *SecretStoreSpecConfigCsiAwsCluster) HasSecretProviderClasses() bool {
	if o != nil && !isNil(o.SecretProviderClasses) {
		return true
	}

	return false
}

// SetSecretProviderClasses gets a reference to the given []SecretProviderClassMeta and assigns it to the SecretProviderClasses field.
func (o *SecretStoreSpecConfigCsiAwsCluster) SetSecretProviderClasses(v []SecretProviderClassMeta) {
	o.SecretProviderClasses = v
}

func (o SecretStoreSpecConfigCsiAwsCluster) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretStoreSpecConfigCsiAwsCluster) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ClusterName) {
		toSerialize["clusterName"] = o.ClusterName
	}
	if !isNil(o.Irsa) {
		toSerialize["irsa"] = o.Irsa
	}
	if !isNil(o.SecretProviderClasses) {
		toSerialize["secretProviderClasses"] = o.SecretProviderClasses
	}
	return toSerialize, nil
}

type NullableSecretStoreSpecConfigCsiAwsCluster struct {
	value *SecretStoreSpecConfigCsiAwsCluster
	isSet bool
}

func (v NullableSecretStoreSpecConfigCsiAwsCluster) Get() *SecretStoreSpecConfigCsiAwsCluster {
	return v.value
}

func (v *NullableSecretStoreSpecConfigCsiAwsCluster) Set(val *SecretStoreSpecConfigCsiAwsCluster) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretStoreSpecConfigCsiAwsCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretStoreSpecConfigCsiAwsCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretStoreSpecConfigCsiAwsCluster(val *SecretStoreSpecConfigCsiAwsCluster) *NullableSecretStoreSpecConfigCsiAwsCluster {
	return &NullableSecretStoreSpecConfigCsiAwsCluster{value: val, isSet: true}
}

func (v NullableSecretStoreSpecConfigCsiAwsCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretStoreSpecConfigCsiAwsCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


